{"version":3,"sources":["assests/images/hero_bg.jpg","store/types.js","utils/constants.js","store/actions/allapi.js","assests/images/logo.jpeg","store/actions/users.js","components/Header.js","components/Footer.js","components/Modal.js","components/Input.js","components/FocusError.js","components/Loader.js","components/AdminLayout.js","components/CustomerLayout.js","components/Select.js","components/Textarea.js","assests/images/client1.png","assests/images/client2.png","assests/images/client3.png","assests/images/client4.png","assests/images/client5.png","components/Slider.js","components/Pagination.js","components/Search.js","components/NoData.js","components/ConfirmModal.js","pages/Home/index.js","assests/images/jcb.jpeg","assests/images/truck_image.png","pages/About/index.js","utils/validation.js","assests/images/customer.png","pages/Contact/index.js","assests/images/Red-truck.png","assests/images/hero_bg_2.jpg","pages/Login/index.js","pages/admin/Dashboard/index.js","pages/Services/index.js","pages/Terms/index.js","pages/admin/Profile/index.js","pages/NotFound/index.js","pages/admin/CountryManagement/index.js","pages/admin/MachineManagement/CapacityManagement.js","pages/admin/MachineManagement/TypesManangment.js","pages/admin/ContactLeads/index.js","pages/admin/EnquiryList/index.js","pages/admin/Orders/index.js","pages/admin/Users/index.js","pages/admin/MachineManagement/CategoryManagment.js","pages/admin/MachineManagement/index.js","pages/Customers/Orders/Orders.js","pages/Products/index.js","App.js","reportWebVitals.js","store/reducers/users.js","store/reducers/uiReducer.js","store/reducers/allapi.js","store/store.js","index.js"],"names":["SET_AUTHENTICATED","SET_UNAUTHENTICATED","SET_USER","SET_USERS","LOADING_USER","UPDATE_BLOCK","DELETE_USER","SET_ERRORS","LOADING_UI","CLEAR_ERRORS","STOP_LOADING_UI","TOGGLE_SIDEBAR","SHOW_SUCCESS","GET_COUNTRY","GET_LOCATIONS","ADD_COUNTRY","DELETE_PASSION","DELETE_SUBSCRIPTION","GET_CONTACT","ADD_ADVERTISMENT","DELETE_ADVERTISMENT","GET_USERS","EDIT_COUNTRY","EDIT_ADVERTISMENT","GET_MATCHES","GET_CAPACITY","ADD_CAPACITY","EDIT_CAPACITY","GET_TYPE","ADD_TYPE","EDIT_TYPE","GET_CATEGORY","ADD_CATEGORY","EDIT_CATEGORY","SELECT_IMAGE","GET_MACHINES","ADD_MACHINE","EDIT_MACHINE","GET_ORDERS","UPDATE_ORDERS_STATUS","GET_INQUIRY","API_URL","window","location","href","includes","ItemperPage","scopes","label","value","priceType","getCountries","dispatch","type","axios","get","then","res","payload","data","catch","err","response","getLocations","id","getCapacity","page","search","getType","getCategory","status","url","getMachines","console","log","uploadImage","file","a","formData","FormData","append","post","toast","success","message","position","POSITION","TOP_RIGHT","selectImage","getOrders","values","logoutUser","history","localStorage","removeItem","push","getUser","getItem","setAuthorizationHeader","setItem","accessToken","mapActionsToProps","withRouter","connect","state","user","allapi","useState","toggleMenu","setToggleMenu","Menu","className","to","onClick","target","aria-hidden","role","src","Logo","width","style","top","Footer","Modal","content","header","show","onClose","tabIndex","maxWidth","data-dismiss","aria-label","Input","props","error","showPassword","setShowPassword","paddingTop","fontSize","color","FocusError","useFormikContext","errors","isSubmitting","isValidating","useEffect","keys","Object","length","selector","errorElement","document","querySelector","focus","UI","loading","children","toggleChild","setToogleChild","data-toggle","data-placement","role_id","class","Boolean","SelectInput","isClearable","Textarea","LogoSlider","dots","infinite","speed","autoplay","slidesToShow","slidesToScroll","responsive","breakpoint","settings","client1","client2","client3","client4","client5","Component","Pagination","totalPage","activePage","updateActivePage","Array","apply","map","item","index","Search","searchValue","setSearchValue","handleClick","handleClear","isClicked","setIsClicked","onChange","e","placeholder","NoData","ConfirmModal","handleModal","handleClose","category","selectedImage","searchVal","showLogins","setLogins","showSignup","setShowSignup","backgroundImage","BannerBg","data-aos","data-stellar-background-ratio","data-aos-delay","category_name","category_image","About","BannerBg2","alt","onload","REQUIRED","addContact","hasSubmitted","setHasSubmitted","handleContact","enableReinitialize","initialValues","name","email","business_name","phone","validate","test","contactvalidator","validateOnChange","onSubmit","formikBag","field","touched","ContactIcon","height","border","allowfullscreen","loginUser","userData","isPopup","JSON","parse","msg","signinUser","forgetPassword","pathname","query","countries","locations","URLSearchParams","showSignUp","setShowSignUp","Truck","setFieldValue","first_name","last_name","password","confirm_password","company_name","whole_number","user_type","signUPValidator","formValues","country","dialCode","slice","loginValidator","margin","Dashboard","Services","backgroundPosition","data-pagespeed-url-hash","Terms","handleChangePassword","updateProfile","changePassword","setChangePassword","country_id","updatePassword","old_password","changePasswordValidator","location_id","profileValidator","NotFound","addCountry","editCountry","showModal","setShowModal","editValue","setEditValue","scope","country_code","countryValidator","addCapcity","editCapacity","capacity","setActivePage","changeStatus","setChangeStatus","checked","htmlFor","pageNo","capacityValidator","addType","editType","types","typesValidator","getContact","contacts","getInquiry","inquiry","phone_no","price_type","moment","delivery_date","format","requirment","created_at","updateStatus","put","orders","setSearch","setStatus","bodyData","order","order_date","delivery_location","order_id","getUsers","users","addCategory","editCategory","image","categoryValidator","files","addMachine","editMachine","machines","machine_number","machine_name","machine_image","description","product_id","machine_type_id","category_id","capacity_id","user_id","machineValidator","Select","options","find","option","saveOrders","headers","makeEnquiry","cartProducts","setCartProducts","showLogin","setShowLogin","activeStep","setActiveStep","orderInfo","setOrderInfo","showEnquiry","setShowEnquiry","myRef","useRef","executeScroll","ref","scrollTo","current","offsetTop","updteQuantity","quantity","clonedCart","reltedProductIndex","findIndex","splice","updateItemtoLocal","items","stringify","placeOrder","order_product","machine_product_id","placeInquiry","relatedProduct","pd","product","addToCart","min","Number","work_start_date","comments_remarks","order_scope","orderValidator","inquiryValidator","interceptors","use","config","Promise","reject","PrivateOnlyRoute","component","rest","render","token","defaults","CustomerRoute","WebisteRouter","App","baseURL","exact","path","Home","Contact","Login","Products","Profile","CustomerOrders","ContactLeads","CountryManagement","CapacityManagement","Orders","TypesManagment","CategoryManagment","EnquiryList","MachineManagement","Users","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","authenticated","credentials","matches","sidebarShow","sucesss","dashboard","reports","middleware","thunk","reducers","combineReducers","action","updateuser","filter","_id","isBlocked","updatedCountry","passions","updatedPassion","advertisment","updatedAdvertisment","subscriptions","updatedSubscriptions","capacityList","updatedCapacity","productsData","typeList","updatedTypes","categoryList","orderData","updatedOrder","enhancer","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","store","createStore","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.63d41d83.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/hero_bg.86b595d4.jpg\";","// User reducer types\nexport const SET_AUTHENTICATED = \"SET_AUTHENTICATED\";\nexport const SET_UNAUTHENTICATED = \"SET_UNAUTHENTICATED\";\nexport const SET_USER = \"SET_USER\";\nexport const SET_USERS = \"SET_USERS\";\nexport const LOADING_USER = \"LOADING_USER\";\nexport const MARK_NOTIFICATIONS_READ = \"MARK_NOTIFICATIONS_READ\";\nexport const UPDATE_BLOCK = \"UPDATE_BLOCK\";\nexport const DELETE_USER = \"DELETE_USER\";\nexport const SET_SINGLE_USERS = \"SET_SINGLE_USERS\";\n\n// UI reducer types\nexport const SET_ERRORS = \"SET_ERRORS\";\nexport const LOADING_UI = \"LOADING_UI\";\nexport const CLEAR_ERRORS = \"CLEAR_ERRORS\";\nexport const LOADING_DATA = \"LOADING_DATA\";\nexport const STOP_LOADING_UI = \"STOP_LOADING_UI\";\nexport const TOGGLE_SIDEBAR = \"TOGGLE_SIDEBAR\";\nexport const SHOW_SUCCESS = \"SHOW_SUCCESS\";\n\n// Data reducer types\nexport const GET_COUNTRY = \"GET_COUNTRY\";\nexport const GET_LOCATIONS = \"GET_LOCATIONS\";\nexport const ADD_COUNTRY = \"ADD_COUNTRY\";\nexport const DELETE_PASSION = \"DELETE_PASSION\";\nexport const DELETE_SUBSCRIPTION = \"DELETE_SUBSCRIPTION\";\nexport const GET_CONTACT = \"GET_CONTACT\";\nexport const ADD_ADVERTISMENT = \"ADD_ADVERTISMENT\";\nexport const DELETE_ADVERTISMENT = \"DELETE_ADVERTISMENT\";\nexport const GET_USERS = \"GET_USERS\";\nexport const EDIT_COUNTRY = \"EDIT_COUNTRY\";\nexport const EDIT_ADVERTISMENT = \"EDIT_ADVERTISMENT\";\nexport const GET_MATCHES = \"GET_MATCHES\";\nexport const GET_DASHBOARD = \"GET_DASHBOARD\";\nexport const GET_REPORT = \"GET_REPORT\";\nexport const GET_CAPACITY = \"GET_CAPACITY\";\nexport const ADD_CAPACITY = \"ADD_CAPACITY\";\nexport const EDIT_CAPACITY = \"EDIT_CAPACITY\";\nexport const GET_TYPE = \"GET_TYPE\";\nexport const ADD_TYPE = \"ADD_TYPE\";\nexport const EDIT_TYPE = \"EDIT_TYPE\";\nexport const GET_CATEGORY = \"GET_CATEGORY\";\nexport const ADD_CATEGORY = \"ADD_CATEGORY\";\nexport const EDIT_CATEGORY = \"EDIT_CATEGORY\";\nexport const SELECT_IMAGE = \"SELECT_IMAGE\";\nexport const GET_MACHINES = \"GET_MACHINES\";\nexport const ADD_MACHINE = \"ADD_MACHINE\";\nexport const EDIT_MACHINE = \"EDIT_MACHINE\";\nexport const GET_ORDERS = \"GET_ORDERS\";\nexport const UPDATE_ORDERS_STATUS = \"UPDATE_ORDERS_STATUS\";\nexport const GET_INQUIRY = \"GET_INQUIRY\";\n","export const API_URL = window.location.href.includes(\"localhost\")\n  ? \"http://3.87.191.94:3000/api\"\n  : \"/api\";\nexport const ItemperPage = 20;\n\nexport const scopes = [\n  {\n    label: \"Sand\",\n    value: \"Sand\",\n  },\n  {\n    label: \"Rock\",\n    value: \"Rock\",\n  },\n  {\n    label: \"Sabkha\",\n    value: \"Sabkha\",\n  },\n];\n\nexport const priceType = [\n  {\n    label: \"Monthly\",\n    value: \"Monthly\",\n  },\n  {\n    label: \"Weekly\",\n    value: \"Weekly\",\n  },\n  {\n    label: \"Daily\",\n    value: \"Daily\",\n  },\n];\n","import {\n  GET_COUNTRY,\n  SET_ERRORS,\n  CLEAR_ERRORS,\n  GET_LOCATIONS,\n  ADD_COUNTRY,\n  LOADING_UI,\n  GET_CONTACT,\n  GET_USERS,\n  GET_CAPACITY,\n  EDIT_COUNTRY,\n  ADD_CAPACITY,\n  EDIT_CAPACITY,\n  GET_TYPE,\n  ADD_TYPE,\n  EDIT_TYPE,\n  GET_CATEGORY,\n  ADD_CATEGORY,\n  EDIT_CATEGORY,\n  SELECT_IMAGE,\n  GET_MACHINES,\n  ADD_MACHINE,\n  EDIT_MACHINE,\n  GET_ORDERS,\n  UPDATE_ORDERS_STATUS,\n  GET_INQUIRY,\n} from \"../types\";\n\nimport axios from \"axios\";\nimport { toast } from \"react-toastify\";\nimport { ItemperPage } from \"../../utils/constants\";\nexport const getCountries = () => (dispatch) => {\n  dispatch({ type: LOADING_UI });\n\n  axios\n    .get(\"/country/get-country\")\n    .then((res) => {\n      dispatch({\n        type: GET_COUNTRY,\n        payload: res.data.data,\n      });\n\n      dispatch({ type: CLEAR_ERRORS });\n    })\n\n    .catch((err) => {\n      dispatch({\n        type: SET_ERRORS,\n        payload: err.response ? err.response.data : err.response,\n      });\n    });\n};\n\nexport const addContact = (values) => (dispatch) => {\n  dispatch({ type: LOADING_UI });\n  axios\n    .post(\"/user/contactUs\", values)\n    .then((res) => {\n      dispatch({ type: CLEAR_ERRORS });\n      return true;\n    })\n\n    .catch((err) => {\n      dispatch({\n        type: SET_ERRORS,\n        payload: err.response ? err.response.data : err.response,\n      });\n      toast.error(`Someting Went Wrong`, {\n        position: toast.POSITION.TOP_RIGHT,\n      });\n      return false;\n    });\n};\n\nexport const getLocations = (id) => (dispatch) => {\n  dispatch({ type: LOADING_UI });\n\n  axios\n    .get(\"/country/get-location?search=\" + id)\n    .then((res) => {\n      dispatch({\n        type: GET_LOCATIONS,\n        payload: res.data.data,\n      });\n\n      dispatch({ type: CLEAR_ERRORS });\n    })\n\n    .catch((err) => {\n      dispatch({\n        type: SET_ERRORS,\n        payload: err.response ? err.response.data : err.response,\n      });\n    });\n};\n\nexport const addCountry = (values) => (dispatch) => {\n  dispatch({ type: LOADING_UI });\n\n  axios\n    .post(\"/country/save\", values)\n    .then((res) => {\n      toast.success(`${res.data.message}`, {\n        position: toast.POSITION.TOP_RIGHT,\n      });\n      dispatch({\n        type: ADD_COUNTRY,\n        payload: res.data.data,\n      });\n      dispatch({ type: CLEAR_ERRORS });\n    })\n\n    .catch((err) => {\n      dispatch({\n        type: SET_ERRORS,\n        payload: err.response ? err.response.data : err.response,\n      });\n    });\n};\n\nexport const editCountry = (values) => (dispatch) => {\n  dispatch({ type: LOADING_UI });\n\n  axios\n    .post(\"/country/update\", values)\n    .then((res) => {\n      toast.success(`${res.data.message}`, {\n        position: toast.POSITION.TOP_RIGHT,\n      });\n      dispatch({\n        type: EDIT_COUNTRY,\n        payload: res.data.data,\n      });\n      dispatch({ type: CLEAR_ERRORS });\n    })\n\n    .catch((err) => {\n      dispatch({\n        type: SET_ERRORS,\n        payload: err.response ? err.response.data : err.response,\n      });\n    });\n};\n\nexport const getContact =\n  (page = 0) =>\n  (dispatch) => {\n    dispatch({ type: LOADING_UI });\n\n    axios\n      .get(\"/user/contactUsLists?page=\" + page + \"&size=\" + ItemperPage)\n      .then((res) => {\n        console.log(res);\n        dispatch({\n          type: GET_CONTACT,\n          payload: res.data.data,\n        });\n\n        dispatch({ type: CLEAR_ERRORS });\n      })\n\n      .catch((err) => {\n        dispatch({\n          type: SET_ERRORS,\n          payload: err.response ? err.response.data : err.response,\n        });\n      });\n  };\n\n// export const sendNotification = (data, history) => (dispatch) => {\n//   dispatch({ type: LOADING_UI });\n\n//   axios\n//     .post(\"/admin/send-notification\", data)\n//     .then((res) => {\n//       dispatch({ type: CLEAR_ERRORS });\n\n//       toast.info(`${res.data.message}`, {\n//         position: toast.POSITION.TOP_RIGHT,\n//       });\n//     })\n\n//     .catch((err) => {\n//       dispatch({\n//         type: SET_ERRORS,\n//         payload: err.response ? err.response.data : err.response,\n//       });\n//     });\n// };\n\nexport const getUsers =\n  (page = 0) =>\n  (dispatch) => {\n    dispatch({ type: LOADING_UI });\n\n    axios\n      .get(\"/user/usersLists?page=\" + page + \"&size=\" + ItemperPage)\n      .then((res) => {\n        dispatch({\n          type: GET_USERS,\n          payload: res.data.data,\n        });\n\n        dispatch({ type: CLEAR_ERRORS });\n      })\n\n      .catch((err) => {\n        dispatch({\n          type: SET_ERRORS,\n          payload: err.response ? err.response.data : err.response,\n        });\n      });\n  };\n\nexport const getCapacity =\n  (page = 0, search = \"\") =>\n  (dispatch) => {\n    dispatch({ type: LOADING_UI });\n\n    axios\n      .get(\n        \"/machine/get-capacity?page=\" +\n          page +\n          \"&size=\" +\n          ItemperPage +\n          \"&search=\" +\n          search\n      )\n      .then((res) => {\n        dispatch({\n          type: GET_CAPACITY,\n          payload: res.data.data,\n        });\n\n        dispatch({ type: CLEAR_ERRORS });\n      })\n\n      .catch((err) => {\n        dispatch({\n          type: SET_ERRORS,\n          payload: err.response ? err.response.data : err.response,\n        });\n      });\n  };\n\nexport const addCapcity = (values) => (dispatch) => {\n  dispatch({ type: LOADING_UI });\n\n  axios\n    .post(\"/machine/save-capacity\", values)\n    .then((res) => {\n      toast.success(`${res.data.message}`, {\n        position: toast.POSITION.TOP_RIGHT,\n      });\n      console.log(res.data.data);\n      dispatch({\n        type: ADD_CAPACITY,\n        payload: res.data.data,\n      });\n      dispatch({ type: CLEAR_ERRORS });\n    })\n\n    .catch((err) => {\n      dispatch({\n        type: SET_ERRORS,\n        payload: err.response ? err.response.data : err.response,\n      });\n    });\n};\n\nexport const editCapacity = (values) => (dispatch) => {\n  dispatch({ type: LOADING_UI });\n\n  axios\n    .post(\"/machine/update-capacity\", values)\n    .then((res) => {\n      toast.success(`${res.data.message}`, {\n        position: toast.POSITION.TOP_RIGHT,\n      });\n      dispatch({\n        type: EDIT_CAPACITY,\n        payload: values,\n      });\n      dispatch({ type: CLEAR_ERRORS });\n    })\n\n    .catch((err) => {\n      dispatch({\n        type: SET_ERRORS,\n        payload: err.response ? err.response.data : err.response,\n      });\n    });\n};\n\nexport const getType =\n  (page = 0, search = \"\") =>\n  (dispatch) => {\n    dispatch({ type: LOADING_UI });\n\n    axios\n      .get(\n        \"/machine/get-type?page=\" +\n          page +\n          \"&size=\" +\n          ItemperPage +\n          \"&search=\" +\n          search\n      )\n      .then((res) => {\n        dispatch({\n          type: GET_TYPE,\n          payload: res.data.data,\n        });\n\n        dispatch({ type: CLEAR_ERRORS });\n      })\n\n      .catch((err) => {\n        dispatch({\n          type: SET_ERRORS,\n          payload: err.response ? err.response.data : err.response,\n        });\n      });\n  };\n\nexport const addType = (values) => (dispatch) => {\n  dispatch({ type: LOADING_UI });\n\n  axios\n    .post(\"/machine/save-type\", values)\n    .then((res) => {\n      toast.success(`${res.data.message}`, {\n        position: toast.POSITION.TOP_RIGHT,\n      });\n      console.log(res.data.data);\n      dispatch({\n        type: ADD_TYPE,\n        payload: res.data.data,\n      });\n      dispatch({ type: CLEAR_ERRORS });\n    })\n\n    .catch((err) => {\n      dispatch({\n        type: SET_ERRORS,\n        payload: err.response ? err.response.data : err.response,\n      });\n    });\n};\n\nexport const editType = (values) => (dispatch) => {\n  dispatch({ type: LOADING_UI });\n\n  axios\n    .post(\"/machine/update-type\", values)\n    .then((res) => {\n      toast.success(`${res.data.message}`, {\n        position: toast.POSITION.TOP_RIGHT,\n      });\n      dispatch({\n        type: EDIT_TYPE,\n        payload: values,\n      });\n      dispatch({ type: CLEAR_ERRORS });\n    })\n\n    .catch((err) => {\n      dispatch({\n        type: SET_ERRORS,\n        payload: err.response ? err.response.data : err.response,\n      });\n    });\n};\n\nexport const getCategory =\n  (page = 0, search = \"\", status) =>\n  (dispatch) => {\n    dispatch({ type: LOADING_UI });\n    var url =\n      \"/machine/get-category?page=\" +\n      page +\n      \"&size=\" +\n      ItemperPage +\n      \"&search=\" +\n      search;\n    if (status) {\n      url = url + \"&status=\" + status;\n    }\n    axios\n      .get(url)\n      .then((res) => {\n        dispatch({\n          type: GET_CATEGORY,\n          payload: res.data.data,\n        });\n        dispatch({ type: CLEAR_ERRORS });\n        return res;\n      })\n\n      .catch((err) => {\n        dispatch({\n          type: SET_ERRORS,\n          payload: err.response ? err.response.data : err.response,\n        });\n      });\n  };\n\nexport const addCategory = (values) => (dispatch) => {\n  dispatch({ type: LOADING_UI });\n\n  axios\n    .post(\"/machine/save-category\", values)\n    .then((res) => {\n      toast.success(`${res.data.message}`, {\n        position: toast.POSITION.TOP_RIGHT,\n      });\n      console.log(res.data.data);\n      dispatch({\n        type: ADD_CATEGORY,\n        payload: res.data.data,\n      });\n      dispatch({ type: CLEAR_ERRORS });\n    })\n\n    .catch((err) => {\n      dispatch({\n        type: SET_ERRORS,\n        payload: err.response ? err.response.data : err.response,\n      });\n    });\n};\n\nexport const editCategory = (values) => (dispatch) => {\n  dispatch({ type: LOADING_UI });\n\n  axios\n    .post(\"/machine/update-category\", values)\n    .then((res) => {\n      toast.success(`${res.data.message}`, {\n        position: toast.POSITION.TOP_RIGHT,\n      });\n      dispatch({\n        type: EDIT_CATEGORY,\n        payload: values,\n      });\n      dispatch({ type: CLEAR_ERRORS });\n    })\n\n    .catch((err) => {\n      dispatch({\n        type: SET_ERRORS,\n        payload: err.response ? err.response.data : err.response,\n      });\n    });\n};\n\nexport const getMachines =\n  (page = 0, search = \"\", status) =>\n  (dispatch) => {\n    dispatch({ type: LOADING_UI });\n    var url =\n      \"/product/product-lists?page=\" +\n      page +\n      \"&size=\" +\n      ItemperPage +\n      \"&search=\" +\n      search;\n    if (status) {\n      url = url + \"&status=\" + status;\n    }\n\n    axios\n      .get(url)\n      .then((res) => {\n        console.log(res.data);\n        dispatch({\n          type: GET_MACHINES,\n          payload: res.data.data,\n        });\n        dispatch({ type: CLEAR_ERRORS });\n      })\n\n      .catch((err) => {\n        dispatch({\n          type: SET_ERRORS,\n          payload: err.response ? err.response.data : err.response,\n        });\n      });\n  };\n\nexport const addMachine = (values) => (dispatch) => {\n  dispatch({ type: LOADING_UI });\n\n  axios\n    .post(\"/product/add-product\", values)\n    .then((res) => {\n      toast.success(`${res.data.message}`, {\n        position: toast.POSITION.TOP_RIGHT,\n      });\n      console.log(res.data.data);\n      dispatch({\n        type: ADD_MACHINE,\n        payload: res.data,\n      });\n      dispatch({ type: CLEAR_ERRORS });\n    })\n\n    .catch((err) => {\n      dispatch({\n        type: SET_ERRORS,\n        payload: err.response ? err.response.data : err.response,\n      });\n    });\n};\n\nexport const editMachine = (values) => (dispatch) => {\n  dispatch({ type: LOADING_UI });\n\n  axios\n    .post(\"/product/update-product\", values)\n    .then((res) => {\n      toast.success(`${res.data.message}`, {\n        position: toast.POSITION.TOP_RIGHT,\n      });\n      dispatch({\n        type: EDIT_MACHINE,\n        payload: values,\n      });\n      dispatch({ type: CLEAR_ERRORS });\n    })\n\n    .catch((err) => {\n      dispatch({\n        type: SET_ERRORS,\n        payload: err.response ? err.response.data : err.response,\n      });\n    });\n};\n\nexport const uploadImage = (file) => async (dispatch) => {\n  dispatch({ type: LOADING_UI });\n  var formData = new FormData();\n  formData.append(\"file\", file);\n  await axios\n    .post(\"/machine/upload-image\", formData)\n    .then((res) => {\n      toast.success(`${res.data.message}`, {\n        position: toast.POSITION.TOP_RIGHT,\n      });\n      dispatch({\n        type: SELECT_IMAGE,\n        payload: res.data.data.file,\n      });\n      dispatch({ type: CLEAR_ERRORS });\n      return res;\n    })\n\n    .catch((err) => {\n      dispatch({\n        type: SET_ERRORS,\n        payload: err.response ? err.response.data : err.response,\n      });\n    });\n};\n\nexport const selectImage = (data) => async (dispatch) => {\n  dispatch({\n    type: SELECT_IMAGE,\n    payload: data,\n  });\n};\n\nexport const saveOrders = (values) => (dispatch) => {\n  dispatch({ type: LOADING_UI });\n  const token = localStorage.getItem(\"access_token\");\n  const headers = {\n    \"Content-Type\": \"application/json\",\n    \"x-access-token\": token,\n  };\n  axios\n    .post(\"/machine/save-order\", values, {\n      headers: headers,\n    })\n    .then((res) => {\n      toast.success(`${res.data.message}`, {\n        position: toast.POSITION.TOP_RIGHT,\n      });\n      localStorage.removeItem(\"cart_items\");\n      dispatch({ type: CLEAR_ERRORS });\n    })\n\n    .catch((err) => {\n      dispatch({\n        type: SET_ERRORS,\n        payload: err.response ? err.response.data : err.response,\n      });\n    });\n};\n\nexport const getOrders =\n  (values, search = \"\") =>\n  (dispatch) => {\n    dispatch({ type: LOADING_UI });\n\n    axios\n      .post(\"/machine/orders?search=\" + search, values)\n      .then((res) => {\n        dispatch({\n          type: GET_ORDERS,\n          payload: res.data.data,\n        });\n\n        dispatch({ type: CLEAR_ERRORS });\n      })\n\n      .catch((err) => {\n        dispatch({\n          type: SET_ERRORS,\n          payload: err.response ? err.response.data : err.response,\n        });\n      });\n  };\n\nexport const updateStatus = (values) => (dispatch) => {\n  dispatch({ type: LOADING_UI });\n\n  axios\n    .put(\"/machine/change-order-status\", values)\n    .then((res) => {\n      toast.success(`${res.data.message}`, {\n        position: toast.POSITION.TOP_RIGHT,\n      });\n      dispatch({\n        type: UPDATE_ORDERS_STATUS,\n        payload: values,\n      });\n      dispatch({ type: CLEAR_ERRORS });\n    })\n\n    .catch((err) => {\n      dispatch({\n        type: SET_ERRORS,\n        payload: err.response ? err.response.data : err.response,\n      });\n    });\n};\n\nexport const makeEnquiry = (values) => (dispatch) => {\n  dispatch({ type: LOADING_UI });\n  const token = localStorage.getItem(\"access_token\");\n  const headers = {\n    \"Content-Type\": \"application/json\",\n    \"x-access-token\": token,\n  };\n  axios\n    .post(\"/product/inquiry\", values, {\n      headers: headers,\n    })\n    .then((res) => {\n      toast.success(`${res.data.message}`, {\n        position: toast.POSITION.TOP_RIGHT,\n      });\n      localStorage.removeItem(\"cart_items\");\n      dispatch({ type: CLEAR_ERRORS });\n    })\n\n    .catch((err) => {\n      dispatch({\n        type: SET_ERRORS,\n        payload: err.response ? err.response.data : err.response,\n      });\n    });\n};\n\nexport const getInquiry = (values) => (dispatch) => {\n  dispatch({ type: LOADING_UI });\n\n  axios\n    .post(\"/product/inquiry/list\", values)\n    .then((res) => {\n      dispatch({\n        type: GET_INQUIRY,\n        payload: res.data.data,\n      });\n\n      dispatch({ type: CLEAR_ERRORS });\n    })\n\n    .catch((err) => {\n      dispatch({\n        type: SET_ERRORS,\n        payload: err.response ? err.response.data : err.response,\n      });\n    });\n};\n","export default __webpack_public_path__ + \"static/media/logo.61f4974d.jpeg\";","import {\n  SET_USER,\n  SET_USERS,\n  SET_ERRORS,\n  CLEAR_ERRORS,\n  LOADING_UI,\n  SET_UNAUTHENTICATED,\n} from \"../types\";\n\nimport axios from \"axios\";\nimport { toast } from \"react-toastify\";\n\nexport const loginUser =\n  (userData, history, isPopup, handleClick) => (dispatch) => {\n    dispatch({ type: LOADING_UI });\n\n    axios\n      .post(\"/user/signIn\", userData)\n      .then((res) => {\n        setAuthorizationHeader({ ...res.data, role_id: userData.role_id });\n\n        if (!isPopup) {\n          history.push(\"/dashboard\");\n        } else {\n          handleClick();\n        }\n        dispatch({ type: CLEAR_ERRORS });\n      })\n\n      .catch((err) => {\n        var errors = JSON.parse(err.response.data.error).errors;\n        dispatch({\n          type: SET_ERRORS,\n          payload: err.response ? err.response.data : err.response,\n        });\n        console.log(err);\n        toast.error(`${errors[0].msg}`, {\n          position: toast.POSITION.TOP_RIGHT,\n        });\n      });\n  };\n\nexport const updateProfile = (userData, history) => (dispatch) => {\n  dispatch({ type: LOADING_UI });\n\n  axios\n    .post(\"/user/updateProfile\", userData)\n    .then((res) => {\n      dispatch({\n        type: SET_USERS,\n        payload: res.data.data,\n      });\n      toast.success(`${res.data.message}`, {\n        position: toast.POSITION.TOP_RIGHT,\n      });\n      dispatch({ type: CLEAR_ERRORS });\n    })\n\n    .catch((err) => {\n      var errors = JSON.parse(err.response.data.error).errors;\n      dispatch({\n        type: SET_ERRORS,\n        payload: err.response ? err.response.data : err.response,\n      });\n      console.log(err);\n      toast.error(`${errors[0].msg}`, {\n        position: toast.POSITION.TOP_RIGHT,\n      });\n    });\n};\nexport const signinUser =\n  (userData, history, isPopup, handleClick) => (dispatch) => {\n    dispatch({ type: LOADING_UI });\n\n    axios\n      .post(\"/user/signup\", userData)\n      .then((res) => {\n        setAuthorizationHeader({ ...res.data, role_id: userData.role_id });\n        if (!isPopup) {\n          history.push(\"/login?signin=1\");\n        } else {\n          handleClick();\n        }\n        dispatch({ type: CLEAR_ERRORS });\n      })\n\n      .catch((err) => {\n        var errors = JSON.parse(err.response.data.error).errors;\n        dispatch({\n          type: SET_ERRORS,\n          payload: err.response ? err.response.data : err.response,\n        });\n        console.log(err);\n        toast.error(`${errors[0].msg}`, {\n          position: toast.POSITION.TOP_RIGHT,\n        });\n      });\n  };\n\nexport const logoutUser = (history) => (dispatch) => {\n  dispatch({ type: LOADING_UI });\n\n  axios\n    .post(\"/user/logout\")\n    .then((res) => {\n      localStorage.removeItem(\"access_token\");\n      history.push(\"/login\");\n      dispatch({ type: CLEAR_ERRORS });\n      dispatch({ type: SET_UNAUTHENTICATED });\n    })\n\n    .catch((err) => {\n      localStorage.removeItem(\"access_token\");\n\n      history.push(\"/login\");\n      dispatch({ type: CLEAR_ERRORS });\n\n      //var errors = JSON.parse(err.response.data.error).errors;\n      // dispatch({\n      //   type: SET_ERRORS,\n      //   payload: err.response ? err.response.data : err.response,\n      // });\n      // console.log(err);\n      // toast.error(`${errors[0].msg}`, {\n      //   position: toast.POSITION.TOP_RIGHT,\n      // });\n    });\n};\n\nexport const getUser =\n  (name = \"1\", gender, paid) =>\n  (dispatch) => {\n    dispatch({ type: LOADING_UI });\n    if (localStorage.getItem(\"access_token\")) {\n      axios\n        .get(\"/user/getProfile\")\n        .then((res) => {\n          dispatch({\n            type: SET_USERS,\n            payload: res.data.data,\n          });\n          dispatch({ type: CLEAR_ERRORS });\n        })\n\n        .catch((err) => {\n          // var errors = JSON.parse(err.response.data.error).errors;\n          // dispatch({\n          //   type: SET_ERRORS,\n          //   payload: err.response ? err.response.data : err.response,\n          // });\n          // console.log(err);\n          // toast.error(`${errors[0].msg}`, {\n          //   position: toast.POSITION.TOP_RIGHT,\n          // });\n        });\n    }\n  };\n\nexport const handleChangePassword = (userData) => (dispatch) => {\n  dispatch({ type: LOADING_UI });\n\n  axios\n    .post(\"/user/changePassword\", userData)\n    .then((res) => {\n      dispatch({ type: CLEAR_ERRORS });\n      toast.success(`${res.data.message}`, {\n        position: toast.POSITION.TOP_RIGHT,\n      });\n    })\n\n    .catch((err) => {\n      dispatch({\n        type: SET_ERRORS,\n        payload: err.response ? err.response.data : err.response,\n      });\n    });\n};\n\nexport const forgetPassword = (userData) => (dispatch) => {\n  dispatch({ type: LOADING_UI });\n\n  axios\n    .post(\"/user/forgotPassword\", userData)\n    .then((res) => {\n      dispatch({ type: CLEAR_ERRORS });\n      toast.success(`${res.data.message}`, {\n        position: toast.POSITION.TOP_RIGHT,\n      });\n    })\n\n    .catch((err) => {\n      dispatch({\n        type: SET_ERRORS,\n        payload: err.response ? err.response.data : err.response,\n      });\n    });\n};\n\nconst setAuthorizationHeader = (data) => {\n  localStorage.setItem(\"access_token\", data.data.accessToken);\n};\n","import React, { useState } from \"react\";\nimport Logo from \"../assests/images/logo.jpeg\";\nimport { NavLink, Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { logoutUser, getUser } from \"../store/actions/users\";\nimport { withRouter } from \"react-router-dom\";\nfunction Header({ user: { user }, logoutUser, history }) {\n  const [toggleMenu, setToggleMenu] = useState(false);\n\n  const Menu = (\n    <>\n      <li className=\"active\">\n        <NavLink to=\"/\">Home</NavLink>\n      </li>\n      <li>\n        <NavLink to=\"/about\">About Us</NavLink>\n      </li>\n      <li className=\"has-children\">\n        <NavLink to=\"/services\">Services</NavLink>\n        <ul className=\"dropdown\">\n          <li>\n            <a href=\"#\">Logistics</a>\n          </li>\n          <li>\n            <a href=\"#\">Marketplace</a>\n          </li>\n        </ul>\n      </li>\n\n      <li>\n        <NavLink to=\"/contact\">Contact</NavLink>\n      </li>\n      {!user ? (\n        <>\n          <li>\n            <Link\n              to=\"/login?role_id=1\"\n              target=\"_blank\"\n              className=\"btn btn-primary text-white\"\n            >\n              <i className=\"fa fa-user\" aria-hidden=\"true\"></i>\n              Login\n            </Link>\n          </li>\n          <li>\n            <Link\n              to=\"/register?role_id=1\"\n              className=\"btn btn-primary text-white\"\n            >\n              <i className=\"fa fa-sign-in\" aria-hidden=\"true\"></i>\n              Register\n            </Link>\n          </li>\n        </>\n      ) : (\n        <>\n          <li className=\"nav-item\">\n            <a\n              className=\"nav-link\"\n              onClick={() => {\n                history.push(\"/profile\");\n              }}\n            >\n              <i className=\"fa fa-fw fa-user\" />\n              My Profile\n            </a>\n          </li>\n          <li className=\"nav-item\">\n            <a\n              className=\"nav-link\"\n              onClick={() => {\n                logoutUser(history);\n              }}\n            >\n              <i className=\"fa fa-fw fa-sign-out\" />\n              Logout\n            </a>\n          </li>\n        </>\n      )}\n    </>\n  );\n  return (\n    <div className=\"site-wrap\">\n      <div className=\"site-mobile-menu\">\n        <div className=\"site-mobile-menu-header\">\n          <div className=\"site-mobile-menu-close mt-3\">\n            <span className=\"icon-close2 js-menu-toggle\" />\n          </div>\n        </div>\n        <div className=\"site-mobile-menu-body\" />\n      </div>\n      <header className=\"site-navbar py-3\" role=\"banner\">\n        <div className=\"container\">\n          <div className=\"row align-items-center\">\n            <div className=\"col-11 col-xl-2\">\n              <h1 className=\"mb-0\">\n                <Link to=\"/\" className=\"text-white h2 mb-0\">\n                  <img src={Logo} width=\"200\" />\n                </Link>\n              </h1>\n            </div>\n            <div className=\"col-12 col-md-10 d-none d-xl-block\">\n              <nav\n                className=\"site-navigation position-relative text-right\"\n                role=\"navigation\"\n              >\n                <ul className=\"site-menu js-clone-nav mx-auto d-none d-lg-block\">\n                  {Menu}\n                </ul>\n              </nav>\n            </div>\n            <div\n              className=\"d-inline-block d-xl-none ml-md-0 mr-auto py-3\"\n              style={{ position: \"relative\", top: \"3px\" }}\n            >\n              <a\n                href=\"#\"\n                onClick={() => setToggleMenu(!toggleMenu)}\n                className=\"site-menu-toggle js-menu-toggle\"\n              >\n                <span className=\"icon-menu h3\" />\n              </a>\n            </div>\n          </div>\n        </div>\n      </header>\n      {toggleMenu && (\n        <div className=\"mobile-menu container\">\n          <ul>{Menu}</ul>\n        </div>\n      )}\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => ({\n  user: state.user,\n  allapi: state.allapi,\n});\n\nconst mapActionsToProps = {\n  getUser,\n  logoutUser,\n};\n\nexport default withRouter(connect(mapStateToProps, mapActionsToProps)(Header));\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nexport default function Footer() {\n  return (\n    <footer className=\"site-footer\">\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-md-12\">\n            <div className=\"row\">\n              <div className=\"col-md-6\">\n                <h2 className=\"footer-heading mb-4\">Quick Links</h2>\n                <ul className=\"list-unstyled\">\n                <li>\n                    <Link to=\"/\">Home</Link>\n                  </li>\n                  <li>\n                    <Link to=\"/about\">About Us</Link>\n                  </li>\n                  <li>\n                  <Link to=\"/service\">Services</Link>\n                  </li>\n                 \n                  <li>\n                  <Link to=\"/contact\">Contact Us</Link>\n                  </li>\n                </ul>\n              </div>\n              \n              <div className=\"col-md-6\">\n                <h2 className=\"footer-heading mb-4\">Follow Us</h2>\n                <a href=\"#\" className=\"pl-0 pr-3\">\n                  <span className=\"icon-facebook\" />\n                </a>\n                <a href=\"#\" className=\"pl-3 pr-3\">\n                  <span className=\"icon-twitter\" />\n                </a>\n                <a href=\"#\" className=\"pl-3 pr-3\">\n                  <span className=\"icon-instagram\" />\n                </a>\n                <a href=\"#\" className=\"pl-3 pr-3\">\n                  <span className=\"icon-linkedin\" />\n                </a>\n              </div>\n            </div>\n          </div>\n          \n        </div>\n        <div className=\"row  text-center\">\n          <div className=\"col-md-12\">\n            <div className=\"border-top pt-5\">\n              <p>\n                © 2021 <Link to=\"/\">Lokator</Link> All rights reserved\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </footer>\n  );\n}\n","import React from \"react\";\nimport Logo from \"../assests/images/logo.jpeg\";\nimport { NavLink, Link } from \"react-router-dom\";\n\nexport default function Modal({content,header,width=400,show,onClose}) {\n  return (\n      <>\n      {show && (\n    <div  className={`modal ${show && \"fade show\"}`} tabIndex={-1} role=\"dialog\" >\n    <div  onClick={onClose} className={`modal-backdrop fade ${show && \" show\"}`}></div>\n        <div className=\"modal-dialog modal-dialog-centered\" role=\"document\" style={{maxWidth:width}}>\n          <div className=\"modal-content\">\n              \n              {header && (\n            <div className=\"modal-header\">\n                <h3>{header}</h3>\n              <button type=\"button\" onClick={onClose} className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                <span aria-hidden=\"true\">×</span>\n              </button>\n            </div>)}\n            <div className=\"modal-body\">\n              {content}\n            </div>\n            \n          </div>\n        </div>\n        \n      </div>\n      )}\n     \n      </>\n      \n  );\n}\n\n\n","import React,{useState} from 'react'\n\nexport default function Input(props) {\n    const {error,type} = props;\n    const [showPassword,setShowPassword] = useState(false)\n    return (\n      <>\n        <div  className=\"input_box\">\n        <input {...props} type={type ? (showPassword ? \"text\" : type) : \"text\"} />\n        {type === \"password\"  ? (\n          <i onClick={() => setShowPassword(!showPassword)} className={`fa ${!showPassword?\"fa-eye\":\"fa-eye-slash\"}`}>\n            \n          </i>\n        ) : (\n          \"\"\n        )}\n        </div>\n        {error ? (\n          <p  \n          style={{ paddingTop: 5,\n          fontSize:13,\n          color:\"red\" }}>\n            {error}\n          </p>\n        ) : null}\n      </>\n    );\n}\n","import React, { useEffect } from \"react\";\nimport { useFormikContext } from \"formik\";\n\nconst FocusError = () => {\n  const { errors, isSubmitting, isValidating } = useFormikContext();\n\n  useEffect(() => {\n    if (isSubmitting && !isValidating) {\n      let keys = Object.keys(errors);\n      if (keys.length > 0) {\n        const selector = `[name=${keys[0]}]`;\n        const errorElement = document.querySelector(selector);\n        if (errorElement) {\n          errorElement.focus();\n        }\n      }\n    }\n  }, [errors, isSubmitting, isValidating]);\n\n  return null;\n};\n\nexport default FocusError;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nfunction Loader(props) {\n  const { UI } = props;\n  return UI.loading ? (\n    <div className=\"css-loader\">\n      <div className=\"lds-roller\"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div>\n    </div>\n  ) : null;\n}\n\nconst mapStateToProps = (state) => ({\n  UI: state.UI,\n});\n\nexport default connect(mapStateToProps)(Loader);\n","import React, { Component, useState, useEffect } from \"react\";\nimport \"../assests/scss/admin.scss\";\nimport { withRouter } from \"react-router\";\nimport { logoutUser, getUser } from \"../store/actions/users\";\nimport { Link, NavLink } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { get } from \"lodash\";\nconst AdminLayout = ({\n  children,\n  history,\n  logoutUser,\n  getUser,\n  user: { user },\n}) => {\n  const [showLogins, setLogins] = useState(false);\n  const [showSignup, setShowSignup] = useState(false);\n  const [toggleChild, setToogleChild] = useState(false);\n\n  useEffect(() => {\n    getUser();\n  }, []);\n  return (\n    <div>\n      {/* Navigation*/}\n      <nav\n        className=\"navbar navbar-expand-lg navbar-dark bg-dark fixed-top\"\n        id=\"mainNav\"\n      >\n        <Link className=\"navbar-brand\" to=\"/\">\n          Lokator\n        </Link>\n\n        <div className=\"collapse navbar-collapse\" id=\"navbarResponsive\">\n          <ul className=\"navbar-nav navbar-sidenav\" id=\"exampleAccordion\">\n            <li\n              className=\"nav-item\"\n              data-toggle=\"tooltip\"\n              data-placement=\"right\"\n            >\n              <NavLink className=\"nav-link\" to=\"/dashboard\">\n                <i className=\"fa fa-fw fa-dashboard\" />\n                <span className=\"nav-link-text\">Dashboard</span>\n              </NavLink>\n              {user?.role_id == 0 && (\n                <>\n                  <NavLink className=\"nav-link\" to=\"/orders\">\n                    <i className=\"fa fa-cart-arrow-down\" />\n                    <span className=\"nav-link-text\">Orders</span>\n                  </NavLink>\n\n                  <NavLink className=\"nav-link\" to=\"/contact-leads\">\n                    <i className=\"fa fa-fw fa-address-card\" />\n                    <span className=\"nav-link-text\">Contact Leads</span>\n                  </NavLink>\n                  <NavLink className=\"nav-link\" to=\"/inquiries\">\n                    <i className=\"fa fa-fw fa-info-circle\" />\n                    <span className=\"nav-link-text\">Inquiries</span>\n                  </NavLink>\n                  <NavLink className=\"nav-link\" to=\"/users-list\">\n                    <i className=\"fa fa-fw fa-users\" />\n                    <span className=\"nav-link-text\">User List</span>\n                  </NavLink>\n\n                  <button\n                    className=\"nav-link\"\n                    onClick={() => setToogleChild(!toggleChild)}\n                  >\n                    <i class=\"fa fa-industry\"></i>\n                    <span className=\"nav-link-text\">Machine Management</span>\n                    <i\n                      className={`fa  ${\n                        toggleChild ? \"fa-caret-down\" : \"fa-caret-right\"\n                      } btn-arrow`}\n                    ></i>\n                  </button>\n                  {toggleChild && (\n                    <ul className=\"btn-toggle-nav list-unstyled fw-normal pb-1 child-menu\">\n                      <li>\n                        <NavLink to=\"/capacity-management\">Capacity</NavLink>\n                      </li>\n                      <li>\n                        <NavLink to=\"/types-management\">Types</NavLink>\n                      </li>\n                      <li>\n                        <NavLink to=\"/category-management\">Category</NavLink>\n                      </li>\n                      <li>\n                        <NavLink to=\"/machines\">Machines</NavLink>\n                      </li>\n                    </ul>\n                  )}\n                </>\n              )}\n            </li>\n            {user?.role_id == 1 && (\n              <>\n                <li\n                  className=\"nav-item\"\n                  data-toggle=\"tooltip\"\n                  data-placement=\"right\"\n                >\n                  <NavLink className=\"nav-link\" to=\"/customer-orders\">\n                    <i className=\"fa fa-cart-arrow-down\" />\n                    <span className=\"nav-link-text\">Orders</span>\n                  </NavLink>\n                </li>\n              </>\n            )}\n          </ul>\n\n          <ul className=\"navbar-nav ml-auto\">\n            <li className=\"nav-item\">\n              <span className=\"user_name\">\n                {get(user, \"first_name\", \"\")} {get(user, \"last_name\", \"\")}\n              </span>\n            </li>\n            <li className=\"nav-item\">\n              <a\n                className=\"nav-link\"\n                onClick={() => {\n                  history.push(\"/profile\");\n                }}\n              >\n                <i className=\"fa fa-fw fa-user\" />\n                My Profile\n              </a>\n            </li>\n            <li className=\"nav-item\">\n              <a\n                className=\"nav-link\"\n                onClick={() => {\n                  logoutUser(history);\n                }}\n              >\n                <i className=\"fa fa-fw fa-sign-out\" />\n                Logout\n              </a>\n            </li>\n          </ul>\n        </div>\n      </nav>\n      <div className=\"content-wrapper\">\n        <div className=\"container-fluid\">{children}</div>\n        {/* /.container-fluid*/}\n        {/* /.content-wrapper*/}\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  user: state.user,\n  allapi: state.allapi,\n});\n\nconst mapActionsToProps = {\n  getUser,\n  logoutUser,\n};\n\nexport default withRouter(\n  connect(mapStateToProps, mapActionsToProps)(AdminLayout)\n);\n","import React, { Component, useState, useEffect } from \"react\";\nimport \"../assests/scss/admin.scss\";\nimport { withRouter } from \"react-router\";\nimport { logoutUser, getUser } from \"../store/actions/users\";\nimport { Link, NavLink } from \"react-router-dom\";\nimport Logo from \"../assests/images/logo.jpeg\";\nimport { connect } from \"react-redux\";\nimport { get } from \"lodash\";\nconst CustomerLayout = ({\n  children,\n  history,\n  logoutUser,\n  getUser,\n  user: { user },\n}) => {\n  const [showLogins, setLogins] = useState(false);\n  const [showSignup, setShowSignup] = useState(false);\n  const [toggleChild, setToogleChild] = useState(false);\n\n  useEffect(() => {\n    getUser();\n  }, []);\n  return (\n    <div>\n      {/* Navigation*/}\n      <nav\n        className=\"navbar navbar-expand-lg navbar-dark bg-dark fixed-top customer-layout\"\n        id=\"mainNav\"\n      >\n        <Link to=\"/\">\n          <img width=\"250\" src={Logo} />\n        </Link>\n        <div className=\"collapse navbar-collapse\" id=\"navbarResponsive\">\n          <ul className=\"navbar-nav navbar-sidenav\" id=\"exampleAccordion\">\n            <li>\n              <div className=\"logo_group\"></div>\n            </li>\n            {/* <li className=\"nav-item\">\n              <NavLink className=\"nav-link\" to=\"/customer-dashboard\">\n                <i className=\"fa fa-fw fa-dashboard\" />\n                <span className=\"nav-link-text\">Dashboard</span>\n              </NavLink>\n            </li> */}\n            <li className=\"nav-item\">\n              <NavLink className=\"nav-link\" to=\"/products\">\n                <i className=\"fa  fa-truck\" />\n                <span className=\"nav-link-text\">Products</span>\n              </NavLink>\n            </li>\n          </ul>\n\n          <ul className=\"navbar-nav ml-auto\">\n            {Boolean(user) ? (\n              <>\n                <li className=\"nav-item\">\n                  <span className=\"user_name\">\n                    {get(user, \"user.first_name\", \"\")}{\" \"}\n                    {get(user, \"user.last_name\", \"\")}\n                  </span>\n                </li>\n                <li className=\"nav-item\">\n                  <a\n                    className=\"nav-link\"\n                    onClick={() => {\n                      history.push(\"/profile\");\n                    }}\n                  >\n                    <i className=\"fa fa-fw fa-user\" />\n                    My Profile\n                  </a>\n                </li>\n                <li className=\"nav-item\">\n                  <a\n                    className=\"nav-link\"\n                    onClick={() => {\n                      history.push(\"/customer-orders\");\n                    }}\n                  >\n                    <i className=\"fa fa-fw fa-user\" />\n                    My Orders\n                  </a>\n                </li>\n                <li className=\"nav-item\">\n                  <a\n                    className=\"nav-link\"\n                    onClick={() => {\n                      logoutUser(history);\n                    }}\n                  >\n                    <i className=\"fa fa-fw fa-sign-out\" />\n                    Logout\n                  </a>\n                </li>\n              </>\n            ) : (\n              <>\n                <li className=\"nav-item\">\n                  <a\n                    className=\"nav-link\"\n                    onClick={() => {\n                      logoutUser(history);\n                    }}\n                  >\n                    <i className=\"fa fa-user\" />\n                    Login\n                  </a>\n                </li>\n                <li className=\"nav-item\">\n                  <a\n                    className=\"nav-link\"\n                    onClick={() => {\n                      logoutUser(history);\n                    }}\n                  >\n                    <i className=\"fa fa-sign-in\" />\n                    Sign in\n                  </a>\n                </li>\n              </>\n            )}\n          </ul>\n        </div>\n      </nav>\n      <div className=\"content-wrapper customer-layout\">\n        <div className=\"container-fluid\">{children}</div>\n        {/* /.container-fluid*/}\n        {/* /.content-wrapper*/}\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  user: state.user,\n  allapi: state.allapi,\n});\n\nconst mapActionsToProps = {\n  getUser,\n  logoutUser,\n};\n\nexport default withRouter(\n  connect(mapStateToProps, mapActionsToProps)(CustomerLayout)\n);\n","import React from \"react\";\nimport Select from \"react-select\";\n\nfunction SelectInput(props) {\n  const { error } = props;\n  return (\n    <div>\n      <Select\n        isClearable\n        \n        {...props}\n      />\n      {error ? (\n        <p style={{ paddingTop: 5, fontSize: 13, color: \"red\" }}>{error}</p>\n      ) : null}\n    </div>\n  );\n}\n\nexport default SelectInput;\n","import React from 'react'\n\nexport default function Textarea(props) {\n    const {error} = props;\n    return (\n      <>\n        <textarea {...props} />\n        {error ? (\n          <p  \n          style={{ paddingTop: 5,\n          fontSize:13,\n          color:\"red\" }}>\n            {error}\n          </p>\n        ) : null}\n      </>\n    );\n}\n","export default __webpack_public_path__ + \"static/media/client1.6f1e107d.png\";","export default __webpack_public_path__ + \"static/media/client2.270c7b91.png\";","export default __webpack_public_path__ + \"static/media/client3.da5484ce.png\";","export default __webpack_public_path__ + \"static/media/client4.113f988d.png\";","export default __webpack_public_path__ + \"static/media/client5.ada3fbe2.png\";","\nimport React, { Component } from \"react\";\nimport Slider from \"react-slick\";\nimport client1 from '../assests/images/client1.png'\nimport client2 from '../assests/images/client2.png'\nimport client3 from '../assests/images/client3.png'\nimport client4 from '../assests/images/client4.png'\nimport client5 from '../assests/images/client5.png'\n\nexport default class LogoSlider extends Component {\n  render() {\n    const settings = {\n        dots: true,\n        infinite: true,\n        speed: 300,\n        autoplay:true,\n        slidesToShow: 4,\n        slidesToScroll: 4,\n        responsive: [\n          {\n            breakpoint: 1024,\n            settings: {\n              slidesToShow: 3,\n              slidesToScroll: 3,\n              infinite: true,\n              dots: true\n            }\n          },\n          {\n            breakpoint: 600,\n            settings: {\n              slidesToShow: 2,\n              slidesToScroll: 2\n            }\n          },\n          {\n            breakpoint: 480,\n            settings: {\n              slidesToShow: 1,\n              slidesToScroll: 1\n            }\n          }\n          // You can unslick at a given breakpoint now by adding:\n          // settings: \"unslick\"\n          // instead of a settings object\n        ]\n    };\n    return (\n      <div>\n        <div class=\"pb-1 border-primary mb-4 text-center\"><h2 class=\"text-primary\">Our Partners</h2></div>\n        <Slider {...settings}>\n          <div>\n            <img src={client1}/>\n          </div>\n          <div>\n          <img src={client2}/>\n          </div>\n          <div>\n          <img src={client3}/>\n          </div>\n          <div>\n          <img src={client4}/>\n          </div>\n          <div>\n          <img src={client5}/>\n          </div>\n          \n        </Slider>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nfunction Pagination(props) {\n  const { totalPage,activePage,updateActivePage } = props;\n  return (\n    <ul class=\"pagination align-center\">\n    {activePage> 0 && (\n    <li class=\"page-item\"><a  onClick={()=>updateActivePage(activePage-1)} class={`page-link`} href=\"#\" aria-label=\"Previous\">&laquo;</a></li>\n    )}    \n    {Array.apply(null, {length: totalPage})\n.map((item,index)=>{\n        return (<li key={index} class={`page-item ${activePage==index && 'active'}`}><a \n        onClick={()=>updateActivePage(index)}\n        \n        class=\"page-link\" href=\"#\">1</a></li>)\n    })}\n    \n    \n    {activePage<(totalPage-1) && (\n    <li class=\"page-item\"><a onClick={()=>updateActivePage(activePage+1)}  class=\"page-link\" class={`page-link ${activePage==(totalPage-1) && 'disabled'}`}  href=\"#\" aria-label=\"Next\">&raquo;</a></li>\n    )}    \n  </ul>\n  )\n}\n\n\nexport default Pagination\n","import React,{useState} from \"react\";\nimport Select from \"react-select\";\n\nfunction Search(props) {\n  const { error,searchValue,setSearchValue,handleClick,handleClear } = props;\n  const [isClicked,setIsClicked] = useState(false)\n  return (\n    <div>\n      <form class=\"form-inline search-form\">\n      <div class=\"form-group mb-2\">\n            <input\n              type=\"text\"\n              class=\"form-control\"\n              onChange={(e) => {\n                setIsClicked(false)\n                setSearchValue(e.target.value)}}\n              value={searchValue}\n              placeholder=\"Search...\"\n            />\n          </div>\n          {isClicked ?(\n             <button\n             type=\"button\"\n             \n             onClick={()=>{\n              setIsClicked(false)\n              handleClear()}}\n             class=\"btn btn-primary text-white mb-2 text-low\"\n           >\n             Clear\n             \n           </button>\n          ):( <button\n            type=\"button\"\n            onClick={()=>{\n              setIsClicked(true)\n              handleClick()}}\n            class=\"btn btn-primary text-white mb-2 text-low\"\n          >\n            <i className=\"fa fa-search\"></i>\n            \n          </button>)}\n         \n        </form>\n       \n    </div>\n  );\n}\n\nexport default Search;\n","import React from \"react\";\n\nfunction NoData(props) {\n  \n  return (\n    <div className=\"no-data\">\n      <h3>No Data Found!</h3>\n    </div>\n  )\n}\n\nexport default NoData;\n","import React from 'react'\nimport  Modal  from './Modal'\nexport default function ConfirmModal({content,show,handleModal,handleClose}) {\n    return (\n        <Modal show={show} content={<div className=\"confirm_box\">\n        <h3>        {content}  \n        </h3>\n        <div className=\"btn-group\">\n                      <button type=\"button\" onClick={()=> handleClose()}  className=\"btn-transprent  btn text-white\">\n                        Cancel\n                        </button>\n                        <button type=\"button\" onClick={()=> handleModal()} className=\"btn-primary  btn text-white\">\n                        Continue\n                        </button>\n                      </div>\n</div>} />\n    )\n}\n","import React, { useState,useEffect } from \"react\";\nimport BannerBg from \"../../assests/images/hero_bg.jpg\";\nimport { connect } from \"react-redux\";\nimport { getCategory } from \"../../store/actions/allapi\";\nimport {get} from 'lodash';\nimport { Link } from \"react-router-dom\";\n\n\n\n\n\n\n\n\n\nimport {Modal,Input,FocusError} from '../../components/.'\nimport { Formik, Field, Form } from \"formik\";\nconst Home = ({getCategory,allapi:{category,selectedImage},location:{search},history}) => {\n  const [searchVal,setSearchValue]  = useState(\"\")\n  useEffect(()=>{\n    getCategory(0,'',1)\n  },[])\n  const [showLogins,setLogins] = useState(false)\n  const [showSignup,setShowSignup] = useState(false)\n  return (\n    <div>\n      <div\n        className=\"site-blocks-cover overlay\"\n        style={{ backgroundImage: `url(${BannerBg})` }}\n        data-aos=\"fade\"\n        data-stellar-background-ratio=\"0.5\"\n      >\n        <div className=\"container\">\n          <div className=\"row align-items-center justify-content-center\">\n            <div className=\"col-md-12\" data-aos=\"fade-up\" data-aos-delay={400}>\n              <h3 className=\"text-white font-weight-light mb-5 text-uppercase font-weight-bold\">\n              Search for the equipment you want to rent and<br/> book it in a few clicks\n              </h3>\n              <div  className=\"home-search bg-dark\">\n                <h3 className=\"heading\">Rent Equipment</h3>\n              <div  className=\"search_form \">\n\n              <div  className=\"form-group\">\n                <input className=\"form-control\" type=\"text\" onChange={(e)=> setSearchValue(e.target.value)} placeholder=\"Search for machine, brand, model\"/>\n                <button className=\"btn btn-primary text-white\" type=\"submit\" onClick={()=> history.push('/products?query='+searchVal)}>Search</button>\n                </div>\n                </div>\n\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      \n      \n\n      <div className=\"site-section bg-light \">\n        <div className=\"container\">\n          <div className=\"row justify-content-center mb-5 \">\n            <div className=\"col-md-7 text-center border-primary\">\n              <h2 className=\"font-weight-light text-primary\">Rent Machines</h2>\n             \n             \n            </div>\n          </div>\n          <div className=\"row align-items-stretch\">\n          {get(category,'categoryList',[]).map(item=>{\n              return(<div className=\"col-md-6 col-lg-3 mb-3 mb-lg-3\">\n                <Link to={\"/products?query=\"+item.category_name}>\n              <div className=\"unit-4 d-flex feature-item\" key={item.id}>\n                  <div>\n                    <h3>{item.category_name}</h3>\n                    <img src={item.category_image}/>\n                    \n                  </div>\n                </div>\n                </Link>\n              </div>)\n          })}\n        \n            \n            </div>\n          \n        </div>\n      </div>\n      \n      \n\n      \n      {/* Login Modal buttons */}\n      <Modal show={showLogins}\n       onClose={()=> setLogins(false)} content={<div className=\"btn_wrapper\">\n\n          <a href=\"/login?role_id=1\" target=\"_blank\" className=\"btn btn-success btn-block   text-white\">\n                  Sign in as Customer\n                </a>\n                <a href=\"/login?role_id=2\" target=\"_blank\" className=\"btn btn-success btn-block   text-white\">\n                  Sign in as Partner\n                </a>\n                \n                </div>} />\n\n\n                <Modal show={showSignup}\n       onClose={()=> setShowSignup(false)} content={<div className=\"btn_wrapper\">\n\n          <a href=\"/register?role_id=1\" target=\"_blank\" className=\"btn btn-success btn-block   text-white\">\n                  Register in as Customer\n                </a>\n                <a href=\"/register?role_id=2\" target=\"_blank\" className=\"btn btn-success btn-block   text-white\">\n                Register in as Partner\n                </a>\n                \n                </div>} />    \n\n              \n                \n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  user: state.user,\n  allapi:state.allapi\n});\n\nconst mapActionsToProps = {\n  getCategory,\n  \n  \n};\n\nexport default connect(mapStateToProps, mapActionsToProps)(Home);","export default __webpack_public_path__ + \"static/media/jcb.db77b81b.jpeg\";","export default __webpack_public_path__ + \"static/media/truck_image.47ca8427.png\";","import React, { Component } from \"react\";\nimport BannerBg from \"../../assests/images/jcb.jpeg\";\nimport BannerBg2 from \"../../assests/images/truck_image.png\";\nimport { Link } from \"react-router-dom\";\nimport { LogoSlider } from \"../../components\";\n\nconst About = () => {\n  return (\n    <div>\n      <div\n        className=\"site-blocks-cover inner-page-cover overlay aos-init aos-animate\"\n        style={{\n          backgroundImage:\n            'url('+BannerBg+')',\n          \n        }}\n        data-aos=\"fade\"\n        data-stellar-background-ratio=\"0.5\"\n      >\n        <div className=\"container\">\n          <div className=\"row align-items-center justify-content-center text-center\">\n            <div\n              className=\"col-md-8 aos-init aos-animate\"\n              data-aos=\"fade-up\"\n              data-aos-delay={400}\n            >\n              <h1 className=\"text-white font-weight-light text-uppercase font-weight-bold\">\n                About Us\n              </h1>\n              <p className=\"breadcrumb-custom\">\n                <Link to=\"/\">Home</Link> <span className=\"mx-2\">&gt;</span>{\" \"}\n                <span>About Us</span>\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"site-section\">\n        <div className=\"container\">\n          <div className=\"row mb-5\">\n            <div\n              className=\"col-md-5 ml-auto mb-5 order-md-2 aos-init aos-animate\"\n              data-aos=\"fade\"\n            >\n              <img\n                src={BannerBg2}\n                alt=\"Image\"\n                className=\"img-fluid rounded\"\n                \n                onload=\"pagespeed.CriticalImages.checkImageForCriticality(this);\"\n              />\n            </div>\n            <div\n              className=\"col-md-6 order-md-1 aos-init aos-animate\"\n              data-aos=\"fade\"\n            >\n              <div className=\"text-left pb-1 border-primary mb-4\">\n                <h2 className=\"text-primary\">LOKATOR SAS</h2>\n              </div>\n              <p><strong>Lokator</strong> is a Malian company specializing in the rental and sale of machinery for earthworks and 4X4 off-road, industrial and public works materials in Africa. The range of Lokator also extends to supporting equipment for mining works.</p>\n<p>Our rental services and sales concern the following materials:</p>\n<p>Machinery: Dozers, Graders, Hydraulic excavators, Compactors, Articulated trucks, Tippers, Tanks, Generators, Pump sets, Container 20 feet and 40 feet etc.</p>\n<p>Vehicles: Toyota, Land Cruiser, Toyota V8, Toyota Prado, 4x4 Pick up, Land Cruiser Pick up.</p>\n<p>All machines offered are inspected, verified and guaranteed.</p>\n              \n            </div>\n          </div>\n        </div>\n      </div>\n      <div\n        className=\"site-section \"\n        \n      >\n        <div className=\"container\">\n          <div className=\"row justify-content-center mb-5\">\n            <div className=\"col-md-12 \">\n              <h2\n                className=\"text-primary aos-init aos-animate\"\n                data-aos=\"fade\"\n              >\n                Advantage of our activity\n              </h2>\n              <p>Machine in good working condition.</p>\n<p>Guarantee of interventions.</p>\n<p>Machine safety.</p>\n<p>Priority of troubleshooting on phone call.</p>\n<p>Professional Conduct</p>\n<p>The LSR (Local Service Representative) and all project personnel will ensure the highest levels of competence, conduct, cleanliness and integrity of the employees. Tasks will be performed according to workplace safety rules and practices. Each visit will be recorded on an intervention sheet targeted by the client and the provider with precision.</p>\n<p>These cards will include the following information: date and names of the technicians, reason for the visit with details of the work carried out and any comments made.</p>\n            </div>\n          </div>\n          <LogoSlider/>  \n        </div>\n        \n      </div>\n      \n      \n    </div>\n  );\n};\n\nexport default About;\n","const APLHA_SPEICAL = \"Name can contain alphabets & special characters only\";\nconst APLHA_NUM_SPEICAL =\n  \"Name can be alphanumberic with special characters only\";\nconst REQUIRED = \"Field is required\";\nconst phoneRegex = /^([1-9])(\\d{7})$/;\n\nexport const addSubAdminValidator = (values) => {\n  let errors = {};\n  if (!values.email) {\n    errors.email = REQUIRED;\n  } else if (\n    !/^([a-zA-Z0-9_.-])+@(([a-zA-Z0-9-])+\\.)+([a-zA-Z0-9]{2,4})+$/.test(\n      values.email\n    )\n  ) {\n    errors.email = \"Enter a valid email address\";\n  }\n\n  if (!values.mobile_number) {\n    errors.mobile_number = \"Phone number is required.\";\n  }\n  if (!values.password) {\n    errors.password = REQUIRED;\n  }\n  if (!values.name) {\n    errors.name = REQUIRED;\n  }\n  console.log(errors);\n\n  return errors;\n};\n\nconst checkEmail = (value) => {\n  if (\n    !/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(\n      value\n    )\n  ) {\n    return true;\n  } else if (\n    value.includes('\"') ||\n    value.includes(\"'\") ||\n    value.includes(\",\") ||\n    value.includes(\" \")\n  ) {\n    return true;\n  } else {\n    return false;\n  }\n};\n\nexport const loginValidator = (values) => {\n  let errors = {};\n  if (!values.phone) {\n    errors.phone = REQUIRED;\n  }\n\n  if (!values.password) {\n    errors.password = REQUIRED;\n  }\n\n  return errors;\n};\n\nexport const capacityValidator = (values) => {\n  let errors = {};\n  if (!values.capacity) {\n    errors.capacity = REQUIRED;\n  }\n\n  return errors;\n};\nexport const typesValidator = (values) => {\n  let errors = {};\n  if (!values.type) {\n    errors.type = REQUIRED;\n  }\n\n  return errors;\n};\n\nexport const categoryValidator = (values, image) => {\n  let errors = {};\n  if (!values.category_name) {\n    errors.category_name = REQUIRED;\n  }\n  if (!image) {\n    errors.category_image = REQUIRED;\n  }\n\n  return errors;\n};\n\nexport const machineValidator = (values, image) => {\n  let errors = {};\n  if (!values.machine_name) {\n    errors.machine_name = REQUIRED;\n  }\n  if (!values.machine_number) {\n    errors.machine_number = REQUIRED;\n  }\n  if (!values.category_id) {\n    errors.category_id = REQUIRED;\n  }\n  if (!values.capacity_id) {\n    errors.capacity_id = REQUIRED;\n  }\n  if (!values.machine_type_id) {\n    errors.machine_type_id = REQUIRED;\n  }\n  if (!values.description) {\n    errors.description = REQUIRED;\n  }\n\n  if (!image) {\n    errors.category_image = REQUIRED;\n  }\n\n  return errors;\n};\n\nexport const signUPValidator = (values) => {\n  let errors = {};\n  if (!values.first_name) {\n    errors.first_name = REQUIRED;\n  }\n  if (!values.last_name) {\n    errors.last_name = REQUIRED;\n  }\n\n  if (!values.phone) {\n    errors.phone = REQUIRED;\n  }\n  if (!values.company_name) {\n    errors.company_name = REQUIRED;\n  }\n\n  if (!values.company_name) {\n    errors.company_name = REQUIRED;\n  }\n  if (values.email) {\n    if (\n      !/^([a-zA-Z0-9_.-])+@(([a-zA-Z0-9-])+\\.)+([a-zA-Z0-9]{2,4})+$/.test(\n        values.email\n      )\n    ) {\n      errors.email = \"Enter a valid email address\";\n    }\n  }\n\n  if (!values.password) {\n    errors.password = REQUIRED;\n  }\n  if (!values.confirm_password) {\n    errors.confirm_password = REQUIRED;\n  } else if (values.password !== values.confirm_password) {\n    errors.confirm_password = \"Password does not match\";\n  }\n  console.log(errors);\n  return errors;\n};\n\nexport const changePasswordValidator = (values) => {\n  let errors = {};\n  if (!values.old_password) {\n    errors.old_password = REQUIRED;\n  }\n  if (!values.password) {\n    errors.password = REQUIRED;\n  }\n  if (!values.confirm_password) {\n    errors.confirm_password = REQUIRED;\n  } else if (values.password !== values.confirm_password) {\n    errors.confirm_password = \"Password does not match\";\n  }\n  console.log(errors);\n  return errors;\n};\n\nexport const contactvalidator = (values) => {\n  let errors = {};\n  if (!values.name) {\n    errors.name = REQUIRED;\n  }\n  if (!values.email) {\n    errors.email = REQUIRED;\n  } else if (\n    !/^([a-zA-Z0-9_.-])+@(([a-zA-Z0-9-])+\\.)+([a-zA-Z0-9]{2,4})+$/.test(\n      values.email\n    )\n  ) {\n    errors.email = \"Enter a valid email address\";\n  }\n  if (!values.phone) {\n    errors.phone = \"Phone number is required.\";\n  }\n\n  if (!values.business_name) {\n    errors.business_name = REQUIRED;\n  }\n\n  if (!values.message) {\n    errors.message = REQUIRED;\n  }\n\n  return errors;\n};\n\nexport const profileValidator = (values) => {\n  let errors = {};\n  if (!values.first_name) {\n    errors.first_name = REQUIRED;\n  }\n  if (!values.last_name) {\n    errors.last_name = REQUIRED;\n  }\n  if (!values.country_id) {\n    errors.country_id = REQUIRED;\n  }\n\n  if (!values.company_name) {\n    errors.company_name = REQUIRED;\n  }\n  if (!values.location_id) {\n    errors.location_id = REQUIRED;\n  }\n  if (!values.company_name) {\n    errors.company_name = REQUIRED;\n  }\n\n  return errors;\n};\n\nexport const countryValidator = (values) => {\n  let errors = {};\n  if (!values.name) {\n    errors.name = REQUIRED;\n  }\n  if (!values.country_code) {\n    errors.country_code = REQUIRED;\n  }\n\n  return errors;\n};\n\nexport const orderValidator = (values) => {\n  let errors = {};\n  if (!values.order_scope) {\n    errors.order_scope = REQUIRED;\n  }\n  if (!values.delivery_location) {\n    errors.delivery_location = REQUIRED;\n  }\n  if (!values.comments_remarks) {\n    errors.comments_remarks = REQUIRED;\n  }\n  if (!values.order_scope) {\n    errors.order_scope = REQUIRED;\n  }\n  if (!values.work_start_date) {\n    errors.work_start_date = REQUIRED;\n  }\n\n  return errors;\n};\n\nexport const inquiryValidator = (values) => {\n  console.log(values);\n  let errors = {};\n  if (values.user !== \"\") {\n  }\n  if (!values.price_type) {\n    errors.price_type = REQUIRED;\n  }\n  if (!values.delivery_date) {\n    errors.delivery_date = REQUIRED;\n  }\n  if (!values.location) {\n    errors.location = REQUIRED;\n  }\n  if (!values.requirment) {\n    errors.requirment = REQUIRED;\n  }\n\n  return errors;\n};\n","export default __webpack_public_path__ + \"static/media/customer.e1aeee3e.png\";","import React, {useState} from \"react\";\nimport { Formik, Field, Form } from \"formik\";\nimport {Modal,Input,FocusError,Select,Textarea} from '../../components'\nimport {contactvalidator} from '../../utils/validation'\nimport { addContact } from \"../../store/actions/allapi\";\nimport  ContactIcon  from \"../../assests/images/customer.png\";\n\n\n\nimport { connect } from \"react-redux\";\n\nconst Contact = ({addContact}) => {\n\n  const [hasSubmitted,setHasSubmitted] = useState(false)\n  const  handleContact = async (values)=>{\n    await  addContact(values);\n    setHasSubmitted(true)\n    \n\n  }\n\n  \n  return (\n    <div>\n      \n        \n      <div className=\"site-section contact-wrapper\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-7 mb-5\">\n              <h3>\nContact Us</h3>\n<div className=\"card head\">\nFill in your details and we will call you back\n</div>\n              <div className=\"card\">\n              <div className=\"card-body\">\n                {hasSubmitted ? (\n                   <div className=\"text-center\">\n                   <h1 className=\"display-3\">Thank You!</h1>\n                   <p className=\"lead\">We will get in touch with you very soon.</p>\n                   <hr />\n\n                 </div>\n                ):(\n                  <Formik\n                enableReinitialize\n                initialValues={{\n                  name: \"\",\n\temail:\"\",\n\tbusiness_name: \"\",\n\tphone:\"\",\n\tmessage:\"\"\n                  \n                  }}\n                validate={(values) => contactvalidator(values)}\n                validateOnChange\n                onSubmit={handleContact}\n              >\n                {(formikBag) => {\n                  return (\n                    <Form>\n                  <div className=\"row\">\n                    <div className=\"col-lg-12\">\n                      <label>Name *</label>\n                    <Field name=\"name\">\n                    {({ field }) => (\n                      <Input\n                        {...field}\n                        type=\"text\"\n                        error={\n                          formikBag.touched.name &&\n                          formikBag.errors.name\n                            ? formikBag.errors.name\n                            : null\n                        }\n                        className=\"form-control\"\n                        placeholder={\"Enter Your Name\"}\n                      />\n                    )}\n                  </Field>\n                    </div>\n                    \n                    \n                    \n                  </div>\n                  <div className=\"row\">\n                     <div className=\"col-lg-12\">\n                    <label>Email *</label>\n                    <Field name=\"email\">\n                    {({ field }) => (\n                      <Input\n                        {...field}\n                        type=\"email\"\n                        className=\"form-control\"\n                        error={\n                          formikBag.touched.email &&\n                          formikBag.errors.email\n                            ? formikBag.errors.email\n                            : null\n                        }\n                        placeholder={\"Email Address\"}\n                      />\n                    )}\n                  </Field>\n                    </div>\n                    \n                  </div>\n\n                  <div className=\"row\">\n                     <div className=\"col-lg-12\">\n                    <label>Business Name </label>\n                    <Field name=\"business_name\">\n                    {({ field }) => (\n                      <Input\n                        {...field}\n                        type=\"text\"\n                        className=\"form-control\"\n                        error={\n                          formikBag.touched.business_name &&\n                          formikBag.errors.business_name\n                            ? formikBag.errors.business_name\n                            : null\n                        }\n                        placeholder=\"Business Name\"\n                      />\n                    )}\n                  </Field>\n                    </div>\n                    \n                  </div>\n                  \n                  \n                  \n                  <div className=\"row\">\n                    <div className=\"col-lg-12\">\n                      <label>Phone</label>\n                   \n                    <Field name=\"phone\">\n                    {({ field }) => (\n                      <Input\n                        {...field}\n                        type=\"text\"\n                        \n                        className=\"form-control\"\n                        placeholder={\"Phone Number\"}\n                        \n                        error={\n                          formikBag.touched.phone &&\n                          formikBag.errors.phone\n                            ? formikBag.errors.phone\n                            : null\n                        }\n                      />\n                    )}\n                  </Field>\n                  \n                    </div>\n                    \n                  </div>\n                  <div className=\"row\">\n                  <div className=\"col-lg-12\">\n                    <label>Your Message</label>\n                    <Field name=\"message\">\n                    {({ field }) => (\n                      <Textarea\n                        {...field}\n                        type=\"text\"\n                        error={\n                          formikBag.touched.message &&\n                          formikBag.errors.message\n                            ? formikBag.errors.message\n                            : null\n                        }\n                        \n                        className=\"form-control\"\n                        placeholder={\"Your Message\"}\n                      />\n                    )}\n                  </Field>\n                    </div>\n                    \n                  </div>\n                  \n\n                  \n                  \n                  <div className=\"py-3 text-center\">\n                    <button type=\"submit\" className=\"btn-primary btn-block btn text-white\">\n                    Send\n                    </button>\n                  </div>\n                 \n                  <FocusError />\n                </Form>\n                  );\n                }}\n              </Formik>\n                )}\n            \n              </div>\n              </div>\n            </div>\n\n            <div className=\"col-md-5\">\n              <img src={ContactIcon}/>\n              {/* <div className=\"p-4 mb-3 bg-white\">\n                <p className=\"mb-0 font-weight-bold\">Address</p>\n                <p className=\"mb-4\">\n                  203 Fake St. Mountain View, San Francisco, California, USA\n                </p>\n                <p className=\"mb-0 font-weight-bold\">Phone</p>\n                <p className=\"mb-4\">\n                  <a href=\"#\">+1 232 3235 324</a>\n                </p>\n                <p className=\"mb-0 font-weight-bold\">Email Address</p>\n                <p className=\"mb-0\">\n                  <a href=\"#\">youremail@domain.com</a>\n                </p>\n              </div> */}\n              {/* <div className=\"p-4 mb-3 bg-white\">\n                <h3 className=\"h5 text-black mb-3\">More Info</h3>\n                <p>\n                  Lorem ipsum dolor sit amet, consectetur adipisicing elit. Ipsa\n                  ad iure porro mollitia architecto hic consequuntur. Distinctio\n                  nisi perferendis dolore, ipsa consectetur? Fugiat quaerat eos\n                  qui, libero neque sed nulla.\n                </p>\n                <p>\n                  <a href=\"#\" className=\"btn btn-primary px-4 py-2 text-white\">\n                    Learn More\n                  </a>\n                </p>\n              </div> */}\n            </div>\n          </div>\n        </div>\n      </div>\n      <div  className=\"map-wrapper\"\n      >\n        <div className=\"container\">\n              <div className=\"row\">\n                <div className=\"col-lg-8\">\n                <iframe src=\"https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d31144.504072194395!2d-8.028514235384366!3d12.643871185700009!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0xe51cc8a9561831d%3A0xb13a535acb607d08!2sHamdallaye%20ACI%202000!5e0!3m2!1sen!2sin!4v1632585979480!5m2!1sen!2sin\" width=\"100%\" height=\"450\" style={{border:0}} allowfullscreen=\"\" loading=\"lazy\"></iframe>\n                </div>\n                <div className=\"col-lg-4\">\n                  <h3>Contact Us</h3>\n                   \n                <p className=\"mb-0 font-weight-bold\">Address</p>\n                <p className=\"mb-2\">\n                Immeuble Abdoulaye BAH, Bureau N°9 <br/>\nHamdallaye ACI 2000 Rue 331 , BPE 1846 Bamako Mali \n                </p>\n                <p className=\"mb-0 font-weight-bold\">Appel , SMS , WhatsApp, WeChat </p>\n                <p className=\"mb-2\">\n                  <a href=\"tel:+223 20 23 26 05\">+223 20 23 26 05 /</a>  <a href=\"tel:+223 66 75 48 11\">+223 66 75 48 11 </a> \n                </p>\n                <p className=\"mb-0 font-weight-bold\">Email Address</p>\n                <p className=\"mb-0\">\n                  <a href=\"#\">info@Lokator.com</a>\n                </p>\n                              </div>\n                </div>\n              </div>\n      </div>\n    </div>\n    \n  );\n};\n\nconst mapStateToProps = (state) => ({\n  user: state.user,\n  allapi:state.allapi\n});\n\nconst mapActionsToProps = {\naddContact\n};\n\nexport default connect(mapStateToProps, mapActionsToProps)(Contact);\n","export default __webpack_public_path__ + \"static/media/Red-truck.6d6ee908.png\";","export default __webpack_public_path__ + \"static/media/hero_bg_2.9bc49a87.jpg\";","import React, { Component, useState, useEffect } from \"react\";\nimport BannerBg from \"../../assests/images/hero_bg.jpg\";\nimport BannerBg2 from \"../../assests/images/hero_bg_2.jpg\";\nimport Logo from \"../../assests/images/logo.jpeg\";\nimport Truck from \"../../assests/images/Red-truck.png\";\nimport { Link } from \"react-router-dom\";\nimport { Modal, Input, FocusError, Select } from \"../../components\";\nimport { Formik, Field, Form } from \"formik\";\nimport { loginValidator, signUPValidator } from \"../../utils/validation\";\nimport {\n  loginUser,\n  signinUser,\n  forgetPassword,\n} from \"../../store/actions/users\";\nimport { getCountries, getLocations } from \"../../store/actions/allapi\";\nimport { connect } from \"react-redux\";\nimport PhoneInput from \"react-phone-input-2\";\nimport \"react-phone-input-2/lib/style.css\";\nconst Login = ({\n  location: { pathname, search },\n  loginUser,\n  signinUser,\n  getCountries,\n  getLocations,\n  forgetPassword,\n  history,\n  isPopup,\n  handleClick,\n  allapi: { countries, locations },\n}) => {\n  const query = new URLSearchParams(search);\n  const role_id = pathname == \"/admin/login\" ? 0 : query.get(\"role_id\") || 1;\n\n  const [showLogin, setShowLogin] = useState(true);\n  const [showSignUp, setShowSignUp] = useState(false);\n\n  useEffect(() => {\n    //getCountries()\n  }, []);\n\n  const handleSubmit = (values) => {\n    loginUser(values, history, isPopup, handleClick);\n  };\n  const handleSignIn = (values) => {\n    var formValues = { ...values };\n    formValues.role_id = role_id;\n    if (formValues.email == \"\") {\n      delete formValues.email;\n    }\n    delete formValues.whole_number;\n\n    signinUser(formValues, history, isPopup, handleClick);\n    //loginUser(values, history);\n  };\n\n  return (\n    <div className={`login_page ${isPopup && \"popup\"}`}>\n      {!isPopup && (\n        <div className=\"banner_box\">\n          <h3> Machine in good working condition.</h3>\n          <h1>Lokator Truck</h1>\n          <img src={Truck} />\n        </div>\n      )}\n      <div className=\"main_section\">\n        {!isPopup && (\n          <div className=\"login-header\">\n            <Link to=\"/\">\n              <img src={Logo} width=\"200\" />\n            </Link>\n            <Link to=\"/\" className=\"btn btn-primary text-white btn-sm\">\n              Home\n            </Link>\n          </div>\n        )}\n        <div className=\"login-form\">\n          <div className=\"login-content\">\n            {pathname == \"/forgot-password\" ? (\n              <>\n                <h3>Forgot Password</h3>\n                <Formik\n                  enableReinitialize\n                  initialValues={{\n                    email: \"\",\n                  }}\n                  //validate={(values) => resetOutValidator(values)}\n                  validateOnChange\n                  onSubmit={forgetPassword}\n                >\n                  {(formikBag) => {\n                    return (\n                      <Form className=\"small-form\">\n                        <div className=\"row\">\n                          <div className=\"col-lg-12\">\n                            <Field name=\"email\">\n                              {({ field }) => (\n                                <Input\n                                  {...field}\n                                  type=\"email\"\n                                  value={formikBag.values.email}\n                                  onChange={(e) => {\n                                    formikBag.setFieldValue(\n                                      \"email\",\n                                      e.target.value\n                                    );\n                                  }}\n                                  className=\"form-control\"\n                                  placeholder={\"Email Address\"}\n                                />\n                              )}\n                            </Field>\n                          </div>\n                        </div>\n\n                        <div className=\" text-center\">\n                          <button\n                            type=\"submit\"\n                            className=\"btn-primary btn-block btn text-white\"\n                          >\n                            Forgot Password\n                          </button>\n                        </div>\n                        <br />\n                        <p>\n                          {role_id != 0 ? (\n                            <p>\n                              Already have an account?{\" \"}\n                              <Link to={\"/login?role_id=\" + role_id}>\n                                SIGN IN\n                              </Link>\n                            </p>\n                          ) : (\n                            <Link to={\"/admin/login\"}>Back to Login</Link>\n                          )}\n                        </p>\n\n                        <FocusError />\n                      </Form>\n                    );\n                  }}\n                </Formik>\n              </>\n            ) : pathname == \"/register\" || showSignUp ? (\n              <>\n                <h3>Register as {role_id == 1 ? \"Customer\" : \"Partner\"}</h3>\n                <Formik\n                  enableReinitialize\n                  initialValues={{\n                    first_name: \"\",\n                    last_name: \"\",\n                    email: \"\",\n                    password: \"\",\n                    confirm_password: \"\",\n                    company_name: \"\",\n                    phone: \"\",\n                    whole_number: \"\",\n                    user_type: role_id,\n                  }}\n                  validate={(values) => signUPValidator(values)}\n                  validateOnChange\n                  onSubmit={handleSignIn}\n                >\n                  {(formikBag) => {\n                    return (\n                      <Form>\n                        <div className=\"row\">\n                          <div className=\"col-lg-6\">\n                            <Field name=\"first_name\">\n                              {({ field }) => (\n                                <Input\n                                  {...field}\n                                  type=\"text\"\n                                  error={\n                                    formikBag.touched.first_name &&\n                                    formikBag.errors.first_name\n                                      ? formikBag.errors.first_name\n                                      : null\n                                  }\n                                  className=\"form-control\"\n                                  placeholder={\"First Name *\"}\n                                />\n                              )}\n                            </Field>\n                          </div>\n                          <div className=\"col-lg-6\">\n                            <Field name=\"last_name\">\n                              {({ field }) => (\n                                <Input\n                                  {...field}\n                                  type=\"text\"\n                                  error={\n                                    formikBag.touched.last_name &&\n                                    formikBag.errors.last_name\n                                      ? formikBag.errors.last_name\n                                      : null\n                                  }\n                                  className=\"form-control\"\n                                  placeholder={\"Last Name *\"}\n                                />\n                              )}\n                            </Field>\n                          </div>\n                        </div>\n                        <div className=\"row\">\n                          <div className=\"col-md-6\">\n                            <Field name=\"phone\">\n                              {({ field }) => (\n                                <div>\n                                  <PhoneInput\n                                    {...field}\n                                    country=\"in\"\n                                    type=\"phone\"\n                                    value={formikBag.values.whole_number}\n                                    onChange={(phone, data) => {\n                                      formikBag.setFieldValue(\n                                        \"whole_number\",\n                                        phone\n                                      );\n                                      formikBag.setFieldValue(\n                                        \"country_code\",\n                                        data.dialCode\n                                      );\n                                      formikBag.setFieldValue(\n                                        \"phone\",\n                                        phone.slice(data.dialCode.length)\n                                      );\n                                    }}\n                                    error={\n                                      formikBag.touched.phone &&\n                                      formikBag.errors.phone\n                                        ? formikBag.errors.phone\n                                        : null\n                                    }\n                                    className=\"form-control\"\n                                    placeholder=\"Phone Number\"\n                                  />\n                                  {formikBag.errors.phone && (\n                                    <p\n                                      style={{\n                                        paddingTop: 5,\n                                        fontSize: 13,\n                                        color: \"red\",\n                                      }}\n                                    >\n                                      {formikBag.errors.phone}\n                                    </p>\n                                  )}\n                                </div>\n                              )}\n                            </Field>\n                          </div>\n                          <div className=\"col-lg-6\">\n                            <Field name=\"email\">\n                              {({ field }) => (\n                                <Input\n                                  {...field}\n                                  type=\"email\"\n                                  className=\"form-control\"\n                                  error={\n                                    formikBag.touched.email &&\n                                    formikBag.errors.email\n                                      ? formikBag.errors.email\n                                      : null\n                                  }\n                                  placeholder={\"Email Address\"}\n                                />\n                              )}\n                            </Field>\n                          </div>\n                        </div>\n                        <div className=\"row\">\n                          <div className=\"col-lg-12\">\n                            <Field name=\"company_name\">\n                              {({ field }) => (\n                                <Input\n                                  {...field}\n                                  type=\"text\"\n                                  error={\n                                    formikBag.touched.company_name &&\n                                    formikBag.errors.company_name\n                                      ? formikBag.errors.company_name\n                                      : null\n                                  }\n                                  className=\"form-control\"\n                                  placeholder={\"Company Name\"}\n                                />\n                              )}\n                            </Field>\n                          </div>\n                        </div>\n\n                        <div className=\"row\">\n                          <div className=\"col-lg-6\">\n                            <Field name=\"password\">\n                              {({ field }) => (\n                                <Input\n                                  {...field}\n                                  type=\"password\"\n                                  className=\"form-control\"\n                                  error={\n                                    formikBag.touched.password &&\n                                    formikBag.errors.password\n                                      ? formikBag.errors.password\n                                      : null\n                                  }\n                                  placeholder={\"Password *\"}\n                                />\n                              )}\n                            </Field>\n                          </div>\n\n                          <div className=\"col-lg-6\">\n                            <Field name=\"confirm_password\">\n                              {({ field }) => (\n                                <Input\n                                  {...field}\n                                  type=\"password\"\n                                  className=\"form-control\"\n                                  error={\n                                    formikBag.touched.confirm_password &&\n                                    formikBag.errors.confirm_password\n                                      ? formikBag.errors.confirm_password\n                                      : null\n                                  }\n                                  placeholder={\"Confirm Password *\"}\n                                />\n                              )}\n                            </Field>\n                          </div>\n                        </div>\n\n                        <p className=\"terms\">\n                          <input type=\"checkbox\" />\n                          Agree with our{\" \"}\n                          <Link target=\"_blank\" to=\"/terms\">\n                            Terms of Service\n                          </Link>{\" \"}\n                          and <a href=\"#\">Privacy Policy.</a>\n                        </p>\n\n                        <div className=\"py-3 text-center\">\n                          <button\n                            type=\"submit\"\n                            className=\"btn-primary btn-block btn text-white\"\n                          >\n                            REGISTER\n                          </button>\n                        </div>\n                        <p>\n                          Already have an account?{\" \"}\n                          {!isPopup ? (\n                            <Link to={\"/login?role_id=\" + role_id}>\n                              SIGN IN\n                            </Link>\n                          ) : (\n                            <a\n                              href=\"javascript:void()\"\n                              onClick={() => {\n                                setShowSignUp(false);\n                              }}\n                            >\n                              SIGN IN\n                            </a>\n                          )}\n                        </p>\n                        <FocusError />\n                      </Form>\n                    );\n                  }}\n                </Formik>\n              </>\n            ) : (\n              <>\n                {query.get(\"signin\") && (\n                  <span class=\"badge badge-success\">\n                    Your are Registed Succesfully enter your login details to\n                    get started.\n                  </span>\n                )}\n                <h3>\n                  Login as{\" \"}\n                  {role_id == 1\n                    ? \"Customer\"\n                    : role_id == 2\n                    ? \"Partner\"\n                    : \"Admin\"}\n                </h3>\n                <Formik\n                  enableReinitialize\n                  initialValues={{\n                    phone: \"\",\n                    password: \"\",\n                  }}\n                  validate={(values) => loginValidator(values)}\n                  validateOnChange\n                  onSubmit={handleSubmit}\n                >\n                  {(formikBag) => {\n                    return (\n                      <Form className=\"small-form\">\n                        <div className=\"row\">\n                          <div className=\"col-lg-12\">\n                            <Field name=\"phone\">\n                              {({ field }) => (\n                                <Input\n                                  {...field}\n                                  type=\"text\"\n                                  className=\"form-control\"\n                                  placeholder={\"Mobile Number/Email\"}\n                                  error={\n                                    formikBag.touched.phone &&\n                                    formikBag.errors.phone\n                                      ? formikBag.errors.phone\n                                      : null\n                                  }\n                                />\n                              )}\n                            </Field>\n                          </div>\n                        </div>\n                        <div className=\"row\">\n                          <div className=\"col-lg-12\">\n                            <Field name=\"password\">\n                              {({ field }) => (\n                                <Input\n                                  {...field}\n                                  type=\"password\"\n                                  error={\n                                    formikBag.touched.password &&\n                                    formikBag.errors.password\n                                      ? formikBag.errors.password\n                                      : null\n                                  }\n                                  className=\"form-control\"\n                                  placeholder={\"Password\"}\n                                />\n                              )}\n                            </Field>\n                          </div>\n                        </div>\n                        <p className=\"text-right\" style={{ margin: 0 }}>\n                          <Link to={\"/forgot-password?role_id=\" + role_id}>\n                            Forgot Password\n                          </Link>\n                        </p>\n                        <div className=\" text-center\">\n                          <button\n                            type=\"submit\"\n                            className=\"btn-primary btn-block btn text-white\"\n                          >\n                            Login\n                          </button>\n                        </div>\n\n                        {role_id != 0 && (\n                          <p>\n                            Don't have an account?{\" \"}\n                            {!isPopup ? (\n                              <Link to={\"/register?role_id=\" + role_id}>\n                                REGISTER\n                              </Link>\n                            ) : (\n                              <a\n                                href=\"javascript:void()\"\n                                onClick={() => {\n                                  setShowSignUp(true);\n                                }}\n                              >\n                                REGISTER\n                              </a>\n                            )}\n                          </p>\n                        )}\n                        <FocusError />\n                      </Form>\n                    );\n                  }}\n                </Formik>\n              </>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  user: state.user,\n  allapi: state.allapi,\n});\n\nconst mapActionsToProps = {\n  loginUser,\n  signinUser,\n  getCountries,\n  getLocations,\n  forgetPassword,\n};\n\nexport default connect(mapStateToProps, mapActionsToProps)(Login);\n","import React, { Component,useState } from \"react\";\n\nconst Dashboard = () => {\n  const [showLogins,setLogins] = useState(false)\n  const [showSignup,setShowSignup] = useState(false)\n  return (\n    <div className=\"container-fluid\">\n        {/* Breadcrumbs*/}\n        <ol className=\"breadcrumb\">\n          <li className=\"breadcrumb-item\">\n            <a href=\"#\">Dashboard</a>\n          </li>\n          <li className=\"breadcrumb-item active\">My Dashboard</li>\n        </ol>\n        {/* Icon Cards*/}\n        <div className=\"row\">\n          <div className=\"col-xl-3 col-sm-6 mb-3\">\n            <div className=\"card text-white bg-primary o-hidden h-100\">\n              <div className=\"card-body\">\n                <div className=\"card-body-icon\">\n                  <i className=\"fa fa-fw fa-comments\" />\n                </div>\n                <div className=\"mr-5\">26 New Messages!</div>\n              </div>\n              <a className=\"card-footer text-white clearfix small z-1\" href=\"#\">\n                <span className=\"float-left\">View Details</span>\n                <span className=\"float-right\">\n                  <i className=\"fa fa-angle-right\" />\n                </span>\n              </a>\n            </div>\n          </div>\n          <div className=\"col-xl-3 col-sm-6 mb-3\">\n            <div className=\"card text-white bg-warning o-hidden h-100\">\n              <div className=\"card-body\">\n                <div className=\"card-body-icon\">\n                  <i className=\"fa fa-fw fa-list\" />\n                </div>\n                <div className=\"mr-5\">11 New Tasks!</div>\n              </div>\n              <a className=\"card-footer text-white clearfix small z-1\" href=\"#\">\n                <span className=\"float-left\">View Details</span>\n                <span className=\"float-right\">\n                  <i className=\"fa fa-angle-right\" />\n                </span>\n              </a>\n            </div>\n          </div>\n          <div className=\"col-xl-3 col-sm-6 mb-3\">\n            <div className=\"card text-white bg-success o-hidden h-100\">\n              <div className=\"card-body\">\n                <div className=\"card-body-icon\">\n                  <i className=\"fa fa-fw fa-shopping-cart\" />\n                </div>\n                <div className=\"mr-5\">123 New Orders!</div>\n              </div>\n              <a className=\"card-footer text-white clearfix small z-1\" href=\"#\">\n                <span className=\"float-left\">View Details</span>\n                <span className=\"float-right\">\n                  <i className=\"fa fa-angle-right\" />\n                </span>\n              </a>\n            </div>\n          </div>\n          <div className=\"col-xl-3 col-sm-6 mb-3\">\n            <div className=\"card text-white bg-danger o-hidden h-100\">\n              <div className=\"card-body\">\n                <div className=\"card-body-icon\">\n                  <i className=\"fa fa-fw fa-support\" />\n                </div>\n                <div className=\"mr-5\">13 New Tickets!</div>\n              </div>\n              <a className=\"card-footer text-white clearfix small z-1\" href=\"#\">\n                <span className=\"float-left\">View Details</span>\n                <span className=\"float-right\">\n                  <i className=\"fa fa-angle-right\" />\n                </span>\n              </a>\n            </div>\n          </div>\n        </div>\n        {/* Area Chart Example*/}\n        <div className=\"card mb-3\">\n          <div className=\"card-header\">\n            <i className=\"fa fa-area-chart\" /> Area Chart Example</div>\n          <div className=\"card-body\">\n            <canvas id=\"myAreaChart\" width=\"100%\" height={30} />\n          </div>\n          <div className=\"card-footer small text-muted\">Updated yesterday at 11:59 PM</div>\n        </div>\n      </div>\n      \n      \n      \n    \n  );\n};\n\nexport default Dashboard;\n","import React, { Component } from \"react\";\nimport BannerBg from \"../../assests/images/hero_bg.jpg\";\nimport BannerBg2 from \"../../assests/images/hero_bg_2.jpg\";\n\nconst Services = () => {\n  return (\n    <div>\n      <div\n        className=\"site-blocks-cover inner-page-cover overlay aos-init aos-animate\"\n        style={{\n          backgroundImage:\n            'url(\"images/xhero_bg_1.jpg.pagespeed.ic.tLtLHKGWU8.webp\")',\n          backgroundPosition: \"50% 1324.5px\",\n        }}\n        data-aos=\"fade\"\n        data-stellar-background-ratio=\"0.5\"\n      >\n        <div className=\"container\">\n          <div className=\"row align-items-center justify-content-center text-center\">\n            <div\n              className=\"col-md-8 aos-init aos-animate\"\n              data-aos=\"fade-up\"\n              data-aos-delay={400}\n            >\n              <h1 className=\"text-white font-weight-light text-uppercase font-weight-bold\">\n                Services\n              </h1>\n              <p className=\"breadcrumb-custom\">\n                <a href=\"index.html\">Home</a> <span className=\"mx-2\">&gt;</span>{\" \"}\n                <span>About Us</span>\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"site-section\">\n        <div className=\"container\">\n          <div className=\"row mb-5\">\n            <div\n              className=\"col-md-5 ml-auto mb-5 order-md-2 aos-init aos-animate\"\n              data-aos=\"fade\"\n            >\n              <img\n                src={BannerBg}\n                alt=\"Image\"\n                className=\"img-fluid rounded\"\n                data-pagespeed-url-hash={3249581224}\n                onload=\"pagespeed.CriticalImages.checkImageForCriticality(this);\"\n              />\n            </div>\n            <div\n              className=\"col-md-6 order-md-1 aos-init aos-animate\"\n              data-aos=\"fade\"\n            >\n              <div className=\"text-left pb-1 border-primary mb-4\">\n                <h2 className=\"text-primary\">Our History</h2>\n              </div>\n              <p>\n                Lorem ipsum dolor sit amet, consectetur adipisicing elit.\n                Blanditiis deleniti reprehenderit animi est eaque corporis!\n                Nisi, asperiores nam amet doloribus, soluta ut reiciendis.\n                Consequatur modi rem, vero eos ipsam voluptas.\n              </p>\n              <p className=\"mb-5\">\n                Error minus sint nobis dolor laborum architecto, quaerat.\n                Voluptatum porro expedita labore esse velit veniam laborum quo\n                obcaecati similique iusto delectus quasi!\n              </p>\n              <div className=\"row\">\n                <div className=\"col-md-12 mb-md-5 mb-0 col-lg-6\">\n                  <div className=\"unit-4\">\n                    <div className=\"unit-4-icon mb-3 mr-4\">\n                      <span className=\"text-primary flaticon-frontal-truck\" />\n                    </div>\n                    <div>\n                      <h3>Ground Shipping</h3>\n                      <p>\n                        Lorem ipsum dolor sit amet consectetur adipisicing elit.\n                        Perferendis quis.\n                      </p>\n                      <p className=\"mb-0\">\n                        <a href=\"#\">Learn More</a>\n                      </p>\n                    </div>\n                  </div>\n                </div>\n                <div className=\"col-md-12 mb-md-5 mb-0 col-lg-6\">\n                  <div className=\"unit-4\">\n                    <div className=\"unit-4-icon mb-3 mr-4\">\n                      <span className=\"text-primary flaticon-travel\" />\n                    </div>\n                    <div>\n                      <h3>Air Freight</h3>\n                      <p>\n                        Lorem ipsum dolor sit amet consectetur adipisicing elit.\n                        Perferendis quis.\n                      </p>\n                      <p className=\"mb-0\">\n                        <a href=\"#\">Learn More</a>\n                      </p>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div\n        className=\"site-section \"\n        \n      >\n        <div className=\"container\">\n          <div className=\"row justify-content-center mb-5\">\n            <div className=\"col-md-7 text-center border-primary\">\n              <h2\n                className=\"font-weight-light text-primary aos-init aos-animate\"\n                data-aos=\"fade\"\n              >\n                How It Works\n              </h2>\n            </div>\n          </div>\n          <div className=\"row\">\n            <div\n              className=\"col-md-6 col-lg-4 mb-5 mb-lg-0 aos-init aos-animate\"\n              data-aos=\"fade\"\n              data-aos-delay={100}\n            >\n              <div className=\"how-it-work-item\">\n                <span className=\"number\">1</span>\n                <div className=\"how-it-work-body\">\n                  <h2>Choose Your Service</h2>\n                  <p className=\"mb-5\">\n                    Lorem ipsum dolor sit amet consectetur adipisicing elit.\n                    Incidunt praesentium dicta consectetur fuga neque fugit a\n                    at. Cum quod vero assumenda iusto.\n                  </p>\n                  <ul className=\"ul-check list-unstyled\">\n                    <li >Error minus sint nobis dolor</li>\n                    <li >\n                      Voluptatum porro expedita labore esse\n                    </li>\n                    <li >\n                      Voluptas unde sit pariatur earum\n                    </li>\n                  </ul>\n                </div>\n              </div>\n            </div>\n            <div\n              className=\"col-md-6 col-lg-4 mb-5 mb-lg-0 aos-init aos-animate\"\n              data-aos=\"fade\"\n              data-aos-delay={200}\n            >\n              <div className=\"how-it-work-item\">\n                <span className=\"number\">2</span>\n                <div className=\"how-it-work-body\">\n                  <h2>Select Your Payment</h2>\n                  <p className=\"mb-5\">\n                    Lorem ipsum dolor sit amet consectetur adipisicing elit.\n                    Incidunt praesentium dicta consectetur fuga neque fugit a\n                    at. Cum quod vero assumenda iusto.\n                  </p>\n                  <ul className=\"ul-check list-unstyled\">\n                    <li >Error minus sint nobis dolor</li>\n                    <li >\n                      Voluptatum porro expedita labore esse\n                    </li>\n                    <li >\n                      Voluptas unde sit pariatur earum\n                    </li>\n                  </ul>\n                </div>\n              </div>\n            </div>\n            <div\n              className=\"col-md-6 col-lg-4 mb-5 mb-lg-0 aos-init aos-animate\"\n              data-aos=\"fade\"\n              data-aos-delay={300}\n            >\n              <div className=\"how-it-work-item\">\n                <span className=\"number\">3</span>\n                <div className=\"how-it-work-body\">\n                  <h2>Tracking Your Order</h2>\n                  <p className=\"mb-5\">\n                    Lorem ipsum dolor sit amet consectetur adipisicing elit.\n                    Incidunt praesentium dicta consectetur fuga neque fugit a\n                    at. Cum quod vero assumenda iusto.\n                  </p>\n                  <ul className=\"ul-check list-unstyled\">\n                    <li >Error minus sint nobis dolor</li>\n                    <li >\n                      Voluptatum porro expedita labore esse\n                    </li>\n                    <li >\n                      Voluptas unde sit pariatur earum\n                    </li>\n                  </ul>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      \n      \n    </div>\n  );\n};\n\nexport default Services;\n","import React, { Component } from \"react\";\nimport BannerBg from \"../../assests/images/jcb.jpeg\";\nimport BannerBg2 from \"../../assests/images/truck_image.png\";\nimport { Link } from \"react-router-dom\";\n\nconst Terms = () => {\n  return (\n    <div className=\"container main-content\">\n      <h1><strong>Terms of use of machines</strong></h1>\n<p>Each machine is rented for a period of 45 days renewable except for occasional work with drivers and a technical team to keep the machines in normal working order.</p>\n<p>In order to allow a better assistance of the brigade, the number of days worked per month cannot exceed 26 days of 16 hours maximum.</p>\n<p>Due to the diversity of work the count can be done by machine which case the period of availability will be case by case.<br/>The machines will be in Temporary Admission (AT) during the duration of the lease and the customer will be able to support LOKATOR to obtain this regime.</p>\n<h3>Price and delivery time</h3>\n<p>The prices are exclusive of VAT per day of 8 hours:<br/>Fuel, Mobilization and Demobilization at the expense of the customer;<br/>The delivery time is Forty-five (45) days for a machine and Seventy-five (75) days for a<br/>brigade of at least 3 machines.</p>\n<h3>Terms of use of Vehicles</h3>\n<p>Each vehicle is rented for a period of 45 days renewable with conductors.</p>\n<p>We are able to guarantee that you will be delivered a safe vehicle, well maintained</p>\n<p>Prices exclude VAT per day of 8 hours Fuel to the customer;</p>\n<p>The tenant must return the vehicle with the same level of fuel delivery; unlimited mileage is included in our rates.</p>\n<p>In case of the unfortunate event of a breakdown / accident is not due to violation of the law of traffic, your car will be replaced by another identical or greater.</p>\n    </div>\n  );\n};\n\nexport default Terms;\n","import React, { Component,useState,useEffect } from \"react\";\nimport { Formik, Field, Form } from \"formik\";\nimport {Modal,Input,FocusError,Select} from '../../../components';\nimport { profileValidator,changePasswordValidator } from \"../../../utils/validation\";\nimport { getCountries,getLocations } from \"../../../store/actions/allapi\";\nimport {handleChangePassword,updateProfile} from '../../../store/actions/users'\nimport { connect } from \"react-redux\";\nimport { get } from 'lodash';\nimport { Link } from \"react-router-dom\";\nimport PhoneInput from \"react-phone-input-2\";\n\nconst Profile = ({location:{pathname,search},loginUser,signinUser,handleChangePassword,updateProfile,getCountries,getLocations,history,allapi: { countries,locations },user:{user}}) => {\n  const [changePassword,setChangePassword] = useState(false)\n\n    console.log(user)\n    useEffect(()=>{\n        getCountries()\n      },[])\n\n      useEffect(()=>{\n        if(Boolean(user)){  \n        if(user.country_id){\n            getLocations(user.country_id)\n        }  \n    }\n        \n      },[user])\n\n      const updatePassword= async (values)=> {\n        handleChangePassword(values)\n      }\n  const [showSignup,setShowSignup] = useState(false)\n  return (\n    <div className=\"container-fluid profle-page\">\n        <ol className=\"breadcrumb\">\n          <li className=\"breadcrumb-item\">\n            <Link to=\"/dashboard\">Dashboard</Link>\n          </li>\n          <li className=\"breadcrumb-item active\">{changePassword?\"Chnage Password\":\"My Profile\"}</li>\n        </ol>\n        <div className=\"col-md-6 offset-3\">\n         {changePassword ? (\n             <Formik\n             enableReinitialize\n             initialValues={{\n                old_password:\"\",\n                password:\"\",\n                confirm_password:\"\"\n               }}\n             validate={(values) => changePasswordValidator(values)}\n             validateOnChange\n             onSubmit={updatePassword}\n           >\n             {(formikBag) => {\n               return (\n                 <Form>\n               <div className=\"row\">\n                 <div className=\"col-lg-12\">\n                   <label>Old Password  *</label>\n                 <Field name=\"old_password\">\n                 {({ field }) => (\n                   <Input\n                     {...field}\n                     type=\"password\"\n                     error={\n                       formikBag.touched.old_password &&\n                       formikBag.errors.old_password\n                         ? formikBag.errors.old_password\n                         : null\n                     }\n                     className=\"form-control\"\n                     placeholder={\"Old Password\"}\n                   />\n                 )}\n               </Field>\n                 </div>\n                 \n                 \n                 \n                 \n               </div>\n               <div className=\"row\">\n                 <div className=\"col-lg-12\">\n                   <label>New Password  *</label>\n                 <Field name=\"password\">\n                 {({ field }) => (\n                   <Input\n                     {...field}\n                     type=\"password\"\n                     error={\n                       formikBag.touched.password &&\n                       formikBag.errors.password\n                         ? formikBag.errors.password\n                         : null\n                     }\n                     className=\"form-control\"\n                     placeholder={\"Current Password\"}\n                   />\n                 )}\n               </Field>\n                 </div>\n                 </div>\n\n                 <div className=\"row\">\n                 <div className=\"col-lg-12\">\n                   <label>Confirm Password  *</label>\n                 <Field name=\"confirm_password\">\n                 {({ field }) => (\n                   <Input\n                     {...field}\n                     type=\"password\"\n                     error={\n                       formikBag.touched.confirm_password &&\n                       formikBag.errors.confirm_password\n                         ? formikBag.errors.confirm_password\n                         : null\n                     }\n                     className=\"form-control\"\n                     placeholder={\"Confirm Password\"}\n                   />\n                 )}\n               </Field>\n                 </div>\n                 </div>\n               \n               \n               <div className=\"py-3 text-center\">\n               <button type=\"button\" onClick={()=> setChangePassword(false)} className=\"btn-transprent btn change-password \">\n                 Cancel\n                 </button>\n                 <button type=\"submit\" className=\"btn-primary btn text-white\">\n                 Update\n                 </button>\n               </div>\n             \n               <FocusError />\n             </Form>\n               );\n             }}\n           </Formik>\n         ):(\n        <Formik\n                enableReinitialize\n                initialValues={{\n                  first_name:get(user,'first_name',''),\n                  last_name:get(user,'last_name',''),\n                  company_name:get(user,'company_name',''),\n                  country_id:get(user,'country_id',''),\n                  location_id:get(user,'location_id',''),\n                  \n                  }}\n                validate={(values) => profileValidator(values)}\n                validateOnChange\n                onSubmit={updateProfile}\n              >\n                {(formikBag) => {\n                  return (\n                    <Form>\n                  <div className=\"row\">\n                    <div className=\"col-lg-6\">\n                      \n                    <Field name=\"first_name\">\n                    {({ field }) => (\n                      <Input\n                        {...field}\n                        type=\"text\"\n                        error={\n                          formikBag.touched.first_name &&\n                          formikBag.errors.first_name\n                            ? formikBag.errors.first_name\n                            : null\n                        }\n                        className=\"form-control\"\n                        placeholder={\"First Name *\"}\n                      />\n                    )}\n                  </Field>\n                    </div>\n                    <div className=\"col-lg-6\">\n                      \n                    <Field name=\"last_name\">\n                    {({ field }) => (\n                      <Input\n                        {...field}\n                        type=\"text\"\n                        error={\n                          formikBag.touched.last_name &&\n                          formikBag.errors.last_name\n                            ? formikBag.errors.last_name\n                            : null\n                        }\n                        className=\"form-control\"\n                        placeholder={\"Last Name *\"}\n                      />\n                    )}\n                  </Field>\n                    </div>\n                    \n                    \n                  </div>\n                  <div className=\"row\">\n                  <div className=\"col-md-6\">\n                            <Field name=\"phone\">\n                              {({ field }) => (\n                                <div >\n                                  <PhoneInput\n                                    {...field}\n                                    country=\"in\"\n                                    type=\"phone\"\n                                    value={formikBag.values.whole_number}\n                                    onChange={(phone, data) => {\n                                      formikBag.setFieldValue(\n                                        \"whole_number\",\n                                        phone\n                                      );\n                                      formikBag.setFieldValue(\n                                        \"country_code\",\n                                        data.dialCode\n                                      );\n                                      formikBag.setFieldValue(\n                                        \"phone\",\n                                        phone.slice(data.dialCode.length)\n                                      );\n                                    }}\n                                    error={\n                                      formikBag.touched.phone &&\n                                      formikBag.errors.phone\n                                        ? formikBag.errors.phone\n                                        : null\n                                    }\n                                    className=\"form-control\"\n                                    placeholder=\"Phone Number\"\n                                  />\n                                  {formikBag.errors.phone && (\n                                    <p\n                                      style={{\n                                        paddingTop: 5,\n                                        fontSize: 13,\n                                        color: \"red\",\n                                      }}\n                                    >\n                                      {formikBag.errors.phone}\n                                    </p>\n                                  )}\n                                </div>\n                              )}\n                            </Field>\n                          </div>\n                          <div className=\"col-lg-6\">\n                          <Field name=\"email\">\n                    {({ field }) => (\n                      <Input\n                        {...field}\n                        type=\"email\"\n                        className=\"form-control\"\n                        error={\n                          formikBag.touched.email &&\n                          formikBag.errors.email\n                            ? formikBag.errors.email\n                            : null\n                        }\n                        placeholder={\"Email Address\"}\n                      />\n                    )}\n                  </Field>\n                   \n                    </div>\n                  \n                  </div>\n                  <div className=\"row\">\n                     <div className=\"col-lg-12\">\n                     <Field name=\"company_name\">\n                    {({ field }) => (\n                      <Input\n                        {...field}\n                        type=\"text\"\n                        error={\n                          formikBag.touched.company_name &&\n                          formikBag.errors.company_name\n                            ? formikBag.errors.company_name\n                            : null\n                        }\n                        \n                        className=\"form-control\"\n                        placeholder={\"Company Name\"}\n                      />\n                    )}\n                  </Field>\n                    \n                    </div>\n                    \n                  </div>\n\n                  <div className=\"row\">\n                     <div className=\"col-lg-6\">\n                    \n                    <Field name=\"password\">\n                    {({ field }) => (\n                      <Input\n                        {...field}\n                        type=\"password\"\n                        className=\"form-control\"\n                        error={\n                          formikBag.touched.password &&\n                          formikBag.errors.password\n                            ? formikBag.errors.password\n                            : null\n                        }\n                        placeholder={\"Password *\"}\n                      />\n                    )}\n                  </Field>\n                    </div>\n                    \n                    <div className=\"col-lg-6\">\n                    \n                    <Field name=\"confirm_password\">\n                    {({ field }) => (\n                      <Input\n                        {...field}\n                        type=\"password\"\n                        className=\"form-control\"\n                        error={\n                          formikBag.touched.confirm_password &&\n                          formikBag.errors.confirm_password\n                            ? formikBag.errors.confirm_password\n                            : null\n                        }\n                        placeholder={\"Confirm Password *\"}\n                      />\n                    )}\n                  </Field>\n                    </div>\n                  </div>\n                  \n                  \n                  \n                  \n                \n               \n                  \n\n                \n                  <div className=\"py-3 text-center\">\n                    <button type=\"submit\" className=\"btn-primary btn-block btn text-white\">\n                    Save Profile\n                    </button>\n                  </div>\n                 \n                  <FocusError />\n                </Form>\n                  );\n                }}\n              </Formik>\n         )}        </div>   \n      </div>\n      \n      \n      \n    \n  );\n};\n\n\n\nconst mapStateToProps = (state) => ({\n    user: state.user,\n    allapi:state.allapi\n  });\n  \n  const mapActionsToProps = {\n    \n    getCountries,\n    getLocations,\n    handleChangePassword,\n    updateProfile\n  };\n  \n  export default connect(mapStateToProps, mapActionsToProps)(Profile);\n\n  ","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport BannerBg from \"../../assests/images/hero_bg.jpg\";\nimport BannerBg2 from \"../../assests/images/hero_bg_2.jpg\";\n\nconst NotFound = () => {\n  return (\n    <div>\n      <div className=\"page-wrap d-flex flex-row align-items-center\">\n        <div className=\"container\">\n          <div className=\"row justify-content-center\">\n            <div className=\"col-md-12 text-center\">\n              <span className=\"display-1 d-block\">404</span>\n              <div className=\"mb-4 lead\">The page you are looking for was not found.</div>\n              \n              <Link to=\"/\">Back to Home</Link>\n            </div>\n          </div>\n        </div>\n      </div>\n      \n    </div>\n  );\n};\n\nexport default NotFound;\n","import React, { Component,useState,useEffect } from \"react\";\nimport { addCountry,getCountries,editCountry } from \"../../../store/actions/allapi\";\nimport { connect } from \"react-redux\";\nimport { Modal,Input,FocusError } from \"../../../components\";\nimport { Formik, Field, Form } from \"formik\";\nimport { countryValidator } from \"../../../utils/validation\";\nimport { get } from \"lodash\";\nconst CountryManagement = ({getCountries,addCountry,editCountry,allapi:{countries=[]}}) => {\n\n\n  useEffect(()=>{\n    getCountries()\n  },[])\n  const [showModal,setShowModal] = useState(false)\n  const [editValue,setEditValue] = useState(null)\n  const handleSubmit = (values) => {\n    setShowModal(false);\n\n    if(editValue!==null){\n      editCountry({...values,id:get(editValue,'id','')})\n    }\n    else{\n      addCountry(values)\n    }\n    setEditValue(null)\n    \n  }\n\n  \n  \n  return (\n    <div className=\"container-fluid\">\n        {/* Breadcrumbs*/}\n        <ol className=\"breadcrumb\">\n          <li className=\"breadcrumb-item\">\n            <a href=\"#\">Dashboard</a>\n          </li>\n          <li className=\"breadcrumb-item active\">Country Management</li>\n        </ol>\n        <div className=\"d-flex btn_box\">\n        <button onClick={()=> {\n          setEditValue(null)\n          setShowModal(true)}}  className=\"btn btn-primary text-white\">Add Country</button>\n\n        </div>\n\n        {/* Area Chart Example*/}\n        <div className=\"card mb-3\">\n          \n          <table class=\"table table-striped\">\n  <thead>\n    <tr>\n      \n      <th scope=\"col\">Name</th>\n      <th scope=\"col\">Country Code</th>\n      <th scope=\"col\">Actions</th>\n      \n    </tr>\n  </thead>\n  <tbody>\n    {countries.map((item)=>{\n        return (\n          <tr>\n      <td>{item.name}</td>\n      <td>{item.country_code}</td>\n      <td><button \n      onClick={()=> {\n        setShowModal(true)\n        setEditValue(item)\n      }}\n      className=\"btn btn-primary text-white\"><i className=\"fa fa-edit\"></i></button></td>\n      \n      \n      \n    </tr>\n      )\n    })}\n    \n  </tbody>\n</table>\n  {/* <ul class=\"pagination align-center\">\n    <li class=\"page-item\"><a class=\"page-link\" href=\"#\" aria-label=\"Previous\">&laquo;</a></li>\n    <li class=\"page-item\"><a class=\"page-link\" href=\"#\">1</a></li>\n    <li class=\"page-item active\"><a class=\"page-link \" href=\"#\">2</a></li>\n    <li class=\"page-item\"><a class=\"page-link\" href=\"#\">3</a></li>\n    <li class=\"page-item\"><a class=\"page-link\" href=\"#\">4</a></li>\n    <li class=\"page-item\"><a class=\"page-link\" href=\"#\">5</a></li>\n    <li class=\"page-item\"><a class=\"page-link\" href=\"#\">6</a></li>\n    <li class=\"page-item\"><a class=\"page-link\" href=\"#\">7</a></li>\n    <li class=\"page-item\"><a class=\"page-link\" href=\"#\">8</a></li>\n    <li class=\"page-item\"><a class=\"page-link\" href=\"#\">9</a></li>\n    <li class=\"page-item\"><a class=\"page-link\" href=\"#\" aria-label=\"Next\">&raquo;</a></li>\n  </ul> */}\n\n          </div>\n         \n          <Modal show={showModal}\n       onClose={()=> {\n        setEditValue(null)\n         setShowModal(false)}} content={<div className=\"modal_form\">\n\n<Formik\n                enableReinitialize\n                initialValues={{\n                  name:get(editValue,'name',''),\n                  country_code:get(editValue,'country_code','')\n                }}\n                validate={(values) => countryValidator(values)}\n                validateOnChange\n                onSubmit={handleSubmit}\n              >\n                {(formikBag) => {\n                  return (\n                    <Form>\n                      <h4>{editValue!==null?\"Update\":\"Add\"} Country</h4>\n                        \n                    <Field name=\"name\">\n                        {({ field }) => (\n                          <Input\n                            {...field}\n                            type=\"text\"\n                            className=\"form-control\"\n                            placeholder={\"Country Name\"}\n                            error={\n                              formikBag.touched.name &&\n                              formikBag.errors.name\n                                ? formikBag.errors.name\n                                : null\n                            }\n                          />\n                        )}\n                      </Field>\n\n                      <Field name=\"country_code\">\n                        {({ field }) => (\n                          <Input\n                            {...field}\n                            type=\"text\"\n                           className=\"form-control\"\n                            placeholder={\"Country Code\"}\n                            error={\n                              formikBag.touched.country_code &&\n                              formikBag.errors.country_code\n                                ? formikBag.errors.country_code\n                                : null\n                            }\n                          />\n                        )}\n                      </Field>\n                      \n                        \n                      \n                      \n                      <div className=\"btn-group\">\n                      <button type=\"button\" onClick={()=> setShowModal(false)}  className=\"btn-transprent  btn text-white\">\n                        Cancel\n                        </button>\n                        <button type=\"submit\" className=\"btn-primary  btn text-white\">\n                      {editValue!==null?\"Update\":\"Add\"}\n                        </button>\n                      </div>\n                    \n                      <FocusError />\n                    </Form>\n                  );\n                }}\n              </Formik>\n                </div>} />    \n      </div>\n      \n      \n      \n    \n  );\n};\n\n\n\nconst mapStateToProps = (state) => ({\n  user: state.user,\n  allapi:state.allapi\n});\n\nconst mapActionsToProps = {\n  addCountry,\n  getCountries,\n  editCountry\n    \n};\n\nexport default connect(mapStateToProps, mapActionsToProps)(CountryManagement);\n\n\n","import React, { Component,useState,useEffect } from \"react\";\nimport { getCapacity,addCapcity,editCapacity } from \"../../../store/actions/allapi\";\nimport {Pagination,Modal,Input,FocusError,Search,ConfirmModal} from '../../../components';\nimport { Formik, Field, Form } from \"formik\";\nimport {capacityValidator }from '../../../utils/validation'\nimport { connect } from \"react-redux\";\nimport {get} from 'lodash';\nconst CapacityManagement = ({getCapacity,editCapacity,addCapcity,allapi:{capacity}}) => {\n  const [activePage,setActivePage] = useState(0)\n  const [showModal,setShowModal] = useState(\"\")\n  const [searchValue,setSearchValue] = useState(\"\")\n  const [changeStatus, setChangeStatus] = useState(\"\");\n\n  useEffect(()=>{\n    getCapacity(activePage,searchValue)\n  },[activePage])\n\n  const handleSubmit = (values)=>{\n    setActivePage(0)\n    if(showModal == 'true'){\n      addCapcity(values);  \n    }\n    else{\n      editCapacity({...values,id:showModal.id})\n    }\n    \n    setShowModal(false)\n  }\n  \n  \n  return (\n    <div className=\"container-fluid\">\n        {/* Breadcrumbs*/}\n        <ol className=\"breadcrumb\">\n          <li className=\"breadcrumb-item\">\n            <a href=\"#\">Dashboard</a>\n          </li>\n          <li className=\"breadcrumb-item active\">Capacity</li>\n        </ol>\n        <div className=\"header-with-search mb-20\">\n        <Search setSearchValue={setSearchValue}\n              searchValue={searchValue} handleClick={() => getCapacity(0, searchValue)} handleClear={()=> {getCapacity(activePage,\"\")\n              setSearchValue(\"\")}\n              } /> \n        <button  onClick={()=> setShowModal(\"true\")} className=\"btn btn-primary text-white\">\n          Add Capacity\n          </button>\n        </div>\n        <div className=\"card mb-3\">\n          \n          <table class=\"table table-striped\">\n  <thead>\n    <tr>\n      \n      <th scope=\"col\">Name</th>\n      <th scope=\"col\">Status</th>\n      \n      <th style={{width:100}}scope=\"col\">Actions</th>\n      \n      \n    </tr>\n  </thead>\n  <tbody>\n    {get(capacity,'capacityList',[]).map((item)=>{\n        return (\n          <tr>\n      <td>{item.capacity}</td>\n      <td>\n                    <input\n                      type=\"checkbox\"\n                      checked={item.status}\n                      onChange={() => {\n                        \n                        setChangeStatus({\n                          ...item,\n                          id: item.id,\n                          status: item.status == 1 ? 0 : 1,\n                        })\n                      }}\n                      id={\"id\" + item.id}\n                    />\n                    <label htmlFor={\"id\" + item.id}>Label</label>\n                  </td>\n      <td><button \n      onClick={()=> setShowModal(item)}\n      className=\"btn btn-primary text-white\"><i className=\"fa fa-pencil\"></i></button></td>\n    </tr>\n      )\n    })}\n    \n  </tbody>\n</table>\n<Pagination totalPage={get(capacity,\"totalPage\",1)} activePage={activePage} updateActivePage={(pageNo)=> {\n   setActivePage(pageNo)\n }}/> \n  \n\n          </div>\n         \n        <Modal\n        header={showModal == 'true'  ? \"Add Capacity\":\"Edit Capacity\"}\n        show={showModal} onClose={()=> setShowModal(false)} content={<div className=\"popup-form\">\n        \n          <Formik\n\n                enableReinitialize\n                initialValues={{\n                  capacity:get(showModal,'capacity',''),\n                }}\n                validate={(values) => capacityValidator(values)}\n                validateOnChange\n                onSubmit={handleSubmit}\n              >\n                {(formikBag) => {\n                  return (\n                    <Form className=\"small-form\">\n                      <div className=\"row\">\n                        <div  className=\"col-lg-12\">\n                        \n                        \n                    <Field name=\"capacity\">\n                        {({ field }) => (\n                          <Input\n                            {...field}\n                            type=\"text\"\n                            className=\"form-control\"\n                            placeholder={\"Capacity Name\"}\n                            error={\n                              formikBag.touched.capacity &&\n                              formikBag.errors.capacity\n                                ? formikBag.errors.capacity\n                                : null\n                            }\n                          />\n                        )}\n                      </Field>\n                      </div>\n                      </div>\n                        \n                      \n                      \n                      \n                        <button type=\"submit\" className=\"btn-primary btn-block btn text-white\">\n                        Submit\n                        </button>\n                      \n                      \n    \n                      <FocusError />\n                    </Form>\n                  );\n                }}\n              </Formik>\n        </div>}/>\n        <ConfirmModal show={changeStatus!==\"\"}  handleClose={()=> { setChangeStatus(\"\")}} handleModal={()=> { \n        editCapacity(changeStatus)\n        setChangeStatus(\"\")\n        }} content={\"Sure you want to change the status of Capcity !\"}/>\n      </div>\n      \n      \n      \n    \n  );\n};\n\n\n\nconst mapStateToProps = (state) => ({\n  user: state.user,\n  allapi:state.allapi\n});\n\nconst mapActionsToProps = {\n  getCapacity,\n  addCapcity,\n  editCapacity\n  \n};\n\nexport default connect(mapStateToProps, mapActionsToProps)(CapacityManagement);\n\n\n","import React, { Component, useState, useEffect } from \"react\";\nimport { getType, addType, editType } from \"../../../store/actions/allapi\";\nimport { Pagination, Modal, Input, FocusError,Search,ConfirmModal } from \"../../../components\";\nimport { Formik, Field, Form } from \"formik\";\nimport { typesValidator } from \"../../../utils/validation\";\nimport { connect } from \"react-redux\";\nimport { get } from \"lodash\";\nconst TypesManagment = ({ getType, editType, addType, allapi: { types } }) => {\n  const [activePage, setActivePage] = useState(0);\n  const [showModal, setShowModal] = useState(\"\");\n  const [searchValue, setSearchValue] = useState(\"\");\n  const [changeStatus, setChangeStatus] = useState(\"\");\n\n  useEffect(() => {\n    getType(activePage, searchValue);\n  }, [activePage]);\n\n  const handleSubmit = (values) => {\n    setActivePage(0);\n    if (showModal == \"true\") {\n      addType(values);\n    } else {\n      editType({ ...values, id: showModal.id });\n    }\n\n    setShowModal(false);\n  };\n\n  return (\n    <div className=\"container-fluid\">\n      {/* Breadcrumbs*/}\n      <ol className=\"breadcrumb\">\n        <li className=\"breadcrumb-item\">\n          <a href=\"#\">Dashboard</a>\n        </li>\n        <li className=\"breadcrumb-item active\">Type</li>\n      </ol>\n      <div className=\"header-with-search mb-20\">\n      <Search setSearchValue={setSearchValue}\n              searchValue={searchValue} handleClick={() => getType(0, searchValue)} handleClear={()=> {getType(activePage,\"\")\n              setSearchValue(\"\")}\n              } /> \n        <button\n          onClick={() => setShowModal(\"true\")}\n          className=\"btn btn-primary text-white\"\n        >\n          Add Type\n        </button>\n      </div>\n      <div className=\"card mb-3\">\n        <table class=\"table table-striped\">\n          <thead>\n            <tr>\n              <th scope=\"col\">Name</th>\n              <th scope=\"col\">Status</th>\n\n              <th style={{ width: 100 }} scope=\"col\">\n                Actions\n              </th>\n            </tr>\n          </thead>\n          <tbody>\n            {get(types, \"typeList\", []).map((item) => {\n              return (\n                <tr>\n                  <td>{item.type}</td>\n                  <td>\n                    <input\n                      type=\"checkbox\"\n                      checked={item.status}\n                      onChange={() => {\n                        \n                        setChangeStatus({\n                          ...item,\n                          id: item.id,\n                          status: item.status == 1 ? 0 : 1,\n                        })\n                      }}\n                      id={\"id\" + item.id}\n                    />\n                    <label htmlFor={\"id\" + item.id}>Label</label>\n                  </td>\n                  <td>\n                    <button\n                      onClick={() => setShowModal(item)}\n                      className=\"btn btn-primary text-white\"\n                    >\n                      <i className=\"fa fa-pencil\"></i>\n                    </button>\n                  </td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n        <Pagination\n          totalPage={get(types, \"totalPage\", 1)}\n          activePage={activePage}\n          updateActivePage={(pageNo) => {\n            setActivePage(pageNo);\n          }}\n        />\n      </div>\n\n      <Modal\n        header={showModal == \"true\" ? \"Add Type\" : \"Edit Type\"}\n        show={showModal}\n        onClose={() => setShowModal(false)}\n        content={\n          <div className=\"popup-form\">\n            <Formik\n              enableReinitialize\n              initialValues={{\n                type: get(showModal, \"type\", \"\"),\n              }}\n              validate={(values) => typesValidator(values)}\n              validateOnChange\n              onSubmit={handleSubmit}\n            >\n              {(formikBag) => {\n                return (\n                  <Form className=\"small-form\">\n                    <div className=\"row\">\n                      <div className=\"col-lg-12\">\n                        <Field name=\"type\">\n                          {({ field }) => (\n                            <Input\n                              {...field}\n                              type=\"text\"\n                              className=\"form-control\"\n                              placeholder={\"Type Name\"}\n                              error={\n                                formikBag.touched.type && formikBag.errors.type\n                                  ? formikBag.errors.type\n                                  : null\n                              }\n                            />\n                          )}\n                        </Field>\n                      </div>\n                    </div>\n\n                    <button\n                      type=\"submit\"\n                      className=\"btn-primary btn-block btn text-white\"\n                    >\n                      Submit\n                    </button>\n\n                    <FocusError />\n                  </Form>\n                );\n              }}\n            </Formik>\n          </div>\n        }\n      />\n      <ConfirmModal show={changeStatus!==\"\"}  handleClose={()=> { setChangeStatus(\"\")}} handleModal={()=> { \n        editType(changeStatus)\n        setChangeStatus(\"\")\n        }} content={\"Sure you want to change the status of Type !\"}/>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  user: state.user,\n  allapi: state.allapi,\n});\n\nconst mapActionsToProps = {\n  getType,\n  addType,\n  editType,\n};\n\nexport default connect(mapStateToProps, mapActionsToProps)(TypesManagment);\n","import React, { Component,useState,useEffect } from \"react\";\nimport { getContact } from \"../../../store/actions/allapi\";\nimport {handleChangePassword,updateProfile} from '../../../store/actions/users'\nimport { connect } from \"react-redux\";\nimport {Pagination} from '../../../components/.'\nimport {get} from 'lodash'\nconst ContactLeads = ({getContact,allapi:{contacts=[]}}) => {\n  const [activePage,setActivePage] = useState(0)\n\n  useEffect(()=>{\n    getContact(activePage)\n  },[activePage])\n  \n  return (\n    <div className=\"container-fluid\">\n        {/* Breadcrumbs*/}\n        <ol className=\"breadcrumb\">\n          <li className=\"breadcrumb-item\">\n            <a href=\"#\">Dashboard</a>\n          </li>\n          <li className=\"breadcrumb-item active\">Contact Leads</li>\n        </ol>\n       \n        {/* Area Chart Example*/}\n        <div className=\"card mb-3\">\n          \n          <table class=\"table table-striped\">\n  <thead>\n    <tr>\n      \n      <th scope=\"col\">Name</th>\n      <th scope=\"col\">Email</th>\n      <th scope=\"col\">Business Name</th>\n      <th scope=\"col\">Phone</th>\n      <th scope=\"col\">Message</th>\n    </tr>\n  </thead>\n  <tbody>\n    {get(contacts,\"contactUsData\",[]).map((item)=>{\n        return (\n          <tr>\n      <td>{item.name}</td>\n      <td>{item.email}</td>\n      <td>{item.company_name}</td>\n      <td>{item.phone}</td>\n      <td>{item.message}</td>\n    </tr>\n      )\n    })}\n    \n  </tbody>\n</table>\n <Pagination totalPage={get(contacts,\"totalPage\",1)} activePage={activePage} updateActivePage={(pageNo)=> {\n   setActivePage(pageNo)\n }}/>\n\n          </div>\n         \n        \n      </div>\n      \n      \n      \n    \n  );\n};\n\n\n\nconst mapStateToProps = (state) => ({\n  user: state.user,\n  allapi:state.allapi\n});\n\nconst mapActionsToProps = {\n  getContact\n  \n};\n\nexport default connect(mapStateToProps, mapActionsToProps)(ContactLeads);\n\n\n","import React, { Component, useState, useEffect } from \"react\";\nimport { getInquiry } from \"../../../store/actions/allapi\";\nimport { Pagination, Search } from \"../../../components\";\nimport { Formik, Field, Form } from \"formik\";\nimport { capacityValidator } from \"../../../utils/validation\";\nimport { connect } from \"react-redux\";\nimport { get } from \"lodash\";\nimport moment from \"moment\";\nconst CapacityManagement = ({ getInquiry, allapi: { inquiry } }) => {\n  const [activePage, setActivePage] = useState(0);\n  const [showModal, setShowModal] = useState(\"\");\n  const [searchValue, setSearchValue] = useState(\"\");\n  const [changeStatus, setChangeStatus] = useState(\"\");\n\n  useEffect(() => {\n    getInquiry();\n  }, []);\n\n  return (\n    <div className=\"container-fluid\">\n      {/* Breadcrumbs*/}\n      <ol className=\"breadcrumb\">\n        <li className=\"breadcrumb-item\">\n          <a href=\"#\">Dashboard</a>\n        </li>\n        <li className=\"breadcrumb-item active\">Capacity</li>\n      </ol>\n      <div className=\"header-with-search mb-20\">\n        <Search\n          setSearchValue={setSearchValue}\n          searchValue={searchValue}\n          handleClick={() => getInquiry({ search: searchValue })}\n          handleClear={() => {\n            getInquiry({ search: \"\" });\n            setSearchValue(\"\");\n          }}\n        />\n      </div>\n      <div className=\"card mb-3\">\n        <table class=\"table table-striped\">\n          <thead>\n            <tr>\n              <th scope=\"col\">Name</th>\n              <th scope=\"col\">Email</th>\n              <th scope=\"col\">Phone </th>\n              <th style={{ width: 180 }} scope=\"col\">\n                Compnay Name\n              </th>\n              <th style={{ width: 120 }} scope=\"col\">\n                Price Type\n              </th>\n              <th scope=\"col\">Delivery Date</th>\n              <th scope=\"col\">Location</th>\n              <th scope=\"col\">Requirement</th>\n              <th scope=\"col\">Created At</th>\n            </tr>\n          </thead>\n          <tbody>\n            {get(inquiry, \"inquiryData\", []).map((item) => {\n              return (\n                <tr>\n                  <td>{item.name}</td>\n                  <td>{item.email}</td>\n                  <td>{item.phone_no}</td>\n                  <td>{item.company_name}</td>\n                  <td>{item.price_type}</td>\n                  <td>\n                    {moment(item.delivery_date).format(\n                      \"MMMM Do YYYY, h:mm:ss a\"\n                    )}\n                  </td>\n                  <td>{item.location}</td>\n                  <td>{item.requirment}</td>\n                  <td>\n                    {moment(item.created_at).format(\"MMMM Do YYYY, h:mm:ss a\")}\n                  </td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n        <Pagination\n          totalPage={get(inquiry, \"totalPage\", 1)}\n          activePage={activePage}\n          updateActivePage={(pageNo) => {\n            setActivePage(pageNo);\n          }}\n        />\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  user: state.user,\n  allapi: state.allapi,\n});\n\nconst mapActionsToProps = {\n  getInquiry,\n};\n\nexport default connect(mapStateToProps, mapActionsToProps)(CapacityManagement);\n","import React, { Component, useState, useEffect } from \"react\";\nimport { getOrders, updateStatus } from \"../../../store/actions/allapi\";\nimport { connect } from \"react-redux\";\nimport moment from \"moment\";\n\nimport { get } from \"lodash\";\nconst Orders = ({\n  getOrders,\n  allapi: { countries = [], orders = [] },\n  updateStatus,\n  location: { search },\n}) => {\n  const query = new URLSearchParams(search);\n  const [searchVal, setSearch] = useState(query.get(\"query\"));\n  const [status, setStatus] = useState(0);\n  let bodyData = {\n    role: localStorage.getItem(\"role_id\"),\n    page: 0,\n    search: searchVal,\n    status: status,\n  };\n  useEffect(() => {\n    getOrders(bodyData, searchVal);\n  }, [searchVal, status]);\n\n  return (\n    <div className=\"container-fluid\">\n      {/* Breadcrumbs*/}\n      <ol className=\"breadcrumb\">\n        <li className=\"breadcrumb-item\">\n          <a href=\"#\">Dashboard</a>\n        </li>\n        <li className=\"breadcrumb-item active\">Orders</li>\n      </ol>\n      <div className=\"search_form  with-select\">\n        <div className=\"form-group\">\n          <input\n            className=\"form-control\"\n            value={searchVal}\n            onChange={(e) => setSearch(e.target.value)}\n            type=\"text\"\n            placeholder=\"Search for machine, brand, model\"\n          />\n          <button className=\"btn btn-primary text-white\" type=\"submit\">\n            Search\n          </button>\n        </div>\n        <select\n          value={status}\n          onChange={(e) => {\n            setStatus(e.target.value);\n          }}\n        >\n          <option value=\"1\">Approved</option>\n          <option value=\"0\">Proccesing</option>\n        </select>\n      </div>\n\n      <div className=\"order-listing\">\n        {get(orders, \"orderData\", []).map((order) => {\n          return (\n            <div className=\"card\">\n              <div className=\"card-header\">\n                <div className=\"row\">\n                  <div className=\"col-lg-6\">\n                    <p>\n                      <strong>Order Placed</strong>:{\" \"}\n                      {moment(order.order_date).format(\n                        \"MMMM Do YYYY, h:mm:ss a\"\n                      )}\n                    </p>\n                    <p>\n                      <strong>Delivery Location</strong>:{\" \"}\n                      {order.delivery_location}\n                    </p>\n                  </div>\n                  <div className=\"col-lg-6\">\n                    <p>\n                      <strong>Order ID</strong>: {order.order_id}\n                    </p>\n                  </div>\n                </div>\n              </div>\n              <div className=\"card-body\">\n                <h3>Customer Details</h3>\n\n                <div className=\"bg-success cm-details\">\n                  <p>\n                    <strong>Name:</strong>{\" \"}\n                    {get(order, \"user_detail.first_name\", \"\")}{\" \"}\n                    {get(order, \"user_detail.last_name\", \"\")}\n                  </p>\n                  <p>\n                    <strong>Email:</strong>{\" \"}\n                    {get(order, \"user_detail.email\", \"\")}{\" \"}\n                  </p>\n                  <p>\n                    <strong>Phone No:</strong>{\" \"}\n                    {get(order, \"user_detail.phone\", \"\")}\n                  </p>\n                </div>\n\n                <span\n                  className={`badge text-white ${\n                    order.status == 0 ? \"bg-warning\" : \"bg-success\"\n                  } `}\n                >\n                  {order.status == 0 ? \"Processing\" : \"Approved\"}\n                </span>\n                <button\n                  onClick={() => {\n                    updateStatus({\n                      status: order.status == 0 ? 1 : 0,\n                      order_id: order.id,\n                    });\n                  }}\n                  className=\"btn btn-warning btn-sm text-white status_btn\"\n                >\n                  {order.status == 1\n                    ? \"Update Status to Processing\"\n                    : \"Update Status to Approved\"}\n                </button>\n                <table class=\"table table-striped\">\n                  <thead>\n                    <tr>\n                      <th scope=\"col\">Name</th>\n                      <th scope=\"col\">Image</th>\n                      <th scope=\"col\">Category</th>\n\n                      <th scope=\"col\">Quantity</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {get(order, \"order_detail\", []).map((item) => {\n                      return (\n                        <tr>\n                          <td>\n                            {get(item, \"machine_products.machine_name\", \"N/A\")}\n                          </td>\n                          <td>\n                            {\" \"}\n                            <img\n                              src={get(\n                                item,\n                                \"machine_products.machine_image\",\n                                \"\"\n                              )}\n                            />\n                          </td>\n                          <td>\n                            {get(\n                              item,\n                              \"machine_categories.category_name\",\n                              \"N/A\"\n                            )}\n                          </td>\n                          <td>{get(item, \"quantity\", \"N/A\")}</td>\n                        </tr>\n                      );\n                    })}\n                  </tbody>\n                </table>\n              </div>\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  user: state.user,\n  allapi: state.allapi,\n});\n\nconst mapActionsToProps = {\n  getOrders,\n  updateStatus,\n};\n\nexport default connect(mapStateToProps, mapActionsToProps)(Orders);\n","import React, { Component,useState,useEffect } from \"react\";\nimport { getUsers } from \"../../../store/actions/allapi\";\nimport {Pagination} from '../../../components/.'\n\nimport { connect } from \"react-redux\";\nimport {get} from 'lodash';\nconst ContactLeads = ({getUsers,allapi:{users}}) => {\n  const [activePage,setActivePage] = useState(0)\n\n  useEffect(()=>{\n    getUsers(activePage)\n  },[activePage])\n  const [showLogins,setLogins] = useState(false)\n  const [showSignup,setShowSignup] = useState(false)\n  return (\n    <div className=\"container-fluid\">\n        {/* Breadcrumbs*/}\n        <ol className=\"breadcrumb\">\n          <li className=\"breadcrumb-item\">\n            <a href=\"#\">Dashboard</a>\n          </li>\n          <li className=\"breadcrumb-item active\">User List</li>\n        </ol>\n       \n        {/* Area Chart Example*/}\n        <div className=\"card mb-3\">\n          \n          <table class=\"table table-striped\">\n  <thead>\n    <tr>\n      \n      <th scope=\"col\">Name</th>\n      <th scope=\"col\">Email</th>\n      <th scope=\"col\">Company Name</th>\n      <th scope=\"col\">Phone</th>\n      <th scope=\"col\">User Type</th>\n      \n      \n      <th scope=\"col\">Status</th>\n      \n    </tr>\n  </thead>\n  <tbody>\n    {get(users,'usersData',[]).map((item)=>{\n        return (\n          <tr>\n      <td>{item.first_name} {item.last_name}</td>\n      <td>{item.email}</td>\n      <td>{item.company_name}</td>\n      <td>{item.phone}</td>\n      <td>{item.role_id == 1 ?\"Company\":item.role_id == 0?\"Admin\":\"Partner\"}</td>\n      \n      \n      <td>{item.status == 1?\"Verifed\":\"Not Verfied\"}</td>\n    </tr>\n      )\n    })}\n    \n  </tbody>\n</table>\n<Pagination totalPage={get(users,\"totalPage\",1)} activePage={activePage} updateActivePage={(pageNo)=> {\n   setActivePage(pageNo)\n }}/> \n  \n\n          </div>\n         \n        \n      </div>\n      \n      \n      \n    \n  );\n};\n\n\n\nconst mapStateToProps = (state) => ({\n  user: state.user,\n  allapi:state.allapi\n});\n\nconst mapActionsToProps = {\n  getUsers\n  \n};\n\nexport default connect(mapStateToProps, mapActionsToProps)(ContactLeads);\n\n\n","import React, { Component, useState, useEffect } from \"react\";\nimport {\n  getCategory,\n  addCategory,\n  editCategory,\n  uploadImage,\n  selectImage,\n  getCapacity,\n} from \"../../../store/actions/allapi\";\nimport {\n  Pagination,\n  Modal,\n  Input,\n  ConfirmModal,\n  FocusError,\n  Search,\n} from \"../../../components\";\nimport { Formik, Field, Form } from \"formik\";\nimport { categoryValidator } from \"../../../utils/validation\";\nimport { connect } from \"react-redux\";\nimport { get } from \"lodash\";\nconst CategoryManagment = ({\n  getCategory,\n  editCategory,\n  uploadImage,\n  selectImage,\n  addCategory,\n  allapi: { category, selectedImage },\n}) => {\n  const [activePage, setActivePage] = useState(0);\n  const [showModal, setShowModal] = useState(\"\");\n  const [searchValue, setSearchValue] = useState(\"\");\n  const [changeStatus, setChangeStatus] = useState(\"\");\n  \n  useEffect(() => {\n    getCategory(activePage, searchValue);\n  }, [activePage]);\n\n  const handleSubmit = (values) => {\n    setActivePage(0);\n    if (showModal == \"true\") {\n      addCategory({ ...values, category_image: selectedImage });\n    } else {\n      editCategory({\n        ...values,\n        id: showModal.id,\n        category_image: selectedImage,\n      });\n    }\n    setShowModal(false);\n    selectedImage(\"\");\n  };\n\n  return (\n    <div className=\"container-fluid\">\n      {/* Breadcrumbs*/}\n      <ol className=\"breadcrumb\">\n        <li className=\"breadcrumb-item\">\n          <a href=\"#\">Dashboard</a>\n        </li>\n        <li className=\"breadcrumb-item active\">Category</li>\n      </ol>\n      <div className=\"header-with-search mb-20\">\n      <Search setSearchValue={setSearchValue}\n              searchValue={searchValue} handleClick={() => getCategory(0, searchValue)} handleClear={()=> {getCategory(activePage,\"\")\n              setSearchValue(\"\")}\n              } />\n        <button\n          onClick={() => {\n            selectImage(\"\");\n            setShowModal(\"true\");\n          }}\n          className=\"btn btn-primary text-white\"\n        >\n          Add Category\n        </button>\n      </div>\n      <div className=\"card mb-3\">\n        <table class=\"table table-striped\">\n          <thead>\n            <tr>\n              <th scope=\"col\">Name</th>\n              <th scope=\"col\">Image</th>\n              <th scope=\"col\">Status</th>\n\n              <th style={{ width: 100 }} scope=\"col\">\n                Actions\n              </th>\n            </tr>\n          </thead>\n          <tbody>\n            {get(category, \"categoryList\", []).map((item) => {\n              return (\n                <tr>\n                  <td>{item.category_name}</td>\n                  <td>\n                    <img width={100} src={item.category_image} />\n                  </td>\n                  <td>\n                    <input\n                      type=\"checkbox\"\n                      checked={item.status}\n                      onChange={() => {\n                        \n                        setChangeStatus({\n                          ...item,\n                          id: item.id,\n                          status: item.status == 1 ? 0 : 1,\n                        })\n                      }}\n                      id={\"id\" + item.id}\n                    />\n                    <label htmlFor={\"id\" + item.id}>Label</label>\n                  </td>\n                  <td>\n                    <button\n                      onClick={() => {\n                        setShowModal(item);\n                        selectImage(item.category_image);\n                        \n                      }}\n                      className=\"btn btn-primary text-white\"\n                    >\n                      <i className=\"fa fa-pencil\"></i>\n                    </button>\n                  </td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n        <Pagination\n          totalPage={get(category, \"totalPage\", 1)}\n          activePage={activePage}\n          updateActivePage={(pageNo) => {\n            setActivePage(pageNo);\n          }}\n        />\n      </div>\n\n      <Modal\n        header={showModal == \"true\" ? \"Add Category\" : \"Edit Category\"}\n        show={showModal}\n        onClose={() => setShowModal(false)}\n        content={\n          <div className=\"popup-form\">\n            <Formik\n              enableReinitialize\n              initialValues={{\n                category_name: get(showModal, \"category_name\", \"\"),\n              }}\n              validate={(values) => categoryValidator(values, selectedImage)}\n              validateOnChange\n              onSubmit={handleSubmit}\n            >\n              {(formikBag) => {\n                return (\n                  <Form className=\"small-form\">\n                    <div className=\"row\">\n                      <div className=\"col-lg-12\">\n                        <Field name=\"category_name\">\n                          {({ field }) => (\n                            <Input\n                              {...field}\n                              type=\"text\"\n                              className=\"form-control\"\n                              placeholder={\"Category Name\"}\n                              error={\n                                formikBag.touched.category_name &&\n                                formikBag.errors.category_name\n                                  ? formikBag.errors.category_name\n                                  : null\n                              }\n                            />\n                          )}\n                        </Field>\n                      </div>\n                    </div>\n                    <br />\n                    <div className=\"row\">\n                      <div className=\"col-lg-12\">\n                        {Boolean(selectImage) && (\n                          <img width={100} src={selectedImage} />\n                        )}\n                        <br />\n\n                        <label>Select Category Image</label>\n                        <Field name=\"category_image\">\n                          {({ field }) => (\n                            <Input\n                              {...field}\n                              type=\"file\"\n                              onChange={async (e) => {\n                                var image = await uploadImage(\n                                  e.target.files[0]\n                                );\n                                console.log(\"image\", image);\n                              }}\n                              error={\n                                formikBag.touched.category_image &&\n                                formikBag.errors.category_image\n                                  ? formikBag.errors.category_image\n                                  : null\n                              }\n                            />\n                          )}\n                        </Field>\n                      </div>\n                    </div>\n\n                    <button\n                      type=\"submit\"\n                      className=\"btn-primary btn-block btn text-white\"\n                    >\n                      Submit\n                    </button>\n\n                    <FocusError />\n                  </Form>\n                );\n              }}\n            </Formik>\n            \n          </div>\n        }\n      />\n      <ConfirmModal show={changeStatus!==\"\"}  handleClose={()=> { setChangeStatus(\"\")}} handleModal={()=> { \n        editCategory(changeStatus)\n        setChangeStatus(\"\")\n        }} content={\"Sure you want to change the status of category !\"}/>\n      \n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  user: state.user,\n  allapi: state.allapi,\n});\n\nconst mapActionsToProps = {\n  getCategory,\n  addCategory,\n  editCategory,\n  uploadImage,\n  selectImage,\n};\n\nexport default connect(mapStateToProps, mapActionsToProps)(CategoryManagment);\n","import React, { Component, useState, useEffect } from \"react\";\nimport {\n  getCategory,\n  addMachine,\n  editMachine,\n  uploadImage,\n  selectImage,\n  getMachines,\n  getType,\n  getCapacity\n} from \"../../../store/actions/allapi\";\nimport {\n  Pagination,\n  Modal,\n  Input,\n  FocusError,\n  Select,\n  Textarea,\n  ConfirmModal,\n  Search\n} from \"../../../components\";\nimport { Formik, Field, Form } from \"formik\";\nimport { machineValidator } from \"../../../utils/validation\";\nimport { connect } from \"react-redux\";\nimport { get } from \"lodash\";\nconst MachineManagement = ({\n  getMachines,\n  getCategory,\n  editMachine,\n  uploadImage,\n  selectImage,\n  addMachine,\n  getCapacity,\n  user:{user},\n  getType,\n  allapi: { category, selectedImage, machines,types,capacity },\n}) => {\n  const [activePage, setActivePage] = useState(0);\n  const [showModal, setShowModal] = useState(\"\");\n  const [searchValue, setSearchValue] = useState(\"\");\n  const [changeStatus, setChangeStatus] = useState(\"\");\n  console.log(user,'user')\n\n  useEffect(() => {\n    getMachines(activePage, searchValue);\n    getCategory();\n    getType()\n    getCapacity()\n    \n  }, [activePage]);\n\n  const handleSubmit = (values) => {\n    console.log(values)\n    setActivePage(0);\n    if (showModal == \"true\") {\n      addMachine({ ...values, machine_image: selectedImage });\n    } else {\n      editMachine({\n        ...values,\n        product_id: showModal.id,\n        machine_image: selectedImage,\n      });\n    }\n    setShowModal(false);\n    selectedImage(\"\");\n  };\n\n  return (\n    <div className=\"container-fluid\">\n      {/* Breadcrumbs*/}\n      <ol className=\"breadcrumb\">\n        <li className=\"breadcrumb-item\">\n          <a href=\"#\">Dashboard</a>\n        </li>\n        <li className=\"breadcrumb-item active\">Machines</li>\n      </ol>\n      <div className=\"header-with-search mb-20\">\n      <Search setSearchValue={setSearchValue}\n              searchValue={searchValue} handleClick={() => getMachines(0, searchValue)} handleClear={()=> {getMachines(activePage,\"\")\n              setSearchValue(\"\")}\n              } />\n        \n        <button\n          onClick={() => {\n            selectImage(\"\");\n            setShowModal(\"true\");\n          }}\n          className=\"btn btn-primary text-white\"\n        >\n          Add Machine\n        </button>\n      </div>\n      <div className=\"card mb-3\">\n        <table class=\"table table-striped\">\n          <thead>\n            <tr>\n            <th scope=\"col\">Machine Number</th>\n              <th scope=\"col\">Name</th>\n              <th scope=\"col\">Image</th>\n              <th scope=\"col\">Description</th>\n              <th scope=\"col\">Machine Categories</th>\n              <th scope=\"col\">Machine Type</th>\n              <th scope=\"col\">Status</th>\n\n              <th style={{ width: 100 }} scope=\"col\">\n                Actions\n              </th>\n            </tr>\n          </thead>\n          <tbody>\n            {get(machines, \"productsData\", []).map((item) => {\n              return (\n                <tr>\n                  <td>{item.machine_number}</td>\n                  <td>{item.machine_name}</td>\n                  <td>\n                    <img width={100} src={item.machine_image} />\n                  </td>\n                  <td>{item.description}</td>\n                  <td>{get(item, \"machine_categories.name\", \"N/A\")}</td>\n                  <td>{get(item, \"machine_types.type\", \"N/A\")}</td>\n                  <td>\n                    <input\n                      type=\"checkbox\"\n                      checked={item.status}\n                      onChange={() => {\n\n\n                       setChangeStatus({\n                        ...item,\n                        id: item.id,\n                        product_id: item.id,\n                        status: item.status == 1 ? 0 : 1,\n                      })\n                      }}\n                      id={\"id\" + item.id}\n                    />\n                    <label htmlFor={\"id\" + item.id}>Label</label>\n                  </td>\n                  <td>\n                    <button\n                      onClick={() => {\n                        setShowModal(item);\n                        selectImage(item.machine_image);\n                      }}\n                      className=\"btn btn-primary text-white\"\n                    >\n                      <i className=\"fa fa-pencil\"></i>\n                    </button>\n                  </td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n        <Pagination\n          totalPage={get(category, \"totalPage\", 1)}\n          activePage={activePage}\n          updateActivePage={(pageNo) => {\n            setActivePage(pageNo);\n          }}\n        />\n      </div>\n\n      <Modal\n        header={showModal == \"true\" ? \"Add Machine\" : \"Edit Machine\"}\n        show={showModal}\n        onClose={() => setShowModal(false)}\n        content={\n          <div className=\"popup-form\">\n            <Formik\n              enableReinitialize\n              initialValues={{\n                machine_number: get(showModal, \"machine_number\", \"\"),\n                machine_name: get(showModal, \"machine_name\", \"\"),\n                machine_type_id: get(showModal, \"machine_type_id\", \"\"),\n                category_id: get(showModal, \"category_id\", \"\"),\n                capacity_id: get(showModal, \"capacity_id\", \"\"),\n                description: get(showModal, \"description\", \"\"),\n                user_id:get(user,'id')\n                \n\n              }}\n              validate={(values) => machineValidator(values, selectedImage)}\n              validateOnChange\n              onSubmit={handleSubmit}\n            >\n              {(formikBag) => {\n                return (\n                  <Form className=\"small-form\">\n                    <div className=\"row\">\n                      <div className=\"col-lg-12\">\n                        <Field name=\"machine_name\">\n                          {({ field }) => (\n                            <Input\n                              {...field}\n                              type=\"text\"\n                              className=\"form-control\"\n                              placeholder={\"Machine Name\"}\n                              error={\n                                formikBag.touched.machine_name &&\n                                formikBag.errors.machine_name\n                                  ? formikBag.errors.machine_name\n                                  : null\n                              }\n                            />\n                          )}\n                        </Field>\n                      </div>\n                    </div>\n                    <br/>\n                    <div className=\"row\">\n                      <div className=\"col-lg-12\">\n                        <Field name=\"machine_number\">\n                          {({ field }) => (\n                            <Input\n                              {...field}\n                              type=\"text\"\n                              className=\"form-control\"\n                              placeholder={\"Machine Number\"}\n                              error={\n                                formikBag.touched.machine_number &&\n                                formikBag.errors.machine_number\n                                  ? formikBag.errors.machine_number\n                                  : null\n                              }\n                            />\n                          )}\n                        </Field>\n                      </div>\n                    </div>\n                  <br/>\n                    <div className=\"row\">\n                      <div className=\"col-lg-12\">\n                        <Field name=\"category_id\">\n                          {({ field }) => (\n                            <Select\n                              {...field}\n                              type=\"text\"\n                              \n                              options={get(category,'categoryList',[]).map(item=> {\n                                return {label:item.category_name,value:item.id}\n                              })}\n                              value={get(category,'categoryList',[]).map(item=> {\n                                return {label:item.category_name,value:item.id}\n                              }).find(item => item.value == formikBag.values.category_id)}\n                              onChange={(option)=> formikBag.setFieldValue('category_id',option.value)}\n                              placeholder={\"Select Category\"}\n                              error={\n                                formikBag.touched.category_id &&\n                                formikBag.errors.category_id\n                                  ? formikBag.errors.category_id\n                                  : null\n                              }\n                            />\n                          )}\n                        </Field>\n                      </div>\n                    </div>\n                    <br/>\n                    <div className=\"row\">\n                      <div className=\"col-lg-12\">\n                        <Field name=\"machine_type_id\">\n                          {({ field }) => (\n                            <Select\n                              {...field}\n                              type=\"text\"\n                              value={get(types,'typeList',[]).map(item=> {\n                                return {label:item.type,value:item.id}\n                              }).find(item => item.value == formikBag.values.machine_type_id)}\n                              options={get(types,'typeList',[]).map(item=> {\n                                return {label:item.type,value:item.id}\n                              })}\n                              onChange={(option)=> formikBag.setFieldValue('machine_type_id',option.value)}\n                              placeholder={\"Select Type\"}\n                              error={\n                                formikBag.touched.machine_type_id &&\n                                formikBag.errors.machine_type_id\n                                  ? formikBag.errors.machine_type_id\n                                  : null\n                              }\n                            />\n                          )}\n                        </Field>\n                      </div>\n                    </div>\n                    <br />\n                    <div className=\"row\">\n                      <div className=\"col-lg-12\">\n                        <Field name=\"capacity_id\">\n                          {({ field }) => (\n                            <Select\n                              {...field}\n                              type=\"text\"\n                              value={get(capacity,'capacityList',[]).map(item=> {\n                                return {label:item.capacity,value:item.id}\n                              }).find(item => item.value == formikBag.values.capacity_id)}\n                              options={get(capacity,'capacityList',[]).map(item=> {\n                                return {label:item.capacity,value:item.id}\n                              })}\n                              onChange={(option)=> formikBag.setFieldValue('capacity_id',option.value)}\n                              placeholder={\"Select Capacity\"}\n                              error={\n                                formikBag.touched.capacity_id &&\n                                formikBag.errors.capacity_id\n                                  ? formikBag.errors.capacity_id\n                                  : null\n                              }\n                            />\n                          )}\n                        </Field>\n                      </div>\n                    </div>\n                    <br />\n                    <div className=\"row\">\n                      <div className=\"col-lg-12\">\n                        <Field name=\"description\">\n                          {({ field }) => (\n                            <Textarea\n                              {...field}\n                              type=\"text\"\n                              className=\"form-control\"\n                              placeholder={\"Description\"}\n                              error={\n                                formikBag.touched.description &&\n                                formikBag.errors.description\n                                  ? formikBag.errors.description\n                                  : null\n                              }\n                            />\n                          )}\n                        </Field>\n                      </div>\n                    </div>\n                    \n                    <div className=\"row\">\n                      <div className=\"col-lg-12\">\n                        {Boolean(selectImage) && (\n                          <img width={100} src={selectedImage} />\n                        )}\n                        <br />\n\n                        <label>Select Machine Image</label>\n                        <Field name=\"machine_image\">\n                          {({ field }) => (\n                            <Input\n                              {...field}\n                              type=\"file\"\n                              onChange={async (e) => {\n                                var image = await uploadImage(\n                                  e.target.files[0]\n                                );\n                                \n                              }}\n                              error={\n                                formikBag.touched.machine_image &&\n                                formikBag.errors.machine_image\n                                  ? formikBag.errors.machine_image\n                                  : null\n                              }\n                            />\n                          )}\n                        </Field>\n                      </div>\n                    </div>\n                    \n\n\n                    <button\n                      type=\"submit\"\n                      className=\"btn-primary btn-block btn text-white\"\n                    >\n                      Submit\n                    </button>\n\n                    <FocusError />\n                  </Form>\n                );\n              }}\n            </Formik>\n          </div>\n        }\n      />\n      <ConfirmModal show={changeStatus!==\"\"}  handleClose={()=> { setChangeStatus(\"\")}} handleModal={()=> { \n        editMachine(changeStatus)\n        setChangeStatus(\"\")\n        }} content={\"Sure you want to change the status of machine!\"}/>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  user: state.user,\n  allapi: state.allapi,\n});\n\nconst mapActionsToProps = {\n  getCategory,\n  uploadImage,\n  selectImage,\n  addMachine,\n  editMachine,\n  getMachines,\n  getCapacity,\n  getType\n};\n\nexport default connect(mapStateToProps, mapActionsToProps)(MachineManagement);\n","import React, { Component, useState, useEffect } from \"react\";\nimport { getOrders } from \"../../../store/actions/allapi\";\nimport { connect } from \"react-redux\";\nimport moment from \"moment\";\n\nimport { get } from \"lodash\";\nconst Orders = ({\n  getOrders,\n  allapi: { countries = [], orders = [] },\n  location: { search },\n}) => {\n  const query = new URLSearchParams(search);\n  const [searchVal, setSearch] = useState(query.get(\"query\"));\n  let bodyData = {\n    role: localStorage.getItem(\"role_id\"),\n    page: 0,\n    search: searchVal,\n  };\n  useEffect(() => {\n    getOrders(bodyData, searchVal);\n  }, [searchVal]);\n\n  return (\n    <div className=\"container-fluid\">\n      {/* Breadcrumbs*/}\n      <ol className=\"breadcrumb\">\n        <li className=\"breadcrumb-item\">\n          <a href=\"#\">Dashboard</a>\n        </li>\n        <li className=\"breadcrumb-item active\">Customer Orders</li>\n      </ol>\n      <div className=\"search_form \">\n        <div className=\"form-group\">\n          <input\n            className=\"form-control\"\n            value={searchVal}\n            onChange={(e) => setSearch(e.target.value)}\n            type=\"text\"\n            placeholder=\"Search for machine, brand, model\"\n          />\n          <button className=\"btn btn-primary text-white\" type=\"submit\">\n            Search\n          </button>\n        </div>\n      </div>\n      <div className=\"order-listing\">\n        {get(orders, \"orderData\", []).map((order) => {\n          return (\n            <div className=\"card\">\n              <div className=\"card-header\">\n                <div className=\"row\">\n                  <div className=\"col-lg-6\">\n                    <p>\n                      <strong>Order Placed</strong>:{\" \"}\n                      {moment(order.order_date).format(\n                        \"MMMM Do YYYY, h:mm:ss a\"\n                      )}\n                    </p>\n                    <p>\n                      <strong>Delivery Location</strong>:{\" \"}\n                      {order.delivery_location}\n                    </p>\n                  </div>\n                  <div className=\"col-lg-6\">\n                    <p>\n                      <strong>Order ID</strong>: {order.order_id}\n                    </p>\n                  </div>\n                </div>\n              </div>\n              <div className=\"card-body\">\n                <h3>Order Placed</h3>\n                <p>Lokator is currently processing your order</p>\n                <span\n                  className={`badge text-white ${\n                    order.status == 0 ? \"bg-warning\" : \"bg-success\"\n                  } `}\n                >\n                  {order.status == 0 ? \"Processing\" : \"Approved\"}\n                </span>\n                <table class=\"table table-striped\">\n                  <thead>\n                    <tr>\n                      <th scope=\"col\">Name</th>\n                      <th scope=\"col\">Image</th>\n                      <th scope=\"col\">Category</th>\n\n                      <th scope=\"col\">Quantity</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {get(order, \"order_detail\", []).map((item) => {\n                      return (\n                        <tr>\n                          <td>\n                            {get(item, \"machine_products.machine_name\", \"N/A\")}\n                          </td>\n                          <td>\n                            {\" \"}\n                            <img\n                              src={get(\n                                item,\n                                \"machine_products.machine_image\",\n                                \"\"\n                              )}\n                            />\n                          </td>\n                          <td>\n                            {get(\n                              item,\n                              \"machine_categories.category_name\",\n                              \"N/A\"\n                            )}\n                          </td>\n                          <td>{get(item, \"quantity\", \"N/A\")}</td>\n                        </tr>\n                      );\n                    })}\n                  </tbody>\n                </table>\n              </div>\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  user: state.user,\n  allapi: state.allapi,\n});\n\nconst mapActionsToProps = {\n  getOrders,\n};\n\nexport default connect(mapStateToProps, mapActionsToProps)(Orders);\n","import React, { Component, useState, useEffect, useRef } from \"react\";\nimport BannerBg from \"../../assests/images/hero_bg.jpg\";\nimport { connect } from \"react-redux\";\nimport {\n  getCategory,\n  getMachines,\n  makeEnquiry,\n  saveOrders,\n} from \"../../store/actions/allapi\";\nimport { get } from \"lodash\";\nimport { Link } from \"react-router-dom\";\nimport {\n  NoData,\n  Modal,\n  FocusError,\n  Input,\n  Select,\n  Textarea,\n} from \"../../components/.\";\nimport { scopes, priceType } from \"../../utils/constants\";\nimport { Formik, Field, Form } from \"formik\";\nimport PhoneInput from \"react-phone-input-2\";\nimport Login from \"../Login\";\nimport { orderValidator, inquiryValidator } from \"../../utils/validation\";\n\nconst scrollToRef = (ref) => window.scrollTo(0, ref.current.offsetTop);\nconst Home = (props) => {\n  const {\n    getCategory,\n    getMachines,\n    saveOrders,\n    makeEnquiry,\n    location: { search },\n    allapi: { category, machines },\n    user: { user },\n  } = props;\n  const query = new URLSearchParams(search);\n  const [searchVal, setSearch] = useState(query.get(\"query\"));\n  const [cartProducts, setCartProducts] = useState(\n    localStorage.getItem(\"cart_items\")\n      ? JSON.parse(localStorage.getItem(\"cart_items\"))\n      : []\n  );\n  const [showModal, setShowModal] = useState(false);\n  const [showLogin, setShowLogin] = useState(false);\n  const [activeStep, setActiveStep] = useState(1);\n  const [orderInfo, setOrderInfo] = useState(\"\");\n  const [showEnquiry, setShowEnquiry] = useState(false);\n  const myRef = useRef(null);\n  const executeScroll = () => scrollToRef(myRef);\n\n  useEffect(() => {\n    getCategory(0, \"\", 1);\n  }, []);\n  useEffect(() => {\n    setSearch(query.get(\"query\"));\n  }, [search]);\n  useEffect(() => {\n    getMachines(0, searchVal, 1, executeScroll);\n    executeScroll();\n  }, [searchVal]);\n\n  const addToCart = (product) => {\n    let clonedCart = [...cartProducts];\n    clonedCart.push({ ...product, quantity: 1 });\n    updateItemtoLocal(clonedCart);\n    setCartProducts(clonedCart);\n  };\n  const updteQuantity = (id, quantity) => {\n    let clonedCart = [...cartProducts];\n    let reltedProductIndex = clonedCart.findIndex((item) => item.id === id);\n    if (quantity !== 0) {\n      clonedCart[reltedProductIndex].quantity = quantity;\n    } else {\n      clonedCart.splice(reltedProductIndex, 1);\n    }\n    updateItemtoLocal(clonedCart);\n    if (clonedCart.length == 0) {\n      setShowModal(false);\n    }\n    setCartProducts(clonedCart);\n  };\n\n  const updateItemtoLocal = (items) => {\n    localStorage.setItem(\"cart_items\", JSON.stringify(items));\n  };\n\n  const placeOrder = async (values) => {\n    setOrderInfo(values);\n    setShowModal(false);\n    setShowLogin(false);\n    let bodyData = { ...orderInfo };\n    bodyData.order_product = cartProducts.map((item) => {\n      return {\n        category_id: item.category_id,\n        machine_product_id: item.id,\n        quantity: item.quantity,\n      };\n    });\n    console.log(\"bodyData\", bodyData);\n    if (localStorage.getItem(\"access_token\")) {\n      saveOrders(bodyData);\n    } else {\n      setShowLogin(true);\n    }\n  };\n\n  const placeInquiry = async (values) => {\n    setShowEnquiry(false);\n\n    let bodyData = { ...values };\n\n    makeEnquiry(bodyData);\n  };\n\n  return (\n    <div>\n      <div className=\"row align-items-center justify-content-center\">\n        <div className=\"col-md-12\" data-aos=\"fade-up\" data-aos-delay={400}>\n          <h3 className=\" font-weight-light  header text-uppercase font-weight-bold\">\n            Get Quote\n          </h3>\n          <div className=\"home-search bg-dark product\">\n            <div className=\"search_form \">\n              <div className=\"form-group\">\n                <input\n                  className=\"form-control\"\n                  value={searchVal}\n                  onChange={(e) => setSearch(e.target.value)}\n                  type=\"text\"\n                  placeholder=\"Search for machine, brand, model\"\n                />\n                <button className=\"btn btn-primary text-white\" type=\"submit\">\n                  Search\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"site-section \">\n        <div className=\"row justify-content-center mb-5 \">\n          <div className=\"col-md-7 text-center border-primary\">\n            <h4 className=\"font-weight-bold text-primary\">Rent Machines</h4>\n          </div>\n        </div>\n        <div className=\"row align-items-stretch\">\n          {get(category, \"categoryList\", []).map((item) => {\n            return (\n              <div className=\"col-md-6 col-lg-3 mb-3 mb-lg-3\">\n                <Link to={\"/products?query=\" + item.category_name}>\n                  <div className=\"unit-4 d-flex feature-item\" key={item.id}>\n                    <div>\n                      <h3>{item.category_name}</h3>\n                      <img src={item.category_image} />\n                    </div>\n                  </div>\n                </Link>\n              </div>\n            );\n          })}\n          <div ref={myRef}></div>\n        </div>\n      </div>\n\n      <div className=\"product-listing\">\n        {get(machines, \"productsData\", []).length == 0 && <NoData />}\n        {get(machines, \"productsData\", []).map((item) => {\n          let relatedProduct = cartProducts.find((pd) => pd.id == item.id);\n          console.log(\"cartProducts\", cartProducts);\n          return (\n            <div className=\"product-item\">\n              <div className=\"pd-left\">\n                <img src={item.machine_image} />\n              </div>\n              <div className=\"pd-right\">\n                <h3>{item.machine_name}</h3>\n                <p>\n                  <strong>Category:</strong>{\" \"}\n                  {get(item, \"machine_categories.name\", \"N/A\")}\n                </p>\n                <p>\n                  <strong>Type:</strong>{\" \"}\n                  {get(item, \"machine_types.type\", \"N/A\")}\n                </p>\n                <p>\n                  <strong>Capacity:</strong>{\" \"}\n                  {get(item, \"machine_capacities.capcity\", \"N/A\")}\n                </p>\n                {!relatedProduct ? (\n                  <button\n                    onClick={() => {\n                      addToCart(item);\n                    }}\n                    className=\"btn btn-primary text-white\"\n                  >\n                    <i className=\"fa fa-plus\"></i> Add Enquiry\n                  </button>\n                ) : (\n                  <div className=\"numeric_box\">\n                    <button\n                      onClick={() => {\n                        updteQuantity(item.id, relatedProduct.quantity - 1);\n                      }}\n                    >\n                      <i class=\"fa fa-minus\" aria-hidden=\"true\"></i>\n                    </button>\n                    <span>{relatedProduct.quantity}</span>\n                    <button\n                      onClick={() => {\n                        updteQuantity(item.id, relatedProduct.quantity + 1);\n                      }}\n                    >\n                      <i class=\"fa fa-plus\" aria-hidden=\"true\"></i>\n                    </button>\n                  </div>\n                )}\n              </div>\n            </div>\n          );\n        })}\n      </div>\n      <Modal\n        header={\"Shopping Cart\"}\n        show={showModal}\n        width={800}\n        onClose={() => setShowModal(false)}\n        content={\n          <div className=\"step-form\">\n            <div className={`steps step-${activeStep}`}>\n              <a className=\"step-item\" href=\"javascript:void()\">\n                <span className=\"pager\">\n                  {activeStep > 1 ? <i className=\"fa fa-check\"></i> : 1}\n                </span>\n                <span className=\"text_line\">Shopping Cart</span>\n              </a>\n              <a className=\"step-item\" href=\"javascript:void()\">\n                <span className=\"pager\">2</span>\n                <span className=\"text_line\">Delivery Info</span>\n              </a>\n            </div>\n            {activeStep == 1 && (\n              <div className=\"section_1\">\n                <table class=\"table table-striped\">\n                  <thead>\n                    <tr>\n                      <th scope=\"col\">Name</th>\n                      <th scope=\"col\">Image</th>\n                      <th scope=\"col\">Category</th>\n                      <th scope=\"col\">Type</th>\n                      <th scope=\"col\">Capacity</th>\n                      <th scope=\"col\">Quantity</th>\n                      <th scope=\"col\">Actions</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {cartProducts.map((item) => {\n                      return (\n                        <tr>\n                          <td>{get(item, \"machine_name\", \"N/A\")}</td>\n                          <td>\n                            {\" \"}\n                            <img src={item.machine_image} />\n                          </td>\n                          <td>{get(item, \"machine_categories.name\", \"N/A\")}</td>\n                          <td>{get(item, \"machine_types.type\", \"N/A\")}</td>\n                          <td>{get(item, \"machine_capacities.type\", \"N/A\")}</td>\n                          <td>\n                            <input\n                              type=\"number\"\n                              value={item.quantity}\n                              min={1}\n                              onChange={(e) => {\n                                updteQuantity(item.id, Number(e.target.value));\n                              }}\n                            />\n                          </td>\n                          <td>\n                            <button\n                              className=\"btn btn-danger\"\n                              onClick={(e) => {\n                                updteQuantity(item.id, 0);\n                              }}\n                            >\n                              <i className=\"fa fa-trash\" aria-hidden=\"true\"></i>\n                              Remove\n                            </button>\n                          </td>\n                        </tr>\n                      );\n                    })}\n                  </tbody>\n                </table>\n                <div className=\"footer-content\">\n                  <button\n                    className=\"btn btn-primary text-white\"\n                    onClick={() => {\n                      setActiveStep(2);\n                    }}\n                  >\n                    Next Step\n                  </button>\n                </div>\n              </div>\n            )}\n            {activeStep == 2 && (\n              <div className=\"section_2\">\n                <Formik\n                  enableReinitialize\n                  initialValues={{\n                    delivery_location: \"\",\n                    work_start_date: \"\",\n                    comments_remarks: \"\",\n                    order_scope: null,\n                  }}\n                  validate={(values) => orderValidator(values)}\n                  validateOnChange\n                  onSubmit={placeOrder}\n                >\n                  {(formikBag) => {\n                    return (\n                      <Form>\n                        <div className=\"row\">\n                          <div className=\"col-lg-12\">\n                            <Field name=\"order_scope\">\n                              {({ field }) => (\n                                <Select\n                                  {...field}\n                                  name=\"order_scope\"\n                                  options={scopes}\n                                  placeholder={\"Select Project Scope\"}\n                                  value={scopes.find(\n                                    (option) =>\n                                      option.value ===\n                                      formikBag.values.order_scope\n                                  )}\n                                  onChange={(option) => {\n                                    formikBag.setFieldValue(\n                                      \"order_scope\",\n                                      option?.value\n                                    );\n                                  }}\n                                  error={\n                                    formikBag.touched.order_scope &&\n                                    formikBag.errors.order_scope\n                                      ? formikBag.errors.order_scope\n                                      : null\n                                  }\n                                />\n                              )}\n                            </Field>\n                          </div>\n                        </div>\n                        <div className=\"row\">\n                          <div className=\"col-lg-6\">\n                            <Field name=\"delivery_location\">\n                              {({ field }) => (\n                                <Input\n                                  {...field}\n                                  type=\"text\"\n                                  className=\"form-control\"\n                                  placeholder={\"Delivery Location\"}\n                                  error={\n                                    formikBag.touched.delivery_location &&\n                                    formikBag.errors.delivery_location\n                                      ? formikBag.errors.delivery_location\n                                      : null\n                                  }\n                                />\n                              )}\n                            </Field>\n                          </div>\n                          <div className=\"col-lg-6\">\n                            <Field name=\"work_start_date\">\n                              {({ field }) => (\n                                <Input\n                                  {...field}\n                                  type=\"date\"\n                                  className=\"form-control\"\n                                  placeholder={\"Work Start Date\"}\n                                  error={\n                                    formikBag.touched.work_start_date &&\n                                    formikBag.errors.work_start_date\n                                      ? formikBag.errors.work_start_date\n                                      : null\n                                  }\n                                />\n                              )}\n                            </Field>\n                          </div>\n                        </div>\n                        <div className=\"row\">\n                          <div className=\"col-lg-12\">\n                            <Field name=\"comments_remarks\">\n                              {({ field }) => (\n                                <Textarea\n                                  {...field}\n                                  className=\"form-control\"\n                                  placeholder={\"Comments Remarks\"}\n                                  error={\n                                    formikBag.touched.comments_remarks &&\n                                    formikBag.errors.comments_remarks\n                                      ? formikBag.errors.comments_remarks\n                                      : null\n                                  }\n                                />\n                              )}\n                            </Field>\n                          </div>\n                        </div>\n\n                        <div className=\"footer-content\">\n                          <button\n                            className=\"btn btn-success text-white\"\n                            type=\"button\"\n                            onClick={() => {\n                              setActiveStep(1);\n                            }}\n                          >\n                            Previous Step\n                          </button>\n                          <button\n                            className=\"btn btn-primary text-white\"\n                            type=\"submit\"\n                          >\n                            Place Order\n                          </button>\n                        </div>\n\n                        <FocusError />\n                      </Form>\n                    );\n                  }}\n                </Formik>\n              </div>\n            )}\n          </div>\n        }\n      />\n\n      {/* //Enquiry Form */}\n      <Modal\n        header={\"Send us your Inquiry\"}\n        show={showEnquiry}\n        width={600}\n        onClose={() => setShowEnquiry(false)}\n        content={\n          <div className=\"order_form\">\n            <Formik\n              enableReinitialize\n              initialValues={{\n                user_id: user?.id || \"\",\n                name: \"\",\n                email: \"\",\n                company_name: \"\",\n                phone_no: \"\",\n                requirment: \"\",\n                price_type: null,\n                delivery_date: \"\",\n                location: \"\",\n              }}\n              validate={(values) => inquiryValidator(values)}\n              validateOnChange\n              onSubmit={placeInquiry}\n            >\n              {(formikBag) => {\n                return (\n                  <Form>\n                    {!user && (\n                      <>\n                        <div className=\"row\">\n                          <div className=\"col-lg-6\">\n                            <Field name=\"name\">\n                              {({ field }) => (\n                                <Input\n                                  {...field}\n                                  type=\"text\"\n                                  error={\n                                    formikBag.touched.name &&\n                                    formikBag.errors.name\n                                      ? formikBag.errors.name\n                                      : null\n                                  }\n                                  className=\"form-control\"\n                                  placeholder={\"Your Name *\"}\n                                />\n                              )}\n                            </Field>\n                          </div>\n                          <div className=\"col-lg-6\">\n                            <Field name=\"name\">\n                              {({ field }) => (\n                                <Input\n                                  {...field}\n                                  type=\"text\"\n                                  error={\n                                    formikBag.touched.name &&\n                                    formikBag.errors.name\n                                      ? formikBag.errors.name\n                                      : null\n                                  }\n                                  className=\"form-control\"\n                                  placeholder={\"Compnay Name *\"}\n                                />\n                              )}\n                            </Field>\n                          </div>\n                        </div>\n                        <div className=\"row\">\n                          <div className=\"col-md-6\">\n                            <Field name=\"phone\">\n                              {({ field }) => (\n                                <div>\n                                  <PhoneInput\n                                    {...field}\n                                    country=\"in\"\n                                    type=\"phone\"\n                                    value={formikBag.values.phone_no}\n                                    onChange={(phone, data) => {\n                                      formikBag.setFieldValue(\n                                        \"phone_no\",\n                                        phone\n                                      );\n                                      formikBag.setFieldValue(\n                                        \"country_code\",\n                                        data.dialCode\n                                      );\n                                    }}\n                                    error={\n                                      formikBag.touched.phone &&\n                                      formikBag.errors.phone\n                                        ? formikBag.errors.phone\n                                        : null\n                                    }\n                                    className=\"form-control\"\n                                    placeholder=\"Phone Number\"\n                                  />\n                                  {formikBag.errors.phone && (\n                                    <p\n                                      style={{\n                                        paddingTop: 5,\n                                        fontSize: 13,\n                                        color: \"red\",\n                                      }}\n                                    >\n                                      {formikBag.errors.phone}\n                                    </p>\n                                  )}\n                                </div>\n                              )}\n                            </Field>\n                          </div>\n                          <div className=\"col-lg-6\">\n                            <Field name=\"email\">\n                              {({ field }) => (\n                                <Input\n                                  {...field}\n                                  type=\"email\"\n                                  className=\"form-control\"\n                                  error={\n                                    formikBag.touched.email &&\n                                    formikBag.errors.email\n                                      ? formikBag.errors.email\n                                      : null\n                                  }\n                                  placeholder={\"Email Address\"}\n                                />\n                              )}\n                            </Field>\n                          </div>\n                        </div>\n                      </>\n                    )}\n                    <h4>Order Details</h4>\n\n                    <div className=\"row\">\n                      <div className=\"col-lg-12\">\n                        <Field name=\"price_type\">\n                          {({ field }) => (\n                            <Select\n                              {...field}\n                              name=\"order_scope\"\n                              options={priceType}\n                              placeholder={\"Price Type\"}\n                              value={scopes.find(\n                                (option) =>\n                                  option.value === formikBag.values.price_type\n                              )}\n                              onChange={(option) => {\n                                formikBag.setFieldValue(\n                                  \"price_type\",\n                                  option?.value\n                                );\n                              }}\n                              error={\n                                formikBag.touched.price_type &&\n                                formikBag.errors.price_type\n                                  ? formikBag.errors.price_type\n                                  : null\n                              }\n                            />\n                          )}\n                        </Field>\n                      </div>\n                    </div>\n                    <div className=\"row\">\n                      <div className=\"col-lg-6\">\n                        <Field name=\"location\">\n                          {({ field }) => (\n                            <Input\n                              {...field}\n                              type=\"text\"\n                              className=\"form-control\"\n                              placeholder={\"Delivery Location\"}\n                              error={\n                                formikBag.touched.location &&\n                                formikBag.errors.location\n                                  ? formikBag.errors.location\n                                  : null\n                              }\n                            />\n                          )}\n                        </Field>\n                      </div>\n                      <div className=\"col-lg-6\">\n                        <Field name=\"delivery_date\">\n                          {({ field }) => (\n                            <Input\n                              {...field}\n                              type=\"date\"\n                              className=\"form-control\"\n                              placeholder={\"Work Start Date\"}\n                              error={\n                                formikBag.touched.delivery_date &&\n                                formikBag.errors.delivery_date\n                                  ? formikBag.errors.delivery_date\n                                  : null\n                              }\n                            />\n                          )}\n                        </Field>\n                      </div>\n                    </div>\n                    <div className=\"row\">\n                      <div className=\"col-lg-12\">\n                        <Field name=\"requirment\">\n                          {({ field }) => (\n                            <Textarea\n                              {...field}\n                              className=\"form-control\"\n                              placeholder={\"Requirement\"}\n                              error={\n                                formikBag.touched.requirment &&\n                                formikBag.errors.requirment\n                                  ? formikBag.errors.requirment\n                                  : null\n                              }\n                            />\n                          )}\n                        </Field>\n                      </div>\n                    </div>\n\n                    <div className=\"footer-content\">\n                      <button\n                        className=\"btn btn-primary text-white\"\n                        type=\"submit\"\n                      >\n                        Send Inquiry\n                      </button>\n                    </div>\n\n                    <FocusError />\n                  </Form>\n                );\n              }}\n            </Formik>\n          </div>\n        }\n      />\n      <Modal\n        show={showLogin}\n        content={\n          <>\n            <Login\n              isPopup\n              {...props}\n              handleClick={() => {\n                placeOrder();\n              }}\n            />\n          </>\n        }\n      />\n\n      {cartProducts.length > 0 && !showModal && !showLogin ? (\n        <div className=\"cart_box\">\n          {cartProducts.length} equipment added to inquiry{\" \"}\n          <button\n            className=\"btn btn-primry\"\n            onClick={() => {\n              setShowModal(true);\n              setActiveStep(1);\n            }}\n          >\n            <i class=\"fa  fa-shopping-cart \"></i>\n            View and Checkout\n          </button>\n        </div>\n      ) : (\n        <div className=\"cart_box\">\n          Can't find the machine you're looking for?\n          <button\n            className=\"btn btn-primry\"\n            onClick={() => {\n              setShowEnquiry(true);\n            }}\n          >\n            <i class=\"fa  fa-shopping-cart \"></i>\n            Submit Enquiry\n          </button>\n        </div>\n      )}\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  user: state.user,\n  allapi: state.allapi,\n});\n\nconst mapActionsToProps = {\n  getCategory,\n  getMachines,\n  saveOrders,\n  makeEnquiry,\n};\n\nexport default connect(mapStateToProps, mapActionsToProps)(Home);\n","import React, { Component } from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  Redirect,\n} from \"react-router-dom\";\nimport Home from \"./pages/Home\";\nimport About from \"./pages/About\";\nimport Contact from \"./pages/Contact\";\nimport Login from \"./pages/Login\";\nimport Dashboard from \"./pages/admin/Dashboard\";\nimport Services from \"./pages/Services\";\nimport Terms from \"./pages/Terms\";\n\nimport Profile from \"./pages/admin/Profile\";\nimport {\n  Header,\n  Footer,\n  Loader,\n  AdminLayout,\n  CustomerLayout,\n} from \"./components\";\nimport \"./assests/scss/style.scss\";\nimport axios from \"axios\";\nimport { API_URL } from \"./utils/constants\";\nimport { ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport NotFound from \"./pages/NotFound\";\nimport CountryManagement from \"./pages/admin/CountryManagement\";\nimport CapacityManagement from \"./pages/admin/MachineManagement/CapacityManagement\";\nimport TypesManagment from \"./pages/admin/MachineManagement/TypesManangment\";\nimport ContactLeads from \"./pages/admin/ContactLeads\";\nimport EnquiryList from \"./pages/admin/EnquiryList\";\nimport Orders from \"./pages/admin/Orders\";\nimport Users from \"./pages/admin/Users\";\nimport CategoryManagment from \"./pages/admin/MachineManagement/CategoryManagment\";\nimport MachineManagement from \"./pages/admin/MachineManagement/index\";\nimport CustomerOrders from \"./pages/Customers/Orders/Orders\";\nimport Products from \"./pages/Products/index\";\n\naxios.interceptors.response.use(\n  (config) => {\n    return config;\n  },\n  (error) => {\n    if (error.response.status === 401) {\n      // localStorage.removeItem(\"access_token\");\n      // window.location.pathname = \"/\";\n    }\n\n    return Promise.reject(error);\n  }\n);\n\nconst PrivateOnlyRoute = ({ component: Component, ...rest }) => (\n  <Route\n    {...rest}\n    render={(props) => {\n      const token = localStorage.getItem(\"access_token\");\n      axios.defaults.headers[\"x-access-token\"] = `${token}`;\n      axios.defaults.headers[\"Content-Type\"] = `application/json`;\n\n      if (token) {\n        return (\n          <AdminLayout>\n            <Component {...props} />\n          </AdminLayout>\n        );\n      } else {\n        return (\n          <Redirect\n            to={{\n              pathname: \"/login\",\n            }}\n          />\n        );\n      }\n    }}\n  />\n);\n\nconst CustomerRoute = ({ component: Component, ...rest }) => (\n  <Route\n    {...rest}\n    render={(props) => {\n      const token = localStorage.getItem(\"access_token\");\n      axios.defaults.headers[\"x-access-token\"] = `${token}`;\n      axios.defaults.headers[\"Content-Type\"] = `application/json`;\n\n      return (\n        <CustomerLayout>\n          <Component {...props} />\n        </CustomerLayout>\n      );\n    }}\n  />\n);\n\nconst WebisteRouter = ({ component: Component, ...rest }) => (\n  <Route\n    {...rest}\n    render={(props) => {\n      return (\n        <>\n          <Header />\n          <Component {...props} />\n          <Footer />\n        </>\n      );\n    }}\n  />\n);\nclass App extends Component {\n  render() {\n    axios.defaults.baseURL = API_URL;\n    return (\n      <>\n        <Router>\n          <Switch>\n            <WebisteRouter exact path=\"/\" component={Home} />\n            <WebisteRouter exact path=\"/about\" component={About} />\n            <WebisteRouter exact path=\"/Contact\" component={Contact} />\n            <WebisteRouter exact path=\"/services\" component={Services} />\n            <WebisteRouter exact path=\"/terms\" component={Terms} />\n\n            <Route exact path=\"/admin/login\" component={Login} />\n            <CustomerRoute exact path=\"/products\" component={Products} />\n            <PrivateOnlyRoute exact path=\"/dashboard\" component={Dashboard} />\n            <PrivateOnlyRoute exact path=\"/profile\" component={Profile} />\n            <PrivateOnlyRoute\n              exact\n              path=\"/customer-orders\"\n              component={CustomerOrders}\n            />\n            <PrivateOnlyRoute\n              exact\n              path=\"/contact-leads\"\n              component={ContactLeads}\n            />\n            <PrivateOnlyRoute\n              exact\n              path=\"/country-management\"\n              component={CountryManagement}\n            />\n            <PrivateOnlyRoute\n              exact\n              path=\"/capacity-management\"\n              component={CapacityManagement}\n            />\n            <PrivateOnlyRoute exact path=\"/orders\" component={Orders} />\n            <PrivateOnlyRoute\n              exact\n              path=\"/types-management\"\n              component={TypesManagment}\n            />\n            <PrivateOnlyRoute\n              exact\n              path=\"/category-management\"\n              component={CategoryManagment}\n            />\n            <PrivateOnlyRoute exact path=\"/inquiries\" component={EnquiryList} />\n            <PrivateOnlyRoute\n              exact\n              path=\"/machines\"\n              component={MachineManagement}\n            />\n\n            <PrivateOnlyRoute exact path=\"/users-list\" component={Users} />\n            <Route exact path=\"/login\" component={Login} />\n            <Route exact path=\"/forgot-password\" component={Login} />\n            <Route exact path=\"/register\" component={Login} />\n\n            <Route exact path=\"*\" component={NotFound} />\n          </Switch>\n        </Router>\n        <Loader />\n        <ToastContainer />\n      </>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {\n  SET_USER,\n  SET_USERS,\n  SET_AUTHENTICATED,\n  SET_UNAUTHENTICATED,\n  LOADING_USER,\n  UPDATE_BLOCK,\n  DELETE_USER,\n  GET_MATCHES,\n  SET_SINGLE_USERS,\n} from \"../types\";\n\nconst initialState = {\n  authenticated: false,\n  loading: false,\n  credentials: {},\n  matches: [],\n  user: null,\n};\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case SET_AUTHENTICATED:\n      return {\n        ...state,\n        authenticated: true,\n      };\n    case SET_UNAUTHENTICATED:\n      return initialState;\n    case SET_USER:\n      return {\n        ...state,\n        authenticated: true,\n        loading: false,\n        ...action.payload,\n      };\n    case SET_USERS:\n      return {\n        ...state,\n        authenticated: true,\n        loading: false,\n        user: action.payload,\n      };\n   \n    case GET_MATCHES:\n      return {\n        ...state,\n        authenticated: true,\n        loading: false,\n        matches: action.payload,\n      };\n    case LOADING_USER:\n      return {\n        ...state,\n        loading: true,\n      };\n    case DELETE_USER:\n      var { users } = state;\n      var updateuser = [...users].filter((item) => {\n        return item._id !== action.payload;\n      });\n      return {\n        ...state,\n        users: updateuser,\n      };\n    case UPDATE_BLOCK:\n      var { users } = state;\n\n      var updateuser = [...users].map((item) => {\n        if (item._id == action.payload) {\n          item.isBlocked = !item.isBlocked;\n        }\n        return item;\n      });\n\n      return {\n        ...state,\n      };\n    default:\n      return state;\n  }\n}\n","import {\n  SET_ERRORS,\n  CLEAR_ERRORS,\n  LOADING_UI,\n  TOGGLE_SIDEBAR,\n  STOP_LOADING_UI,\n  SHOW_SUCCESS,\n} from \"../types\";\n\nconst initialState = {\n  loading: false,\n  errors: null,\n  sidebarShow: true,\n  sucesss: \"\",\n};\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case SET_ERRORS:\n      return {\n        ...state,\n        loading: false,\n        errors: action.payload,\n      };\n    case CLEAR_ERRORS:\n      return {\n        ...state,\n        loading: false,\n        errors: null,\n      };\n    case LOADING_UI:\n      return {\n        ...state,\n        loading: true,\n      };\n    case STOP_LOADING_UI:\n      return {\n        ...state,\n        loading: false,\n      };\n    case TOGGLE_SIDEBAR:\n      return {\n        ...state,\n        sidebarShow: action.payload,\n      };\n    case SHOW_SUCCESS:\n      return {\n        ...state,\n        sucesss: action.payload,\n      };\n    default:\n      return state;\n  }\n}\n","import {\n  GET_COUNTRY,\n  GET_LOCATIONS,\n  ADD_COUNTRY,\n  DELETE_PASSION,\n  DELETE_SUBSCRIPTION,\n  GET_CONTACT,\n  ADD_ADVERTISMENT,\n  DELETE_ADVERTISMENT,\n  GET_USERS,\n  EDIT_COUNTRY,\n  EDIT_ADVERTISMENT,\n  GET_CAPACITY,\n  ADD_CAPACITY,\n  EDIT_CAPACITY,\n  GET_TYPE,\n  ADD_TYPE,\n  EDIT_TYPE,\n  GET_CATEGORY,\n  ADD_CATEGORY,\n  EDIT_CATEGORY,\n  SELECT_IMAGE,\n  ADD_MACHINE,\n  GET_MACHINES,\n  GET_ORDERS,\n  UPDATE_ORDERS_STATUS,\n  EDIT_MACHINE,\n  GET_INQUIRY,\n} from \"../types\";\n\nconst initialState = {\n  dashboard: [],\n  countries: [],\n  locations: [],\n  contacts: [],\n  orders: [],\n  users: [],\n  reports: [],\n  selectedImage: \"\",\n  inquiry: [],\n};\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case GET_COUNTRY:\n      return {\n        ...state,\n        countries: action.payload,\n      };\n    case GET_LOCATIONS:\n      return {\n        ...state,\n        locations: action.payload,\n      };\n    case ADD_COUNTRY:\n      return {\n        ...state,\n        countries: [action.payload.data, ...state.countries],\n      };\n    case EDIT_COUNTRY:\n      var { countries } = state;\n      var updatedCountry = countries.map((item) => {\n        if (item.id == action.payload.id) {\n          return action.payload;\n        }\n        return item;\n      });\n      return {\n        ...state,\n        countries: updatedCountry,\n      };\n    case DELETE_PASSION:\n      var { passions } = state;\n      var updatedPassion = passions.filter(\n        (item) => item._id !== action.payload\n      );\n      return {\n        ...state,\n        passions: updatedPassion,\n      };\n    // eslint-disable-next-line no-fallthrough\n    case GET_CONTACT:\n      return {\n        ...state,\n        contacts: action.payload,\n      };\n    case ADD_ADVERTISMENT:\n      return {\n        ...state,\n        advertisment: [action.payload, ...state.advertisment],\n      };\n\n    case EDIT_ADVERTISMENT:\n      var { advertisment } = state;\n      var updatedAdvertisment = advertisment.map((item) => {\n        if (item._id == action.payload._id) {\n          return action.payload;\n        }\n        return item;\n      });\n      return {\n        ...state,\n        advertisment: updatedAdvertisment,\n      };\n    case DELETE_ADVERTISMENT:\n      var { advertisment } = state;\n      var updatedAdvertisment = advertisment.filter(\n        (item) => item._id !== action.payload\n      );\n      return {\n        ...state,\n        advertisment: updatedAdvertisment,\n      };\n\n    case DELETE_SUBSCRIPTION:\n      var { subscriptions } = state;\n      var updatedSubscriptions = subscriptions.filter(\n        (item) => item._id !== action.payload\n      );\n      return {\n        ...state,\n        subscriptions: updatedSubscriptions,\n      };\n\n    case GET_USERS:\n      return {\n        ...state,\n        users: action.payload,\n      };\n    case GET_CAPACITY:\n      return {\n        ...state,\n        capacity: action.payload,\n      };\n    case ADD_CAPACITY:\n      var {\n        capacity: { capacityList },\n      } = state;\n\n      return {\n        ...state,\n        capacity: { capacityList: [action.payload, ...capacityList] },\n      };\n\n    case EDIT_CAPACITY:\n      var {\n        capacity: { capacityList },\n      } = state;\n      var updatedCapacity = capacityList.map((item) => {\n        if (item.id == action.payload.id) {\n          return action.payload;\n        }\n        return item;\n      });\n      return {\n        ...state,\n        types: { capacityList: updatedCapacity },\n      };\n    case GET_MACHINES:\n      return {\n        ...state,\n        machines: action.payload,\n      };\n    case ADD_MACHINE:\n      var {\n        machines: { productsData },\n      } = state;\n\n      return {\n        ...state,\n        machines: { productsData: [action.payload, ...productsData] },\n      };\n\n    case EDIT_MACHINE:\n      var {\n        machines: { productsData },\n      } = state;\n      var updatedCapacity = productsData.map((item) => {\n        if (item.id == action.payload.id) {\n          return action.payload;\n        }\n        return item;\n      });\n      return {\n        ...state,\n        machines: { productsData: updatedCapacity },\n      };\n    case GET_TYPE:\n      return {\n        ...state,\n        types: action.payload,\n      };\n\n    case ADD_TYPE:\n      var {\n        types: { typeList },\n      } = state;\n\n      return {\n        ...state,\n        capacity: { typeList: [action.payload, ...typeList] },\n      };\n\n    case EDIT_TYPE:\n      var {\n        types: { typeList },\n      } = state;\n      var updatedTypes = typeList.map((item) => {\n        if (item.id == action.payload.id) {\n          return action.payload;\n        }\n        return item;\n      });\n      return {\n        ...state,\n        types: { typeList: updatedTypes },\n      };\n    case GET_CATEGORY:\n      return {\n        ...state,\n        category: action.payload,\n      };\n    case ADD_CATEGORY:\n      var {\n        category: { categoryList },\n      } = state;\n\n      return {\n        ...state,\n        category: { categoryList: [action.payload, ...categoryList] },\n      };\n\n    case EDIT_CATEGORY:\n      var {\n        category: { categoryList },\n      } = state;\n      var updatedTypes = categoryList.map((item) => {\n        if (item.id == action.payload.id) {\n          return action.payload;\n        }\n        return item;\n      });\n      return {\n        ...state,\n        category: { categoryList: updatedTypes },\n      };\n    case SELECT_IMAGE:\n      return {\n        ...state,\n        selectedImage: action.payload,\n      };\n    case GET_ORDERS:\n      return {\n        ...state,\n        orders: action.payload,\n      };\n    case UPDATE_ORDERS_STATUS:\n      var {\n        orders: { orderData },\n      } = state;\n      var updatedOrder = orderData.map((item) => {\n        if (item.id == action.payload.order_id) {\n          return { ...item, status: action.payload.status };\n        }\n        return item;\n      });\n      return {\n        ...state,\n        orders: { orderData: updatedOrder },\n      };\n    case GET_INQUIRY:\n      return {\n        ...state,\n        inquiry: action.payload,\n      };\n    default:\n      return state;\n  }\n}\n","import { createStore, combineReducers, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\n\nimport userReducer from \"./reducers/users\";\nimport uiReducer from \"./reducers/uiReducer\";\nimport allReducer from \"./reducers/allapi\";\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst reducers = combineReducers({\n  user: userReducer,\n  UI: uiReducer,\n  allapi: allReducer,\n});\n\nconst composeEnhancers =\n  typeof window === \"object\" && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n    ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({})\n    : compose;\n\nconst enhancer = composeEnhancers(applyMiddleware(...middleware));\nconst store = createStore(reducers, initialState, enhancer);\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from \"react-redux\";\nimport store from \"./store/store\";\nimport { LocalizeProvider, localizeReducer } from \"react-localize-redux\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}