{"version":3,"sources":["assests/images/hero_bg.jpg","store/types.js","utils/constants.js","store/actions/allapi.js","assests/images/logo.jpeg","store/actions/users.js","components/Header.js","components/Footer.js","components/Modal.js","components/Input.js","components/FocusError.js","components/Loader.js","components/AdminLayout.js","components/CustomerLayout.js","components/Select.js","components/Textarea.js","assests/images/client1.png","assests/images/client2.png","assests/images/client3.png","assests/images/client4.png","assests/images/client5.png","components/Slider.js","components/Pagination.js","components/Search.js","components/NoData.js","components/ConfirmModal.js","components/SucesssModal.js","pages/Home/index.js","assests/images/jcb.jpeg","assests/images/truck_image.png","pages/About/index.js","utils/validation.js","assests/images/customer.png","pages/Contact/index.js","assests/images/Red-truck.png","assests/images/hero_bg_2.jpg","pages/Login/index.js","pages/admin/Dashboard/index.js","pages/Services/index.js","pages/Terms/index.js","pages/admin/Profile/index.js","pages/NotFound/index.js","pages/admin/CountryManagement/index.js","pages/admin/MachineManagement/CapacityManagement.js","pages/admin/MachineManagement/TypesManangment.js","pages/admin/ContactLeads/index.js","pages/admin/EnquiryList/index.js","pages/admin/Orders/index.js","pages/admin/Users/index.js","pages/admin/MachineManagement/CategoryManagment.js","pages/admin/MachineManagement/index.js","pages/Customers/Orders/Orders.js","pages/Products/index.js","App.js","reportWebVitals.js","store/reducers/users.js","store/reducers/uiReducer.js","store/reducers/allapi.js","store/store.js","index.js"],"names":["SET_AUTHENTICATED","SET_UNAUTHENTICATED","SET_USER","SET_USERS","LOADING_USER","UPDATE_BLOCK","DELETE_USER","SET_ERRORS","LOADING_UI","CLEAR_ERRORS","STOP_LOADING_UI","TOGGLE_SIDEBAR","SHOW_SUCCESS","GET_COUNTRY","GET_LOCATIONS","ADD_COUNTRY","DELETE_PASSION","DELETE_SUBSCRIPTION","GET_CONTACT","ADD_ADVERTISMENT","DELETE_ADVERTISMENT","GET_USERS","EDIT_COUNTRY","EDIT_ADVERTISMENT","GET_MATCHES","GET_CAPACITY","ADD_CAPACITY","EDIT_CAPACITY","GET_TYPE","ADD_TYPE","EDIT_TYPE","GET_CATEGORY","ADD_CATEGORY","EDIT_CATEGORY","SELECT_IMAGE","GET_MACHINES","ADD_MACHINE","EDIT_MACHINE","GET_ORDERS","UPDATE_ORDERS_STATUS","GET_INQUIRY","GET_NOTIFICATION","API_URL","window","location","href","includes","scopes","label","value","priceType","getCountries","dispatch","type","axios","get","then","res","payload","data","catch","err","response","getLocations","id","getCapacity","page","search","getType","getCategory","status","url","getMachines","localStorage","getItem","JSON","parse","console","log","uploadImage","file","formData","FormData","append","post","toast","success","message","position","POSITION","TOP_RIGHT","selectImage","getOrders","values","logoutUser","history","removeItem","push","getUser","setAuthorizationHeader","role_id","setItem","accessToken","stringify","mapActionsToProps","withRouter","connect","state","user","allapi","useState","toggleMenu","setToggleMenu","Menu","className","to","onClick","target","role","src","Logo","width","Footer","Modal","content","header","show","onClose","tabIndex","style","maxWidth","Input","props","error","showPassword","setShowPassword","paddingTop","fontSize","color","FocusError","useFormikContext","errors","isSubmitting","isValidating","useEffect","keys","Object","length","selector","errorElement","document","querySelector","focus","UI","loading","getNotification","updateNotification","headers","put","notification_type","children","notification","showNote","setShowNote","toggleChild","setToogleChild","setInterval","Boolean","total_notification","map","item","hasOwnProperty","handleNotificationClick","total","details","pitem","detail","setShow","SelectInput","isClearable","Textarea","LogoSlider","class","dots","infinite","speed","autoplay","slidesToShow","slidesToScroll","responsive","breakpoint","settings","client1","client2","client3","client4","client5","Component","Pagination","totalPage","activePage","updateActivePage","Array","apply","index","Search","searchValue","setSearchValue","handleClick","handleClear","isClicked","setIsClicked","onChange","e","placeholder","NoData","ConfirmModal","handleModal","handleClose","SucesssModal","category","selectedImage","searchVal","showLogins","setLogins","showSignup","setShowSignup","backgroundImage","BannerBg","onSubmit","preventDefault","category_name","category_image","About","BannerBg2","alt","onload","REQUIRED","addContact","hasSubmitted","setHasSubmitted","handleContact","enableReinitialize","initialValues","name","email","business_name","phone","validate","test","contactvalidator","validateOnChange","formikBag","field","touched","ContactIcon","height","border","allowfullscreen","loginUser","userData","isPopup","msg","signinUser","forgetPassword","pathname","query","countries","locations","URLSearchParams","showSignUp","setShowSignUp","Truck","setFieldValue","first_name","last_name","password","confirm_password","company_name","whole_number","user_type","signUPValidator","formValues","country","dialCode","slice","loginValidator","margin","Dashboard","Services","backgroundPosition","Terms","handleChangePassword","updateProfile","changePassword","setChangePassword","country_id","updatePassword","old_password","changePasswordValidator","profileValidator","disabled","NotFound","addCountry","editCountry","showModal","setShowModal","editValue","setEditValue","scope","country_code","countryValidator","addCapcity","editCapacity","capacity","setActivePage","changeStatus","setChangeStatus","checked","htmlFor","pageNo","capacityValidator","addType","editType","types","typesValidator","getContact","contacts","getInquiry","inquiry","phone_no","price_type","moment","delivery_date","format","requirment","created_at","updateStatus","orders","setSearch","setStatus","selectedOrder","setSelectedOrder","bodyData","user_id","order","order_date","delivery_location","order_id","work_start_date","work_end_date","getUsers","users","addCategory","editCategory","image","categoryValidator","files","addMachine","editMachine","machine_image","machines","machine_number","machine_name","description","product_id","machine_type_id","category_id","capacity_id","machineValidator","Select","options","find","option","saveOrders","makeEnquiry","cartProducts","setCartProducts","Date","startDate","onStartDateChange","endDate","onEndDateChange","showLogin","setShowLogin","activeStep","setActiveStep","orderInfo","setOrderInfo","showEnquiry","setShowEnquiry","myRef","useRef","executeScroll","ref","scrollTo","current","offsetTop","updteQuantity","quantity","clonedCart","reltedProductIndex","findIndex","splice","updateItemtoLocal","items","placeOrder","order_product","machine_product_id","placeInquiry","relatedProduct","pd","product","addToCart","min","Number","comments_remarks","order_scope","orderValidator","minDate","inquiryValidator","reload","interceptors","use","config","Promise","reject","PrivateOnlyRoute","component","rest","render","token","defaults","CustomerRoute","WebisteRouter","App","baseURL","exact","path","Home","Contact","Login","Products","Profile","CustomerOrders","ContactLeads","CountryManagement","CapacityManagement","Orders","TypesManagment","CategoryManagment","EnquiryList","MachineManagement","Users","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","authenticated","credentials","matches","sidebarShow","sucesss","dashboard","reports","middleware","thunk","reducers","combineReducers","action","updateuser","filter","_id","isBlocked","updatedCountry","passions","updatedPassion","advertisment","updatedAdvertisment","subscriptions","updatedSubscriptions","capacityList","updatedCapacity","productsData","typeList","updatedTypes","categoryList","orderData","updatedOrder","enhancer","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","store","createStore","ReactDOM","getElementById"],"mappings":"0OAAe,MAA0B,oC,wBCC5BA,EAAoB,oBACpBC,EAAsB,sBACtBC,EAAW,WACXC,EAAY,YACZC,EAAe,eAEfC,EAAe,eACfC,EAAc,cAIdC,EAAa,aACbC,EAAa,aACbC,EAAe,eAEfC,EAAkB,kBAClBC,EAAiB,iBACjBC,EAAe,eAGfC,EAAc,cACdC,EAAgB,gBAChBC,EAAc,cACdC,EAAiB,iBACjBC,EAAsB,sBACtBC,EAAc,cACdC,EAAmB,mBACnBC,EAAsB,sBACtBC,EAAY,YACZC,EAAe,eACfC,EAAoB,oBACpBC,EAAc,cAGdC,EAAe,eACfC,EAAe,eACfC,EAAgB,gBAChBC,EAAW,WACXC,EAAW,WACXC,EAAY,YACZC,EAAe,eACfC,EAAe,eACfC,EAAgB,gBAChBC,EAAe,eACfC,GAAe,eACfC,GAAc,cACdC,GAAe,eACfC,GAAa,aACbC,GAAuB,uBACvBC,GAAc,cACdC,GAAmB,mB,6BCnDnBC,GAAUC,OAAOC,SAASC,KAAKC,SAAS,aACjD,+BACA,OAGSC,GAAS,CACpB,CACEC,MAAO,OACPC,MAAO,QAET,CACED,MAAO,OACPC,MAAO,QAET,CACED,MAAO,SACPC,MAAO,WAIEC,GAAY,CACvB,CACEF,MAAO,UACPC,MAAO,WAET,CACED,MAAO,SACPC,MAAO,UAET,CACED,MAAO,QACPC,MAAO,UCCEE,GAAe,kBAAM,SAACC,GACjCA,EAAS,CAAEC,KAAM7C,IAEjB8C,KACGC,IAAI,wBACJC,MAAK,SAACC,GACLL,EAAS,CACPC,KAAMxC,EACN6C,QAASD,EAAIE,KAAKA,OAGpBP,EAAS,CAAEC,KAAM5C,GAClB,IAEAmD,OAAM,SAACC,GACNT,EAAS,CACPC,KAAM9C,EACNmD,QAASG,EAAIC,SAAWD,EAAIC,SAASH,KAAOE,EAAIC,UAEnD,GACJ,CApB2B,EA2CfC,GAAe,SAACC,GAAD,OAAQ,SAACZ,GACnCA,EAAS,CAAEC,KAAM7C,IAEjB8C,KACGC,IAAI,gCAAkCS,GACtCR,MAAK,SAACC,GACLL,EAAS,CACPC,KAAMvC,EACN4C,QAASD,EAAIE,KAAKA,OAGpBP,EAAS,CAAEC,KAAM5C,GAClB,IAEAmD,OAAM,SAACC,GACNT,EAAS,CACPC,KAAM9C,EACNmD,QAASG,EAAIC,SAAWD,EAAIC,SAASH,KAAOE,EAAIC,UAEnD,GACJ,CApB2B,EAsIfG,GACX,eAACC,EAAD,uDAAQ,EAAGC,EAAX,uDAAoB,GAApB,OACA,SAACf,GACCA,EAAS,CAAEC,KAAM7C,IAEjB8C,KACGC,IACC,8BACEW,EACA,SAFF,aAKEC,GAEHX,MAAK,SAACC,GACLL,EAAS,CACPC,KAAM5B,EACNiC,QAASD,EAAIE,KAAKA,OAGpBP,EAAS,CAAEC,KAAM5C,GAClB,IAEAmD,OAAM,SAACC,GACNT,EAAS,CACPC,KAAM9C,EACNmD,QAASG,EAAIC,SAAWD,EAAIC,SAASH,KAAOE,EAAIC,UAEnD,GACJ,CA5BD,EA+EWM,GACX,eAACF,EAAD,uDAAQ,EAAGC,EAAX,uDAAoB,GAApB,OACA,SAACf,GACCA,EAAS,CAAEC,KAAM7C,IAEjB8C,KACGC,IACC,0BACEW,EACA,SAFF,aAKEC,GAEHX,MAAK,SAACC,GACLL,EAAS,CACPC,KAAMzB,EACN8B,QAASD,EAAIE,KAAKA,OAGpBP,EAAS,CAAEC,KAAM5C,GAClB,IAEAmD,OAAM,SAACC,GACNT,EAAS,CACPC,KAAM9C,EACNmD,QAASG,EAAIC,SAAWD,EAAIC,SAASH,KAAOE,EAAIC,UAEnD,GACJ,CA5BD,EAgFWO,GACX,eAACH,EAAD,uDAAQ,EAAGC,EAAX,uDAAoB,GAAIG,EAAxB,8CACA,SAAClB,GACCA,EAAS,CAAEC,KAAM7C,IACjB,IAAI+D,EACF,8BACAL,EACA,SAFA,aAKAC,EACEG,IACFC,EAAMA,EAAM,WAAaD,GAE3BhB,KACGC,IAAIgB,GACJf,MAAK,SAACC,GAML,OALAL,EAAS,CACPC,KAAMtB,EACN2B,QAASD,EAAIE,KAAKA,OAEpBP,EAAS,CAAEC,KAAM5C,IACVgD,CACR,IAEAG,OAAM,SAACC,GACNT,EAAS,CACPC,KAAM9C,EACNmD,QAASG,EAAIC,SAAWD,EAAIC,SAASH,KAAOE,EAAIC,UAEnD,GACJ,CA9BD,EAiFWU,GACX,eAACN,EAAD,uDAAQ,EAAGC,EAAX,uDAAoB,GAAIG,EAAxB,8CACA,SAAClB,GAAc,IAAD,EACZA,EAAS,CAAEC,KAAM7C,IACjB,IAAI+D,EACF,+BACAL,EACA,SAFA,aAKAC,EACA,SACAM,aAAaC,QAAQ,WACrB,aARA,UASAC,KAAKC,MAAMH,aAAaC,QAAQ,qBAThC,aASA,EAA+CV,IAC7CM,IACFC,EAAMA,EAAM,WAAaD,GAG3BhB,KACGC,IAAIgB,GACJf,MAAK,SAACC,GACLoB,QAAQC,IAAIrB,EAAIE,MAChBP,EAAS,CACPC,KAAMlB,GACNuB,QAASD,EAAIE,KAAKA,OAEpBP,EAAS,CAAEC,KAAM5C,GAClB,IAEAmD,OAAM,SAACC,GACNT,EAAS,CACPC,KAAM9C,EACNmD,QAASG,EAAIC,SAAWD,EAAIC,SAASH,KAAOE,EAAIC,UAEnD,GACJ,CAnCD,EAuFWiB,GAAc,SAACC,GAAD,wDAAU,WAAO5B,GAAP,wFACnCA,EAAS,CAAEC,KAAM7C,KACbyE,EAAW,IAAIC,UACVC,OAAO,OAAQH,GAHW,SAI7B1B,KACH8B,KAAK,wBAAyBH,GAC9BzB,MAAK,SAACC,GASL,OARA4B,KAAMC,QAAN,UAAiB7B,EAAIE,KAAK4B,SAAW,CACnCC,SAAUH,KAAMI,SAASC,YAE3BtC,EAAS,CACPC,KAAMnB,EACNwB,QAASD,EAAIE,KAAKA,KAAKqB,OAEzB5B,EAAS,CAAEC,KAAM5C,IACVgD,CACR,IAEAG,OAAM,SAACC,GACNT,EAAS,CACPC,KAAM9C,EACNmD,QAASG,EAAIC,SAAWD,EAAIC,SAASH,KAAOE,EAAIC,UAEnD,IAvBgC,2CAAV,uDA0Bd6B,GAAc,SAAChC,GAAD,wDAAU,WAAOP,GAAP,2EACnCA,EAAS,CACPC,KAAMnB,EACNwB,QAASC,IAHwB,2CAAV,uDA+BdiC,GAAY,SAACC,GAAD,OAAY,SAACzC,GACpCA,EAAS,CAAEC,KAAM7C,IAEjB8C,KACG8B,KAAK,kBAAmBS,GACxBrC,MAAK,SAACC,GACLL,EAAS,CACPC,KAAMf,GACNoB,QAASD,EAAIE,KAAKA,OAGpBP,EAAS,CAAEC,KAAM5C,GAClB,IAEAmD,OAAM,SAACC,GACNT,EAAS,CACPC,KAAM9C,EACNmD,QAASG,EAAIC,SAAWD,EAAIC,SAASH,KAAOE,EAAIC,UAEnD,GACJ,CApBwB,E,QCrlBV,OAA0B,kCC2G5BgC,GAAa,SAACC,GAAD,OAAa,SAAC3C,GACtCA,EAAS,CAAEC,KAAM7C,IAEjB8C,KACG8B,KAAK,gBACL5B,MAAK,SAACC,GACLgB,aAAauB,WAAW,gBACxBvB,aAAauB,WAAW,WACxBD,EAAQE,KAAK,UACb7C,EAAS,CAAEC,KAAM5C,IACjB2C,EAAS,CAAEC,KAAMpD,IACjBmD,EAAS,CACPC,KAAMlD,EACNuD,QAAS,MAEZ,IAEAE,OAAM,SAACC,GACNY,aAAauB,WAAW,gBACxBvB,aAAauB,WAAW,WACxBD,EAAQE,KAAK,UACb7C,EAAS,CAAEC,KAAM5C,IACjB2C,EAAS,CAAEC,KAAMpD,IACjBmD,EAAS,CACPC,KAAMlD,EACNuD,QAAS,MAEZ,GACJ,CA5ByB,EA8BbwC,GACX,kBACA,SAAC9C,GACCA,EAAS,CAAEC,KAAM7C,IACbiE,aAAaC,QAAQ,iBACvBpB,KACGC,IAAI,oBACJC,MAAK,SAACC,GACLL,EAAS,CACPC,KAAMlD,EACNuD,QAASD,EAAIE,KAAKA,OAEpBP,EAAS,CAAEC,KAAM5C,GAClB,IAEAmD,OAAM,SAACC,GAUP,GAEN,CA1BD,EAoEIsC,GAAyB,SAACxC,EAAMyC,GACpC3B,aAAa4B,QAAQ,eAAgB1C,EAAKA,KAAK2C,aAC/C7B,aAAa4B,QAAQ,UAAW1C,EAAKA,KAAKyC,SAC1C3B,aAAa4B,QAAQ,YAAa1B,KAAK4B,UAAU5C,EAAKA,MACvD,E,QCjFD,IAKM6C,GAAoB,CACxBN,WACAJ,eAGaW,eAAWC,aAVF,SAACC,GAAD,MAAY,CAClCC,KAAMD,EAAMC,KACZC,OAAQF,EAAME,OAFQ,GAU2BL,GAAzBE,EArI1B,YAA0D,IAAhCE,EAA+B,EAAvCA,KAAQA,KAAQd,EAAuB,EAAvBA,WAAYC,EAAW,EAAXA,QAC5C,EAAoCe,oBAAS,GAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAEMC,EACJ,uCACE,qBAAIC,UAAU,SAAd,SACE,eAAC,IAAD,CAASC,GAAG,IAAZ,oBAEF,8BACE,eAAC,IAAD,CAASA,GAAG,SAAZ,wBAEF,8BACE,eAAC,IAAD,CAASA,GAAG,iCAAZ,2BAGF,8BACE,eAAC,IAAD,CAASA,GAAG,WAAZ,uBAEAP,EAwBA,uCACE,qBAAIM,UAAU,WAAd,SACE,qBACEA,UAAU,WACVE,QAAS,WACPrB,EAAQE,KAAK,WACd,EAJH,UAME,oBAAGiB,UAAU,qBANf,kBAUF,qBAAIA,UAAU,WAAd,SACE,qBACEA,UAAU,WACVE,QAAS,WACPtB,EAAWC,EACZ,EAJH,UAME,oBAAGmB,UAAU,yBANf,iBApCJ,uCACE,8BACE,gBAAC,IAAD,CACEC,GAAG,sBACHE,OAAO,SACPH,UAAU,6BAHZ,UAKE,oBAAGA,UAAU,gBAAgB,cAAY,SAL3C,4BASF,8BACE,gBAAC,IAAD,CACEC,GAAG,sBACHE,OAAO,SACPH,UAAU,6BAHZ,UAKE,oBAAGA,UAAU,gBAAgB,cAAY,SAL3C,iCAsCV,OACE,uBAAKA,UAAU,YAAf,UACE,uBAAKA,UAAU,mBAAf,UACE,sBAAKA,UAAU,0BAAf,SACE,sBAAKA,UAAU,8BAAf,SACE,uBAAMA,UAAU,mCAGpB,sBAAKA,UAAU,6BAEjB,yBAAQA,UAAU,mBAAmBI,KAAK,SAA1C,SACE,sBAAKJ,UAAU,YAAf,SACE,uBAAKA,UAAU,yBAAf,UACE,sBAAKA,UAAU,kBAAf,SACE,qBAAIA,UAAU,OAAd,SACE,eAAC,IAAD,CAAMC,GAAG,IAAID,UAAU,qBAAvB,SACE,sBAAKK,IAAKC,GAAMC,MAAM,cAI5B,sBAAKP,UAAU,qCAAf,SACE,sBACEA,UAAU,+CACVI,KAAK,aAFP,SAIE,qBAAIJ,UAAU,mDAAd,SACGD,QAIP,sBACEC,UAAU,gDADZ,SAIE,oBACErE,KAAK,IACLuE,QAAS,kBAAMJ,GAAeD,EAArB,EACTG,UAAU,kCAHZ,SAKE,uBAAMA,UAAU,4BAMzBH,GACC,sBAAKG,UAAU,wBAAf,SACE,8BAAKD,QAKd,KC5Hc,SAASS,KACtB,OACE,yBAAQR,UAAU,cAAlB,SACE,uBAAKA,UAAU,YAAf,UACE,sBAAKA,UAAU,MAAf,SACE,sBAAKA,UAAU,YAAf,SACE,uBAAKA,UAAU,MAAf,UACE,uBAAKA,UAAU,WAAf,UACE,qBAAIA,UAAU,sBAAd,yBACA,sBAAIA,UAAU,gBAAd,UACA,8BACI,eAAC,IAAD,CAAMC,GAAG,IAAT,oBAEF,8BACE,eAAC,IAAD,CAAMA,GAAG,SAAT,wBAEF,8BACA,eAAC,IAAD,CAAMA,GAAG,WAAT,wBAGA,8BACA,eAAC,IAAD,CAAMA,GAAG,WAAT,gCAKJ,uBAAKD,UAAU,WAAf,UACE,qBAAIA,UAAU,sBAAd,uBACA,oBAAGrE,KAAK,IAAIqE,UAAU,YAAtB,SACE,uBAAMA,UAAU,oBAElB,oBAAGrE,KAAK,IAAIqE,UAAU,YAAtB,SACE,uBAAMA,UAAU,mBAElB,oBAAGrE,KAAK,IAAIqE,UAAU,YAAtB,SACE,uBAAMA,UAAU,qBAElB,oBAAGrE,KAAK,IAAIqE,UAAU,YAAtB,SACE,uBAAMA,UAAU,8BAO1B,sBAAKA,UAAU,mBAAf,SACE,sBAAKA,UAAU,YAAf,SACE,sBAAKA,UAAU,kBAAf,SACE,4CACS,eAAC,IAAD,CAAMC,GAAG,IAAT,qBADT,oCASb,CCxDc,SAASQ,GAAT,GAAyD,IAAzCC,EAAwC,EAAxCA,QAAQC,EAAgC,EAAhCA,OAAgC,IAAzBJ,aAAyB,MAAnB,IAAmB,EAAfK,EAAe,EAAfA,KAAKC,EAAU,EAAVA,QAC3D,OACI,qCACCD,GACH,uBAAMZ,UAAS,gBAAWY,GAAQ,aAAeE,UAAW,EAAGV,KAAK,SAApE,UACA,sBAAMF,QAASW,EAASb,UAAS,8BAAyBY,GAAQ,WAC9D,sBAAKZ,UAAU,qCAAqCI,KAAK,WAAWW,MAAO,CAACC,SAAST,GAArF,SACE,uBAAKP,UAAU,gBAAf,UAEKW,GACH,uBAAKX,UAAU,eAAf,UACI,8BAAKW,IACP,yBAAQxE,KAAK,SAAS+D,QAASW,EAASb,UAAU,QAAQ,eAAa,QAAQ,aAAW,QAA1F,SACE,uBAAM,cAAY,OAAlB,uBAGJ,sBAAKA,UAAU,aAAf,SACGU,aAYd,CC/Bc,SAASO,GAAMC,GAC1B,IAAOC,EAAcD,EAAdC,MAAMhF,EAAQ+E,EAAR/E,KACb,EAAuCyD,oBAAS,GAAhD,mBAAOwB,EAAP,KAAoBC,EAApB,KACA,OACE,uCACE,uBAAMrB,UAAU,YAAhB,UACA,kDAAWkB,GAAX,IAAkB/E,KAAMA,EAAQiF,EAAe,OAASjF,EAAQ,UACtD,aAATA,EACC,oBAAG+D,QAAS,kBAAMmB,GAAiBD,EAAvB,EAAsCpB,UAAS,aAASoB,EAAsB,eAAT,YAIjF,MAGDD,EACC,oBACAJ,MAAO,CAAEO,WAAY,EACrBC,SAAS,GACTC,MAAM,OAHN,SAIGL,IAED,OAGX,C,YCLcM,GAnBI,WACjB,MAA+CC,eAAvCC,EAAR,EAAQA,OAAQC,EAAhB,EAAgBA,aAAcC,EAA9B,EAA8BA,aAe9B,OAbAC,qBAAU,WACR,GAAIF,IAAiBC,EAAc,CACjC,IAAIE,EAAOC,OAAOD,KAAKJ,GACvB,GAAII,EAAKE,OAAS,EAAG,CACnB,IAAMC,EAAQ,gBAAYH,EAAK,GAAjB,KACRI,EAAeC,SAASC,cAAcH,GACxCC,GACFA,EAAaG,OAEhB,CACF,CACF,GAAE,CAACX,EAAQC,EAAcC,IAEnB,IACR,ECTD,IAIerC,gBAJS,SAACC,GAAD,MAAY,CAClC8C,GAAI9C,EAAM8C,GADY,GAIT/C,EAbf,SAAgB0B,GAEd,OADeA,EAAPqB,GACEC,QACR,sBAAKxC,UAAU,aAAf,SACE,uBAAKA,UAAU,aAAf,UAA4B,yBAAW,yBAAW,yBAAW,yBAAW,yBAAW,yBAAW,yBAAW,8BAEzG,IACL,ICmNKV,I,MAAoB,CACxBN,WACAJ,cACA6D,gBTudA,kBACA,SAACvG,GAGCE,KACGC,IACC,mCAEDC,MAAK,SAACC,GACLL,EAAS,CACPC,KAAMZ,GACNiB,QAASD,EAAIE,KAAKA,OAGpBP,EAAS,CAAEC,KAAM5C,GAClB,IAEAmD,OAAM,SAACC,GACNT,EAAS,CACPC,KAAM9C,EACNmD,QAASG,EAAIC,SAAWD,EAAIC,SAASH,KAAOE,EAAIC,UAEnD,GACJ,CAvBD,EStdA8F,mBT+ekC,SAACvG,EAAK0C,GAAN,OAAkB,SAAC3C,GACnDA,EAAS,CAAEC,KAAM7C,IACjB,IACMqJ,EAAU,CACd,eAAgB,mBAChB,iBAHYpF,aAAaC,QAAQ,iBAKnCpB,KACGwG,IAAI,2CAA4C,CAC/CC,kBAAkB1G,GACnB,CACCwG,QAASA,IAEVrG,MAAK,SAACC,GACLL,EAAS,CAAEC,KAAM5C,IACL,aAAT4C,GACD0C,EAAQE,KAAK,eAEH,UAAT5C,GACD0C,EAAQE,KAAK,WAEH,aAAT5C,GACD0C,EAAQE,KAAK,cAEH,aAAT5C,GACD0C,EAAQE,KAAK,YAEhB,IAEArC,OAAM,SAACC,GACNT,EAAS,CACPC,KAAM9C,EACNmD,QAASG,EAAIC,SAAWD,EAAIC,SAASH,KAAOE,EAAIC,UAEnD,GACJ,CAnCiC,IS5erB2C,eACbC,aAbsB,SAACC,GAAD,MAAY,CAClCC,KAAMD,EAAMC,KACZC,OAAQF,EAAME,OAFQ,GAaGL,GAAzBE,EA3NkB,SAAC,GASd,IAAD,EARJsD,EAQI,EARJA,SACAjE,EAOI,EAPJA,QACAD,EAMI,EANJA,WACAI,EAKI,EALJA,QACAyD,EAII,EAJJA,gBACAC,EAGI,EAHJA,mBACQhD,EAEJ,EAFJA,KAAQA,KACAqD,EACJ,EADJpD,OAAQoD,aAER,EAAgCnD,oBAAS,GAAzC,mBAAOoD,EAAP,KAAiBC,EAAjB,KACAtF,QAAQC,IAAImF,GACZ,MAAsCnD,oBAAS,GAA/C,mBAAOsD,EAAP,KAAoBC,EAApB,KAgBA,OARArB,qBAAU,WACR9C,IACAyD,IACAW,aAAY,WACVX,GACD,GAAC,IAEH,GAAE,IAED,iCAEE,uBACEzC,UAAU,mEACVlD,GAAG,UAFL,UAIE,eAAC,IAAD,CAAMkD,UAAU,eAAeC,GAAG,IAAlC,SACA,sBAAKM,MAAM,MAAMF,IAAKC,OAGtB,uBAAKN,UAAU,2BAA2BlD,GAAG,mBAA7C,UACE,sBAAIkD,UAAU,4BAA4BlD,GAAG,mBAA7C,UACE,qBACEkD,UAAU,WACV,cAAY,UACZ,iBAAe,QAHjB,SAWoB,IAAb,OAAJN,QAAI,IAAJA,OAAA,EAAAA,EAAMR,UACL,uCACE,gBAAC,IAAD,CAASc,UAAU,WAAWC,GAAG,UAAjC,UACE,oBAAGD,UAAU,0BACb,uBAAMA,UAAU,gBAAhB,uBAEgB,IAAb,OAAJN,QAAI,IAAJA,OAAA,EAAAA,EAAMR,UACL,uCACE,gBAAC,IAAD,CAASc,UAAU,WAAWC,GAAG,iBAAjC,UACE,oBAAGD,UAAU,6BACb,uBAAMA,UAAU,gBAAhB,8BAEF,gBAAC,IAAD,CAASA,UAAU,WAAWC,GAAG,aAAjC,UACE,oBAAGD,UAAU,4BACb,uBAAMA,UAAU,gBAAhB,0BAEF,gBAAC,IAAD,CAASA,UAAU,WAAWC,GAAG,cAAjC,UACE,oBAAGD,UAAU,sBACb,uBAAMA,UAAU,gBAAhB,6BAKN,0BACEA,UAAU,WACVE,QAAS,kBAAMiD,GAAgBD,EAAtB,EAFX,UAIE,oBAAGlD,UAAU,mBACb,uBAAMA,UAAU,gBAAhB,gCACA,oBACEA,UAAS,cACPkD,EAAc,gBAAkB,iBADzB,mBAKZA,GACC,sBAAIlD,UAAU,yDAAd,UACoB,IAAb,OAAJN,QAAI,IAAJA,OAAA,EAAAA,EAAMR,UACL,uCACE,8BACE,eAAC,IAAD,CAASe,GAAG,uBAAZ,wBAIF,8BACE,eAAC,IAAD,CAASA,GAAG,oBAAZ,qBAEF,8BACE,eAAC,IAAD,CAASA,GAAG,uBAAZ,2BAMN,8BACE,eAAC,IAAD,CAASA,GAAG,YAAZ,gCAOM,IAAb,OAAJP,QAAI,IAAJA,OAAA,EAAAA,EAAMR,UACL,qCACE,qBACEc,UAAU,WACV,cAAY,UACZ,iBAAe,QAHjB,SAKE,gBAAC,IAAD,CAASA,UAAU,WAAWC,GAAG,mBAAjC,UACE,oBAAGD,UAAU,0BACb,uBAAMA,UAAU,gBAAhB,8BAOV,sBAAIA,UAAU,qBAAd,UACE,qBAAIA,UAAU,WAAd,SACE,wBAAMA,UAAU,YAAhB,UACG3D,eAAIqD,EAAM,aAAc,IAD3B,IACiCrD,eAAIqD,EAAM,YAAa,SAG1D,qBAAIM,UAAU,WAAd,SACE,qBACEA,UAAU,WACVE,QAAS,WACPrB,EAAQE,KAAK,WACd,EAJH,UAME,oBAAGiB,UAAU,qBANf,kBAUF,qBAAIA,UAAU,WAAd,SACE,qBACEA,UAAU,WACVE,QAAS,WACPtB,EAAWC,EACZ,EAJH,UAME,oBAAGmB,UAAU,yBANf,iBAWHqD,QAAO,OAACN,QAAD,IAACA,OAAD,EAACA,EAAcO,qBACvB,qBAAItD,UAAU,8BAAd,SACF,sBAAIA,UAAU,WAAd,UACE,qBAAIA,UAAU,kBAAkBE,QAAS,kBAAK+C,GAAaD,EAAlB,EAA6B,cAAY,WAAW5C,KAAK,SAAS,gBAAc,OAAO,gBAAc,QAA9I,UAAsJ,oBAAGJ,UAAU,aAAa,cAAY,SAA5L,IACR,oCAAI+C,QAAJ,IAAIA,OAAJ,EAAIA,EAAcO,qBADV,OAECN,GACD,sBAAIhD,UAAU,4BAAd,UACE,sBAAKA,UAAU,oBAAf,SACE,sBAAKA,UAAU,MAAf,SACE,uBAAKA,UAAU,YAAf,4BAA0C,oCAAI+C,QAAJ,IAAIA,OAAJ,EAAIA,EAAcO,qBAA5D,WAIJ,sBAAKtD,UAAU,eAAf,gBAEG+C,QAFH,IAEGA,GAFH,UAEGA,EAAcA,oBAFjB,aAEG,EAA4BQ,KAAI,SAAAC,GAAO,IAAD,IACjCrH,EAAOqH,EAAKC,eAAe,YAAa,WAAWD,EAAKC,eAAe,WAAa,UAAUD,EAAKC,eAAe,WAAW,UAAUD,EAAKC,eAAe,SAAS,QAAS,YAClL,OAAQ,8BACR,0BAAQvD,QAAS,kBAnKG,SAAC/D,GAEhCuG,EAAmBvG,EAAK0C,GACxBoE,GAAY,EACb,CA+JkCS,CAAwBvH,EAA7B,EAAjB,UACA,sBAAK6D,UAAU,6BAAf,SAA4C,sBAAKA,UAAU,aAAf,SAA4B,oBAAGA,UAAS,cAAgB,YAAP7D,EAAkB,eAAuB,WAARA,EAAkB,qBAA2B,WAANA,EAAgB,cAAsB,SAARA,EAAgB,qBAAqB,qBACxO,uBAAK6D,UAAU,mCAAf,UAAkD,qBAAGA,UAAU,QAAb,UAAuB7D,EAAvB,KAA+BqH,EAAKrH,GAAMwH,MAA1C,OAChD,wBADF,UAEGH,EAAKrH,UAFR,iBAEG,EAAYyH,eAFf,aAEG,EAAqBL,KAAI,SAAAM,GACzB,OAAO,oBAAG7D,UAAU,OAAb,SAAqB6D,EAAMC,QAClC,WAGE,oBAWd,sBAAK9D,UAAU,kBAAf,SACE,sBAAKA,UAAU,kBAAf,SAAkC8C,QAMzC,KChEKxD,GAAoB,CACxBN,WACAJ,eAGaW,eACbC,aAXsB,SAACC,GAAD,MAAY,CAClCC,KAAMD,EAAMC,KACZC,OAAQF,EAAME,OAFQ,GAWGL,GAAzBE,EAnJqB,SAAC,GAMjB,IALLsD,EAKI,EALJA,SACAjE,EAII,EAJJA,QACAD,EAGI,EAHJA,WACAI,EAEI,EAFJA,QACQU,EACJ,EADJA,KAAQA,KAGR,EAAuBE,oBAAS,GAAhC,mBAAOgB,EAAP,KAAYmD,EAAZ,KAMA,OAHAjC,qBAAU,WACR9C,GACD,GAAE,IAED,iCAEE,uBACEgB,UAAU,wEACVlD,GAAG,UAFL,UAIE,eAAC,IAAD,CAAMmD,GAAG,IAAT,SACE,sBAAKD,UAAU,UAAUO,MAAM,MAAMF,IAAKC,OAE5C,sBACMN,UAAU,gDADhB,SAIM,oBACErE,KAAK,IACLuE,QAAS,kBAAM6D,GAASnD,EAAf,EACTZ,UAAU,kCAHZ,SAKE,uBAAMA,UAAU,qBAGxB,uBAAKA,UAAS,mCAA8BY,EAAK,SAAS,IAAM9D,GAAG,mBAAnE,UACE,sBAAIkD,UAAU,4BAA4BlD,GAAG,mBAA7C,UACE,8BACE,sBAAKkD,UAAU,iBAQjB,qBAAIA,UAAU,WAAd,SACE,gBAAC,IAAD,CAASA,UAAU,WAAWC,GAAG,YAAjC,UACE,oBAAGD,UAAU,iBACb,uBAAMA,UAAU,gBAAhB,8BAKN,qBAAIA,UAAU,qBAAd,SACGqD,QAAQ3D,GACP,uCACE,qBAAIM,UAAU,WAAd,SACE,wBAAMA,UAAU,YAAhB,UACG3D,eAAIqD,EAAM,kBAAmB,IAAK,IAClCrD,eAAIqD,EAAM,iBAAkB,SAGjC,qBAAIM,UAAU,WAAd,SACE,qBACEA,UAAU,WACVE,QAAS,WACPrB,EAAQE,KAAK,WACd,EAJH,UAME,oBAAGiB,UAAU,qBANf,kBAUF,qBAAIA,UAAU,WAAd,SACE,qBACEA,UAAU,WACVE,QAAS,WACPrB,EAAQE,KAAK,mBACd,EAJH,UAME,oBAAGiB,UAAU,qBANf,iBAUF,qBAAIA,UAAU,WAAd,SACE,qBACEA,UAAU,WACVE,QAAS,WACPtB,EAAWC,EACZ,EAJH,UAME,oBAAGmB,UAAU,yBANf,iBAYJ,uCACE,qBAAIA,UAAU,WAAd,SACE,qBACEA,UAAU,WACVE,QAAS,WACPrB,EAAQE,KAAK,mBACd,EAJH,UAME,oBAAGiB,UAAU,eANf,aAUF,qBAAIA,UAAU,WAAd,SACE,qBACEA,UAAU,WACVE,QAAS,WACPrB,EAAQE,KAAK,sBACd,EAJH,UAME,oBAAGiB,UAAU,kBANf,2BAeZ,sBAAKA,UAAU,kCAAf,SACE,sBAAKA,UAAU,kBAAf,SAAkC8C,QAMzC,K,SC3HckB,OAhBf,SAAqB9C,GACnB,IAAQC,EAAUD,EAAVC,MACR,OACE,iCACE,eAAC,KAAD,aACE8C,aAAW,GAEP/C,IAELC,EACC,oBAAGJ,MAAO,CAAEO,WAAY,EAAGC,SAAU,GAAIC,MAAO,OAAhD,SAA0DL,IACxD,OAGT,ECfc,SAAS+C,GAAShD,GAC7B,IAAOC,EAASD,EAATC,MACP,OACE,uCACE,yCAAcD,IACbC,EACC,oBACAJ,MAAO,CAAEO,WAAY,EACrBC,SAAS,GACTC,MAAM,OAHN,SAIGL,IAED,OAGX,C,wBCjBc,OAA0B,oCCA1B,OAA0B,oCCA1B,OAA0B,oCCA1B,OAA0B,oCCA1B,OAA0B,oCCSpBgD,G,4JACnB,WAqCE,OACE,iCACE,sBAAKC,MAAM,uCAAX,SAAkD,qBAAIA,MAAM,eAAV,4BAClD,gBAAC,KAAD,2BAvCa,CACbC,MAAM,EACNC,UAAU,EACVC,MAAO,IACPC,UAAS,EACTC,aAAc,EACdC,eAAgB,EAChBC,WAAY,CACV,CACEC,WAAY,KACZC,SAAU,CACRJ,aAAc,EACdC,eAAgB,EAChBJ,UAAU,EACVD,MAAM,IAGV,CACEO,WAAY,IACZC,SAAU,CACRJ,aAAc,EACdC,eAAgB,IAGpB,CACEE,WAAY,IACZC,SAAU,CACRJ,aAAc,EACdC,eAAgB,OAWtB,cACE,+BACE,sBAAKrE,IAAKyE,OAEZ,+BACA,sBAAKzE,IAAK0E,OAEV,+BACA,sBAAK1E,IAAK2E,OAEV,+BACA,sBAAK3E,IAAK4E,OAEV,+BACA,sBAAK5E,IAAK6E,aAMjB,K,GA7DqCC,a,SCiBzBC,OAxBf,SAAoBlE,GAAQ,IAAD,EACjBmE,EAA0CnE,EAA1CmE,UAAUC,EAAgCpE,EAAhCoE,WAAWC,EAAqBrE,EAArBqE,iBAC7B,OACE,sBAAInB,MAAM,0BAAV,UACCkB,EAAY,GACb,qBAAIlB,MAAM,YAAV,SAAsB,oBAAIlE,QAAS,kBAAIqF,EAAiBD,EAAW,EAAhC,EAAoClB,MAAK,YAAezI,KAAK,IAAI,aAAW,WAAzF,oBAErB6J,MAAMC,MAAM,KAAM,CAACxD,OAAQoD,IAC/B9B,KAAI,SAACC,EAAKkC,GACH,OAAQ,qBAAgBtB,MAAK,oBAAekB,GAAYI,GAAS,UAAzD,SAAqE,oBAC7ExF,QAAS,kBAAIqF,EAAiBG,EAArB,EAETtB,MAAM,YAAYzI,KAAK,IAHsD,gBAA5D+J,EAIpB,IAGAJ,EAAYD,EAAU,GACvB,qBAAIjB,MAAM,YAAV,SAAsB,uBAAGlE,QAAS,kBAAIqF,EAAiBD,EAAW,EAAhC,EAAqClB,MAAM,aAAvD,2CAAuFkB,GAAaD,EAAU,GAAM,aAApH,sBAAwI,KAAxI,4BAAuJ,QAAvJ,0CAIzB,EC0BcM,OA9Cf,SAAgBzE,GACuDA,EAA7DC,MAAR,IAAcyE,EAAuD1E,EAAvD0E,YAAYC,EAA2C3E,EAA3C2E,eAAeC,EAA4B5E,EAA5B4E,YAAYC,EAAgB7E,EAAhB6E,YACrD,EAAiCnG,oBAAS,GAA1C,mBAAOoG,EAAP,KAAiBC,EAAjB,KACA,OACE,+BACE,wBAAM7B,MAAM,0BAAZ,UACA,sBAAKA,MAAM,kBAAX,SACM,wBACEjI,KAAK,OACLiI,MAAM,eACN8B,SAAU,SAACC,GACTF,GAAa,GACbJ,EAAeM,EAAEhG,OAAOpE,MAAO,EACjCA,MAAO6J,EACPQ,YAAY,gBAGfJ,EACE,yBACA7J,KAAK,SAEL+D,QAAS,WACR+F,GAAa,GACbF,GAAc,EACf3B,MAAM,2CANN,mBAWC,yBACFjI,KAAK,SACL+D,QAAS,WACP+F,GAAa,GACbH,GAAc,EAChB1B,MAAM,2CALJ,SAOF,oBAAGpE,UAAU,uBAQxB,ECnCcqG,OAVf,SAAgBnF,GACd,OACE,uBAAKlB,UAAU,UAAf,UACE,oBAAGoE,MAAM,YAAY,cAAY,SAEjC,mDAGL,ECRc,SAASkC,GAAT,GAKX,IAJF5F,EAIC,EAJDA,QACAE,EAGC,EAHDA,KACA2F,EAEC,EAFDA,YACAC,EACC,EADDA,YAEA,OACE,eAAC/F,GAAD,CACEG,KAAMA,EACNF,QACE,uBAAKV,UAAU,cAAf,UACE,oCAAMU,KACN,uBAAKV,UAAU,YAAf,UACE,yBACE7D,KAAK,SACL+D,QAAS,kBAAMsG,GAAN,EACTxG,UAAU,iCAHZ,oBAOA,yBACE7D,KAAK,SACL+D,QAAS,kBAAMqG,GAAN,EACTvG,UAAU,8BAHZ,6BAYX,CChCc,SAASyG,GAAT,GAKX,IAJF/F,EAIC,EAJDA,QACAE,EAGC,EAHDA,KACA2F,EAEC,EAFDA,YAEC,EADDC,YAEA,OACE,eAAC/F,GAAD,CACEG,KAAMA,EACNF,QACE,uBAAKV,UAAU,qBAAf,UACE,oCAAMU,KACN,sBAAKV,UAAU,mBAAf,SACE,yBACE7D,KAAK,SACL+D,QAAS,kBAAMqG,GAAN,EACTvG,UAAU,8BAHZ,4BAYX,CClBD,IA0IMV,GAAoB,CACxBnC,gBAGaqC,gBATS,SAACC,GAAD,MAAY,CAClCC,KAAMD,EAAMC,KACZC,OAAQF,EAAME,OAFQ,GASgBL,GAAzBE,EA9IF,SAAC,GAKP,IAJLrC,EAII,EAJJA,YAII,IAHJwC,OAAU+G,EAGN,EAHMA,SAEV7H,GACI,EAHgB8H,cAGhB,EAFJjL,SAAYuB,OAER,EADJ4B,SAEA,EAAoCe,mBAAS,IAA7C,mBAAOgH,EAAP,KAAkBf,EAAlB,KACA/D,qBAAU,WACR3E,EAAY,EAAG,GAAI,EACpB,GAAE,IACH,MAAgCyC,oBAAS,GAAzC,mBAAOiH,EAAP,KAAmBC,EAAnB,KACA,EAAoClH,oBAAS,GAA7C,mBAAOmH,EAAP,KAAmBC,EAAnB,KACA,OACE,iCACE,sBACEhH,UAAU,4BACVe,MAAO,CAAEkG,gBAAgB,OAAD,OAASC,EAAT,MACxB,WAAS,OACT,gCAA8B,MAJhC,SAME,sBAAKlH,UAAU,YAAf,SACE,sBAAKA,UAAU,gDAAf,SACE,uBAAKA,UAAU,YAAY,WAAS,UAAU,iBAAgB,IAA9D,UACE,sBAAIA,UAAU,oEAAd,0DAEE,wBAFF,8BAIA,uBAAKA,UAAU,sBAAf,UACE,qBAAIA,UAAU,UAAd,4BACA,uBACEA,UAAU,eACVmH,SAAU,SAAChB,GACTA,EAAEiB,iBACFvI,EAAQE,KAAK,mBAAqB6H,EACnC,EALH,SAOE,uBAAK5G,UAAU,aAAf,UACE,wBACEA,UAAU,eACV7D,KAAK,OACL+J,SAAU,SAACC,GAAD,OAAON,EAAeM,EAAEhG,OAAOpE,MAA/B,EACVqK,YAAY,qCAEd,yBACEpG,UAAU,6BACV7D,KAAK,SAFP,qCAcd,sBAAK6D,UAAU,yBAAf,SACE,uBAAKA,UAAU,YAAf,UACE,sBAAKA,UAAU,mCAAf,SACE,sBAAKA,UAAU,sCAAf,SACE,qBAAIA,UAAU,iCAAd,+BAGJ,sBAAKA,UAAU,0BAAf,SACG3D,eAAIqK,EAAU,eAAgB,IAAInD,KAAI,SAACC,GACtC,OACE,sBAAKxD,UAAU,iCAAf,SACE,eAAC,IAAD,CAAMC,GAAI,mBAAqBuD,EAAK6D,cAApC,SACE,sBAAKrH,UAAU,6BAAf,SACE,iCACE,8BAAKwD,EAAK6D,gBACV,sBAAKhH,IAAKmD,EAAK8D,qBAH8B9D,EAAK1G,OAS7D,WAMP,eAAC2D,GAAD,CACEG,KAAMiG,EACNhG,QAAS,kBAAMiG,GAAU,EAAhB,EACTpG,QACE,uBAAKV,UAAU,cAAf,UACE,oBACErE,KAAK,mBACLwE,OAAO,SACPH,UAAU,yCAHZ,iCAOA,oBACErE,KAAK,mBACLwE,OAAO,SACPH,UAAU,yCAHZ,qCAWN,eAACS,GAAD,CACEG,KAAMmG,EACNlG,QAAS,kBAAMmG,GAAc,EAApB,EACTtG,QACE,uBAAKV,UAAU,cAAf,UACE,oBACErE,KAAK,sBACLwE,OAAO,SACPH,UAAU,yCAHZ,qCAOA,oBACErE,KAAK,sBACLwE,OAAO,SACPH,UAAU,yCAHZ,2CAYX,IC5Ic,OAA0B,iCCA1B,OAA0B,wCCqG1BuH,GA/FD,WACZ,OACE,iCACE,sBACEvH,UAAU,kEACVe,MAAO,CACLkG,gBACE,OAAOC,GAAS,KAGpB,WAAS,OACT,gCAA8B,MARhC,SAUE,sBAAKlH,UAAU,YAAf,SACE,sBAAKA,UAAU,4DAAf,SACE,uBACEA,UAAU,gCACV,WAAS,UACT,iBAAgB,IAHlB,UAKE,qBAAIA,UAAU,+DAAd,sBAGA,qBAAGA,UAAU,oBAAb,UACE,eAAC,IAAD,CAAMC,GAAG,IAAT,kBADF,IAC2B,uBAAMD,UAAU,OAAhB,eAAmC,IAC5D,yDAMV,sBAAKA,UAAU,eAAf,SACE,sBAAKA,UAAU,YAAf,SACE,uBAAKA,UAAU,WAAf,UACE,sBACEA,UAAU,wDACV,WAAS,OAFX,SAIE,sBACEK,IAAKmH,GACLC,IAAI,QACJzH,UAAU,oBAEV0H,OAAO,+DAGX,uBACE1H,UAAU,2CACV,WAAS,OAFX,UAIE,sBAAKA,UAAU,qCAAf,SACE,qBAAIA,UAAU,eAAd,2BAEF,+BAAG,8CAAH,yOACd,gGACA,6LACA,6HACA,wGAMM,sBACEA,UAAU,gBADZ,SAIE,uBAAKA,UAAU,YAAf,UACE,sBAAKA,UAAU,kCAAf,SACE,uBAAKA,UAAU,aAAf,UACE,qBACEA,UAAU,oCACV,WAAS,OAFX,uCAMA,oEACd,6DACA,iDACA,4EACA,sDACA,6XACA,8MAGU,eAAC,GAAD,WAQT,EChGK2H,GAAW,oBCHF,OAA0B,qCCoQnCrI,GAAoB,CACxBsI,W9B/MwB,SAACjJ,GAAD,OAAY,SAACzC,GACrCA,EAAS,CAAEC,KAAM7C,IACjB8C,KACG8B,KAAK,kBAAmBS,GACxBrC,MAAK,SAACC,GAEL,OADAL,EAAS,CAAEC,KAAM5C,KACV,CACR,IAEAmD,OAAM,SAACC,GAQN,OAPAT,EAAS,CACPC,KAAM9C,EACNmD,QAASG,EAAIC,SAAWD,EAAIC,SAASH,KAAOE,EAAIC,WAElDuB,KAAMgD,MAAN,sBAAmC,CACjC7C,SAAUH,KAAMI,SAASC,aAEpB,CACR,GACJ,CAnByB,G8BkNXgB,gBATS,SAACC,GAAD,MAAY,CAClCC,KAAMD,EAAMC,KACZC,OAAQF,EAAME,OAFQ,GASgBL,GAAzBE,EA/PC,SAAC,GAAoB,IAAlBoI,EAAiB,EAAjBA,WACjB,EAAwChI,oBAAS,GAAjD,mBAAOiI,EAAP,KAAqBC,EAArB,KACMC,EAAa,iDAAG,WAAOpJ,GAAP,2FACdiJ,EAAWjJ,GADG,OAEpBmJ,GAAgB,GAFI,2CAAH,sDAKnB,OACE,iCACE,sBAAK9H,UAAU,+BAAf,SACE,sBAAKA,UAAU,YAAf,SACE,uBAAKA,UAAU,MAAf,UACE,uBAAKA,UAAU,gBAAf,UACE,6CACA,sBAAKA,UAAU,YAAf,4DAGA,sBAAKA,UAAU,OAAf,SACE,sBAAKA,UAAU,YAAf,SACG6H,EACC,uBAAK7H,UAAU,cAAf,UACE,qBAAIA,UAAU,YAAd,wBACA,oBAAGA,UAAU,OAAb,sDAGA,2BAGF,eAAC,KAAD,CACEgI,oBAAkB,EAClBC,cAAe,CACbC,KAAM,GACNC,MAAO,GACPC,cAAe,GACfC,MAAO,GACPhK,QAAS,IAEXiK,SAAU,SAAC3J,GAAD,OFqIA,SAACA,GAC/B,IAAIgD,EAAS,CAAC,EAyBd,OAxBKhD,EAAOuJ,OACVvG,EAAOuG,KAAOP,IAEXhJ,EAAOwJ,MAGT,8DAA8DI,KAC7D5J,EAAOwJ,SAGTxG,EAAOwG,MAAQ,+BANfxG,EAAOwG,MAAQR,GAQZhJ,EAAO0J,QACV1G,EAAO0G,MAAQ,6BAGZ1J,EAAOyJ,gBACVzG,EAAOyG,cAAgBT,IAGpBhJ,EAAON,UACVsD,EAAOtD,QAAUsJ,IAGZhG,CACR,CEhK2C6G,CAAiB7J,EAA7B,EACV8J,kBAAgB,EAChBtB,SAAUY,EAXZ,SAaG,SAACW,GACA,OACE,gBAAC,KAAD,WACE,sBAAK1I,UAAU,MAAf,SACE,uBAAKA,UAAU,YAAf,UACE,4CACA,eAAC,KAAD,CAAOkI,KAAK,OAAZ,SACG,gBAAGS,EAAH,EAAGA,MAAH,OACC,eAAC1H,GAAD,2BACM0H,GADN,IAEExM,KAAK,OACLgF,MACEuH,EAAUE,QAAQV,MAClBQ,EAAU/G,OAAOuG,KACbQ,EAAU/G,OAAOuG,KACjB,KAENlI,UAAU,eACVoG,YAAa,oBAXhB,SAiBP,sBAAKpG,UAAU,MAAf,SACE,uBAAKA,UAAU,YAAf,UACE,6CACA,eAAC,KAAD,CAAOkI,KAAK,QAAZ,SACG,gBAAGS,EAAH,EAAGA,MAAH,OACC,eAAC1H,GAAD,2BACM0H,GADN,IAEExM,KAAK,QACL6D,UAAU,eACVmB,MACEuH,EAAUE,QAAQT,OAClBO,EAAU/G,OAAOwG,MACbO,EAAU/G,OAAOwG,MACjB,KAEN/B,YAAa,kBAXhB,SAkBP,sBAAKpG,UAAU,MAAf,SACE,uBAAKA,UAAU,YAAf,UACE,oDACA,eAAC,KAAD,CAAOkI,KAAK,gBAAZ,SACG,gBAAGS,EAAH,EAAGA,MAAH,OACC,eAAC1H,GAAD,2BACM0H,GADN,IAEExM,KAAK,OACL6D,UAAU,eACVmB,MACEuH,EAAUE,QAAQR,eAClBM,EAAU/G,OAAOyG,cACbM,EAAU/G,OAAOyG,cACjB,KAENhC,YAAY,kBAXf,SAkBP,sBAAKpG,UAAU,MAAf,SACE,uBAAKA,UAAU,YAAf,UACE,2CAEA,eAAC,KAAD,CAAOkI,KAAK,QAAZ,SACG,gBAAGS,EAAH,EAAGA,MAAH,OACC,eAAC1H,GAAD,2BACM0H,GADN,IAEExM,KAAK,OACL6D,UAAU,eACVoG,YAAa,eACbjF,MACEuH,EAAUE,QAAQP,OAClBK,EAAU/G,OAAO0G,MACbK,EAAU/G,OAAO0G,MACjB,OAVT,SAiBP,sBAAKrI,UAAU,MAAf,SACE,uBAAKA,UAAU,YAAf,UACE,kDACA,eAAC,KAAD,CAAOkI,KAAK,UAAZ,SACG,gBAAGS,EAAH,EAAGA,MAAH,OACC,eAACzE,GAAD,2BACMyE,GADN,IAEExM,KAAK,OACLgF,MACEuH,EAAUE,QAAQvK,SAClBqK,EAAU/G,OAAOtD,QACbqK,EAAU/G,OAAOtD,QACjB,KAEN2B,UAAU,eACVoG,YAAa,iBAXhB,SAkBP,sBAAKpG,UAAU,mBAAf,SACE,yBACE7D,KAAK,SACL6D,UAAU,uCAFZ,oBAQF,eAAC,GAAD,MAGL,WAOX,sBAAKA,UAAU,WAAf,SACE,sBAAKK,IAAKwI,cAiClB,sBAAK7I,UAAU,cAAf,SACE,sBAAKA,UAAU,YAAf,SACE,uBAAKA,UAAU,MAAf,UACE,sBAAKA,UAAU,WAAf,SACE,yBACEK,IAAI,wRACJE,MAAM,OACNuI,OAAO,MACP/H,MAAO,CAAEgI,OAAQ,GACjBC,gBAAgB,GAChBxG,QAAQ,WAGZ,uBAAKxC,UAAU,WAAf,UACE,6CAEA,oBAAGA,UAAU,wBAAb,qBACA,qBAAGA,UAAU,OAAb,mDACqC,wBADrC,wDAIA,qBAAGA,UAAU,wBAAb,2CACiC,OAEjC,qBAAGA,UAAU,OAAb,UACE,oBAAGrE,KAAK,uBAAR,gCAAsD,IACtD,oBAAGA,KAAK,uBAAR,kCAEF,oBAAGqE,UAAU,wBAAb,2BACA,oBAAGA,UAAU,OAAb,SACE,oBAAGrE,KAAK,IAAR,4CAQf,IC7Pc,ICAA,IDAA,IAA0B,uC,oBE8enC2D,I,OAAoB,CACxB2J,U/BleA,SAACC,EAAUrK,EAASsK,EAASrD,GAA7B,OAA6C,SAAC5J,GAC5CA,EAAS,CAAEC,KAAM7C,IAEjB8C,KACG8B,KAAK,eAAgBgL,GACrB5M,MAAK,SAACC,GACL0C,GAAuB,2BAAK1C,EAAIE,MAAV,IAAgByC,QAAS3C,EAAIE,KAAKA,KAAKyC,WAExDiK,EAOHrD,IAN6B,KAAzBvJ,EAAIE,KAAKA,KAAKyC,QAChBL,EAAQE,KAAK,oBAEbF,EAAQE,KAAK,WAKjB7C,EAAS,CAAEC,KAAM5C,GAClB,IAEAmD,OAAM,SAACC,GACN,IAAIgF,EAASlE,KAAKC,MAAMf,EAAIC,SAASH,KAAK0E,OAAOQ,OACjDzF,EAAS,CACPC,KAAM9C,EACNmD,QAASG,EAAIC,SAAWD,EAAIC,SAASH,KAAOE,EAAIC,WAElDe,QAAQC,IAAIjB,GACZwB,KAAMgD,MAAN,UAAeQ,EAAO,GAAGyH,KAAO,CAC9B9K,SAAUH,KAAMI,SAASC,WAE5B,GACJ,CA/BD,E+BmeA6K,W/BraA,SAACH,EAAUrK,EAASsK,EAASrD,GAA7B,OAA6C,SAAC5J,GAC5CA,EAAS,CAAEC,KAAM7C,IAEjB8C,KACG8B,KAAK,eAAgBgL,GACrB5M,MAAK,SAACC,GACL0C,GAAuB,2BAAK1C,EAAIE,MAAV,IAAgByC,QAASgK,EAAShK,WACxDhD,EAAS,CACPC,KAAMlD,EACNuD,QAASD,EAAIE,KAAKA,OAEf0M,EAGHrD,IAFAjH,EAAQE,KAAK,mBAIf7C,EAAS,CAAEC,KAAM5C,GAClB,IAEAmD,OAAM,SAACC,GACN,IAAIgF,EAASlE,KAAKC,MAAMf,EAAIC,SAASH,KAAK0E,OAAOQ,OACjDzF,EAAS,CACPC,KAAM9C,EACNmD,QAASG,EAAIC,SAAWD,EAAIC,SAASH,KAAOE,EAAIC,WAElDe,QAAQC,IAAIjB,GACZwB,KAAMgD,MAAN,UAAeQ,EAAO,GAAGyH,KAAO,CAC9B9K,SAAUH,KAAMI,SAASC,WAE5B,GACJ,CA9BD,E+BsaAvC,gBACAY,gBACAyM,e/BzT4B,SAACJ,GAAD,OAAc,SAAChN,GAC3CA,EAAS,CAAEC,KAAM7C,IAEjB8C,KACG8B,KAAK,uBAAwBgL,GAC7B5M,MAAK,SAACC,GACLL,EAAS,CAAEC,KAAM5C,IACjB4E,KAAMC,QAAN,UAAiB7B,EAAIE,KAAK4B,SAAW,CACnCC,SAAUH,KAAMI,SAASC,WAE5B,IAEA9B,OAAM,SAACC,GACNT,EAAS,CACPC,KAAM9C,EACNmD,QAASG,EAAIC,SAAWD,EAAIC,SAASH,KAAOE,EAAIC,UAEnD,GACJ,CAlB6B,I+B4Tf4C,gBAbS,SAACC,GAAD,MAAY,CAClCC,KAAMD,EAAMC,KACZC,OAAQF,EAAME,OAFQ,GAagBL,GAAzBE,EApeD,SAAC,GAWR,IAAD,IAVJ9D,SAAY6N,EAUR,EAVQA,SAAUtM,EAUlB,EAVkBA,OACtBgM,EASI,EATJA,UACAI,EAQI,EARJA,WAGAC,GAKI,EAPJrN,aAOI,EANJY,aAMI,EALJyM,gBACAzK,EAII,EAJJA,QACAsK,EAGI,EAHJA,QACArD,EAEI,EAFJA,YAEI,IADJnG,OAEM6J,GADF,EADMC,UACN,EADiBC,UAEP,IAAIC,gBAAgB1M,IAC5BiC,EAAsB,gBAAZqK,EAA6B,EAAIC,EAAMnN,IAAI,YAAc,EAEzE,EAAkCuD,oBAAS,GAA3C,mBACA,GADA,UACoCA,oBAAS,IAA7C,mBAAOgK,EAAP,KAAmBC,EAAnB,KAEA/H,qBAAU,WAET,GAAE,IAiBH,OACE,uBAAK9B,UAAS,qBAAgBmJ,GAAW,SAAzC,WACIA,GACA,uBAAKnJ,UAAU,aAAf,UACE,sEACA,gDACA,sBAAKK,IAAKyJ,QAGd,uBAAK9J,UAAU,eAAf,WACImJ,GACA,uBAAKnJ,UAAU,eAAf,UACE,eAAC,IAAD,CAAMC,GAAG,IAAT,SACE,sBAAKI,IAAKC,GAAMC,MAAM,UAExB,iCACE,eAAC,IAAD,CACEN,GAAG,sBACHD,UAAU,oCAFZ,iCAKQ,IANV,WAQE,eAAC,IAAD,CAAMC,GAAG,IAAID,UAAU,oCAAvB,wBAMN,sBAAKA,UAAU,aAAf,SACE,sBAAKA,UAAU,gBAAf,SACe,oBAAZuJ,EACC,uCACE,kDACA,eAAC,KAAD,CACEvB,oBAAkB,EAClBC,cAAe,CACbE,MAAO,IAGTM,kBAAgB,EAChBtB,SAAUmC,EAPZ,SASG,SAACZ,GACA,OACE,gBAAC,KAAD,CAAM1I,UAAU,aAAhB,UACE,sBAAKA,UAAU,MAAf,SACE,sBAAKA,UAAU,YAAf,SACE,eAAC,KAAD,CAAOkI,KAAK,QAAZ,SACG,gBAAGS,EAAH,EAAGA,MAAH,OACC,eAAC1H,GAAD,2BACM0H,GADN,IAEExM,KAAK,QACLJ,MAAO2M,EAAU/J,OAAOwJ,MACxBjC,SAAU,SAACC,GACTuC,EAAUqB,cACR,QACA5D,EAAEhG,OAAOpE,MAEZ,EACDiE,UAAU,eACVoG,YAAa,kBAZhB,QAmBP,sBAAKpG,UAAU,eAAf,SACE,yBACE7D,KAAK,SACL6D,UAAU,uCAFZ,+BAOF,wBACA,6BACc,GAAXd,EACC,0DAC2B,IACzB,eAAC,IAAD,CAAMe,GAAI,kBAAoBf,EAA9B,wBAKF,eAAC,IAAD,CAAMe,GAAI,eAAV,6BAIJ,eAAC,GAAD,MAGL,OAGS,aAAZsJ,GAA2BK,EAC7B,uCACE,+CAA4B,GAAX1K,EAAe,WAAa,aAC7C,eAAC,KAAD,CACE8I,oBAAkB,EAClBC,cAAe,CACb+B,WAAY,GACZC,UAAW,GACX9B,MAAO,GACP+B,SAAU,GACVC,iBAAkB,GAClBC,aAAc,GACd/B,MAAO,GACPgC,aAAc,GACdC,UAAWpL,GAEboJ,SAAU,SAAC3J,GAAD,OL9CG,SAACA,GAC9B,IAAIgD,EAAS,CAAC,EAqCd,OApCKhD,EAAOqL,aACVrI,EAAOqI,WAAarC,IAEjBhJ,EAAOsL,YACVtI,EAAOsI,UAAYtC,IAGhBhJ,EAAO0J,QACV1G,EAAO0G,MAAQV,IAEZhJ,EAAOyL,eACVzI,EAAOyI,aAAezC,IAGnBhJ,EAAOyL,eACVzI,EAAOyI,aAAezC,IAEpBhJ,EAAOwJ,QAEN,8DAA8DI,KAC7D5J,EAAOwJ,SAGTxG,EAAOwG,MAAQ,gCAIdxJ,EAAOuL,WACVvI,EAAOuI,SAAWvC,IAEfhJ,EAAOwL,iBAEDxL,EAAOuL,WAAavL,EAAOwL,mBACpCxI,EAAOwI,iBAAmB,2BAF1BxI,EAAOwI,iBAAmBxC,GAI5BhK,QAAQC,IAAI+D,GACLA,CACR,CKOuC4I,CAAgB5L,EAA5B,EACV8J,kBAAgB,EAChBtB,SA9HK,SAACxI,GACpB,IAAI6L,EAAU,eAAQ7L,GACtB6L,EAAWtL,QAAUiK,EAAU,EAAIjK,EACX,IAApBsL,EAAWrC,cACNqC,EAAWrC,aAEbqC,EAAWH,aAElBhB,EAAWmB,EAAY3L,EAASsK,EAASrD,EAE1C,EAqGa,SAiBG,SAAC4C,GACA,OACE,gBAAC,KAAD,WACE,uBAAK1I,UAAU,MAAf,UACE,sBAAKA,UAAU,WAAf,SACE,eAAC,KAAD,CAAOkI,KAAK,aAAZ,SACG,gBAAGS,EAAH,EAAGA,MAAH,OACC,eAAC1H,GAAD,2BACM0H,GADN,IAEExM,KAAK,OACLgF,MACEuH,EAAUE,QAAQoB,YAClBtB,EAAU/G,OAAOqI,WACbtB,EAAU/G,OAAOqI,WACjB,KAENhK,UAAU,eACVoG,YAAa,iBAXhB,MAgBL,sBAAKpG,UAAU,WAAf,SACE,eAAC,KAAD,CAAOkI,KAAK,YAAZ,SACG,gBAAGS,EAAH,EAAGA,MAAH,OACC,eAAC1H,GAAD,2BACM0H,GADN,IAEExM,KAAK,OACLgF,MACEuH,EAAUE,QAAQqB,WAClBvB,EAAU/G,OAAOsI,UACbvB,EAAU/G,OAAOsI,UACjB,KAENjK,UAAU,eACVoG,YAAa,gBAXhB,SAiBP,uBAAKpG,UAAU,MAAf,UACE,sBAAKA,UAAU,WAAf,SACE,eAAC,KAAD,CAAOkI,KAAK,QAAZ,SACG,gBAAGS,EAAH,EAAGA,MAAH,OACC,iCACE,eAAC,KAAD,2BACMA,GADN,IAEE8B,QAAQ,KACRtO,KAAK,QACLJ,MAAO2M,EAAU/J,OAAO0L,aACxBnE,SAAU,SAACmC,EAAO5L,GAChBiM,EAAUqB,cACR,eACA1B,GAEFK,EAAUqB,cACR,eACAtN,EAAKiO,UAEPhC,EAAUqB,cACR,QACA1B,EAAMsC,MAAMlO,EAAKiO,SAASzI,QAE7B,EACDd,MACEuH,EAAUE,QAAQP,OAClBK,EAAU/G,OAAO0G,MACbK,EAAU/G,OAAO0G,MACjB,KAENrI,UAAU,eACVoG,YAAY,kBAEbsC,EAAU/G,OAAO0G,OAChB,oBACEtH,MAAO,CACLO,WAAY,EACZC,SAAU,GACVC,MAAO,OAJX,SAOGkH,EAAU/G,OAAO0G,UAtCzB,MA6CL,sBAAKrI,UAAU,WAAf,SACE,eAAC,KAAD,CAAOkI,KAAK,QAAZ,SACG,gBAAGS,EAAH,EAAGA,MAAH,OACC,eAAC1H,GAAD,2BACM0H,GADN,IAEExM,KAAK,QACL6D,UAAU,eACVmB,MACEuH,EAAUE,QAAQT,OAClBO,EAAU/G,OAAOwG,MACbO,EAAU/G,OAAOwG,MACjB,KAEN/B,YAAa,kBAXhB,SAiBP,sBAAKpG,UAAU,MAAf,SACE,sBAAKA,UAAU,YAAf,SACE,eAAC,KAAD,CAAOkI,KAAK,eAAZ,SACG,gBAAGS,EAAH,EAAGA,MAAH,OACC,eAAC1H,GAAD,2BACM0H,GADN,IAEExM,KAAK,OACLgF,MACEuH,EAAUE,QAAQwB,cAClB1B,EAAU/G,OAAOyI,aACb1B,EAAU/G,OAAOyI,aACjB,KAENpK,UAAU,eACVoG,YAAa,iBAXhB,QAkBP,uBAAKpG,UAAU,MAAf,UACE,sBAAKA,UAAU,WAAf,SACE,eAAC,KAAD,CAAOkI,KAAK,WAAZ,SACG,gBAAGS,EAAH,EAAGA,MAAH,OACC,eAAC1H,GAAD,2BACM0H,GADN,IAEExM,KAAK,WACL6D,UAAU,eACVmB,MACEuH,EAAUE,QAAQsB,UAClBxB,EAAU/G,OAAOuI,SACbxB,EAAU/G,OAAOuI,SACjB,KAEN9D,YAAa,eAXhB,MAiBL,sBAAKpG,UAAU,WAAf,SACE,eAAC,KAAD,CAAOkI,KAAK,mBAAZ,SACG,gBAAGS,EAAH,EAAGA,MAAH,OACC,eAAC1H,GAAD,2BACM0H,GADN,IAEExM,KAAK,WACL6D,UAAU,eACVmB,MACEuH,EAAUE,QAAQuB,kBAClBzB,EAAU/G,OAAOwI,iBACbzB,EAAU/G,OAAOwI,iBACjB,KAEN/D,YAAa,uBAXhB,SAkBP,qBAAGpG,UAAU,QAAb,UACE,wBAAO7D,KAAK,aADd,iBAEiB,IACf,eAAC,IAAD,CAAMgE,OAAO,SAASF,GAAG,SAAzB,8BAEQ,IALV,OAMM,oBAAGtE,KAAK,IAAR,gCAGN,sBAAKqE,UAAU,mBAAf,SACE,yBACE7D,KAAK,SACL6D,UAAU,uCAFZ,wBAOF,0DAC2B,IACvBmJ,EAKA,oBACExN,KAAK,oBACLuE,QAAS,WACP2J,GAAc,EACf,EAJH,qBAJA,eAAC,IAAD,CAAM5J,GAAI,kBAAoBf,EAA9B,wBAcJ,eAAC,GAAD,MAGL,OAIL,uCACGsK,EAAMnN,IAAI,WACT,uBAAM+H,MAAM,sBAAZ,oFAKF,wCACA,eAAC,KAAD,CACE4D,oBAAkB,EAClBC,cAAe,CACbI,MAAO,GACP6B,SAAU,IAEZ5B,SAAU,SAAC3J,GAAD,OLxVE,SAACA,GAC7B,IAAIgD,EAAS,CAAC,EASd,OARKhD,EAAO0J,QACV1G,EAAO0G,MAAQV,IAGZhJ,EAAOuL,WACVvI,EAAOuI,SAAWvC,IAGbhG,CACR,CK6UuCiJ,CAAejM,EAA3B,EACV8J,kBAAgB,EAChBtB,SArWK,SAACxI,GACpBsK,EAAUtK,EAAQE,EAASsK,EAASrD,EACrC,EA2Va,SAUG,SAAC4C,GACA,OACE,gBAAC,KAAD,CAAM1I,UAAU,aAAhB,UACE,sBAAKA,UAAU,MAAf,SACE,sBAAKA,UAAU,YAAf,SACE,eAAC,KAAD,CAAOkI,KAAK,QAAZ,SACG,gBAAGS,EAAH,EAAGA,MAAH,OACC,eAAC1H,GAAD,2BACM0H,GADN,IAEExM,KAAK,OACL6D,UAAU,eACVoG,YAAa,sBACbjF,MACEuH,EAAUE,QAAQP,OAClBK,EAAU/G,OAAO0G,MACbK,EAAU/G,OAAO0G,MACjB,OAVT,QAiBP,sBAAKrI,UAAU,MAAf,SACE,sBAAKA,UAAU,YAAf,SACE,eAAC,KAAD,CAAOkI,KAAK,WAAZ,SACG,gBAAGS,EAAH,EAAGA,MAAH,OACC,eAAC1H,GAAD,2BACM0H,GADN,IAEExM,KAAK,WACLgF,MACEuH,EAAUE,QAAQsB,UAClBxB,EAAU/G,OAAOuI,SACbxB,EAAU/G,OAAOuI,SACjB,KAENlK,UAAU,eACVoG,YAAa,aAXhB,QAiBP,oBAAGpG,UAAU,aAAae,MAAO,CAAE8J,OAAQ,GAA3C,SACE,eAAC,IAAD,CAAM5K,GAAI,4BAA8Bf,EAAxC,+BAIF,sBAAKc,UAAU,eAAf,SACE,yBACE7D,KAAK,SACL6D,UAAU,uCAFZ,qBAQU,GAAXd,GACC,wDACyB,IACrBiK,EAKA,oBACExN,KAAK,oBACLuE,QAAS,WACP2J,GAAc,EACf,EAJH,sBAJA,eAAC,IAAD,CAAM5J,GAAI,qBAAuBf,EAAjC,yBAeN,eAAC,GAAD,MAGL,gBASlB,ICrYc4L,GAhGG,WAChB,MAA+BlL,oBAAS,GAAxC,mBACA,GADA,UACmCA,oBAAS,IAA5C,6BACA,OACE,uBAAKI,UAAU,kBAAf,UAEI,sBAAIA,UAAU,aAAd,UACE,qBAAIA,UAAU,kBAAd,SACE,oBAAGrE,KAAK,IAAR,yBAEF,qBAAIqE,UAAU,yBAAd,6BAGF,uBAAKA,UAAU,MAAf,UACE,sBAAKA,UAAU,yBAAf,SACE,uBAAKA,UAAU,4CAAf,UACE,uBAAKA,UAAU,YAAf,UACE,sBAAKA,UAAU,iBAAf,SACE,oBAAGA,UAAU,2BAEf,sBAAKA,UAAU,OAAf,iCAEF,qBAAGA,UAAU,4CAA4CrE,KAAK,IAA9D,UACE,uBAAMqE,UAAU,aAAhB,0BACA,uBAAMA,UAAU,cAAhB,SACE,oBAAGA,UAAU,gCAKrB,sBAAKA,UAAU,yBAAf,SACE,uBAAKA,UAAU,4CAAf,UACE,uBAAKA,UAAU,YAAf,UACE,sBAAKA,UAAU,iBAAf,SACE,oBAAGA,UAAU,uBAEf,sBAAKA,UAAU,OAAf,8BAEF,qBAAGA,UAAU,4CAA4CrE,KAAK,IAA9D,UACE,uBAAMqE,UAAU,aAAhB,0BACA,uBAAMA,UAAU,cAAhB,SACE,oBAAGA,UAAU,gCAKrB,sBAAKA,UAAU,yBAAf,SACE,uBAAKA,UAAU,4CAAf,UACE,uBAAKA,UAAU,YAAf,UACE,sBAAKA,UAAU,iBAAf,SACE,oBAAGA,UAAU,gCAEf,sBAAKA,UAAU,OAAf,gCAEF,qBAAGA,UAAU,4CAA4CrE,KAAK,IAA9D,UACE,uBAAMqE,UAAU,aAAhB,0BACA,uBAAMA,UAAU,cAAhB,SACE,oBAAGA,UAAU,gCAKrB,sBAAKA,UAAU,yBAAf,SACE,uBAAKA,UAAU,2CAAf,UACE,uBAAKA,UAAU,YAAf,UACE,sBAAKA,UAAU,iBAAf,SACE,oBAAGA,UAAU,0BAEf,sBAAKA,UAAU,OAAf,gCAEF,qBAAGA,UAAU,4CAA4CrE,KAAK,IAA9D,UACE,uBAAMqE,UAAU,aAAhB,0BACA,uBAAMA,UAAU,cAAhB,SACE,oBAAGA,UAAU,mCAOvB,uBAAKA,UAAU,YAAf,UACE,uBAAKA,UAAU,cAAf,UACE,oBAAGA,UAAU,qBADf,yBAEA,sBAAKA,UAAU,YAAf,SACE,yBAAQlD,GAAG,cAAcyD,MAAM,OAAOuI,OAAQ,OAEhD,sBAAK9I,UAAU,+BAAf,gDAQT,ECmHc+K,GA/ME,WACf,OACE,iCACE,sBACE/K,UAAU,kEACVe,MAAO,CACLkG,gBACE,4DACF+D,mBAAoB,gBAEtB,WAAS,OACT,gCAA8B,MARhC,SAUE,sBAAKhL,UAAU,YAAf,SACE,sBAAKA,UAAU,4DAAf,SACE,uBACEA,UAAU,gCACV,WAAS,UACT,iBAAgB,IAHlB,UAKE,qBAAIA,UAAU,+DAAd,sBAGA,qBAAGA,UAAU,oBAAb,UACE,oBAAGrE,KAAK,aAAR,kBADF,IACgC,uBAAMqE,UAAU,OAAhB,eAAmC,IACjE,yDAMV,sBAAKA,UAAU,eAAf,SACE,sBAAKA,UAAU,YAAf,SACE,uBAAKA,UAAU,WAAf,UACE,sBACEA,UAAU,wDACV,WAAS,OAFX,SAIE,sBACEK,IAAK6G,EACLO,IAAI,QACJzH,UAAU,oBACV,0BAAyB,WACzB0H,OAAO,+DAGX,uBACE1H,UAAU,2CACV,WAAS,OAFX,UAIE,sBAAKA,UAAU,qCAAf,SACE,qBAAIA,UAAU,eAAd,2BAEF,iQAMA,oBAAGA,UAAU,OAAb,gLAKA,uBAAKA,UAAU,MAAf,UACE,sBAAKA,UAAU,kCAAf,SACE,uBAAKA,UAAU,SAAf,UACE,sBAAKA,UAAU,wBAAf,SACE,uBAAMA,UAAU,0CAElB,iCACE,kDACA,4GAIA,oBAAGA,UAAU,OAAb,SACE,oBAAGrE,KAAK,IAAR,kCAKR,sBAAKqE,UAAU,kCAAf,SACE,uBAAKA,UAAU,SAAf,UACE,sBAAKA,UAAU,wBAAf,SACE,uBAAMA,UAAU,mCAElB,iCACE,8CACA,4GAIA,oBAAGA,UAAU,OAAb,SACE,oBAAGrE,KAAK,IAAR,+CAUlB,sBACEqE,UAAU,gBADZ,SAIE,uBAAKA,UAAU,YAAf,UACE,sBAAKA,UAAU,kCAAf,SACE,sBAAKA,UAAU,sCAAf,SACE,qBACEA,UAAU,sDACV,WAAS,OAFX,8BAQJ,uBAAKA,UAAU,MAAf,UACE,sBACEA,UAAU,sDACV,WAAS,OACT,iBAAgB,IAHlB,SAKE,uBAAKA,UAAU,mBAAf,UACE,uBAAMA,UAAU,SAAhB,eACA,uBAAKA,UAAU,mBAAf,UACE,sDACA,oBAAGA,UAAU,OAAb,mKAKA,sBAAIA,UAAU,yBAAd,UACE,+DACA,wEAGA,8EAOR,sBACEA,UAAU,sDACV,WAAS,OACT,iBAAgB,IAHlB,SAKE,uBAAKA,UAAU,mBAAf,UACE,uBAAMA,UAAU,SAAhB,eACA,uBAAKA,UAAU,mBAAf,UACE,sDACA,oBAAGA,UAAU,OAAb,mKAKA,sBAAIA,UAAU,yBAAd,UACE,+DACA,wEAGA,8EAOR,sBACEA,UAAU,sDACV,WAAS,OACT,iBAAgB,IAHlB,SAKE,uBAAKA,UAAU,mBAAf,UACE,uBAAMA,UAAU,SAAhB,eACA,uBAAKA,UAAU,mBAAf,UACE,sDACA,oBAAGA,UAAU,OAAb,mKAKA,sBAAIA,UAAU,yBAAd,UACE,+DACA,wEAGA,wFAcnB,ECzLciL,GAnBD,WACZ,OACE,uBAAKjL,UAAU,yBAAf,UACE,8BAAI,iEACV,qMACA,sKACA,2JAA4H,wBAA5H,+JACA,0DACA,qFAAsD,wBAAtD,wEAAgI,wBAAhI,2FAA6N,wBAA7N,qCACA,2DACA,2GACA,qHACA,6FACA,sJACA,wMAGC,ECsUKV,GAAoB,CACxBrD,gBACAY,gBACAqO,qBnCzLkC,SAAChC,GAAD,OAAc,SAAChN,GACjDA,EAAS,CAAEC,KAAM7C,IAEjB8C,KACG8B,KAAK,uBAAwBgL,GAC7B5M,MAAK,SAACC,GACLL,EAAS,CAAEC,KAAM5C,IACjB4E,KAAMC,QAAN,UAAiB7B,EAAIE,KAAK4B,SAAW,CACnCC,SAAUH,KAAMI,SAASC,WAE5B,IAEA9B,OAAM,SAACC,GACNT,EAAS,CACPC,KAAM9C,EACNmD,QAASG,EAAIC,SAAWD,EAAIC,SAASH,KAAOE,EAAIC,UAEnD,GACJ,CAlBmC,EmC0LlCuO,cnClT2B,SAACjC,EAAUrK,GAAX,OAAuB,SAAC3C,GACnDA,EAAS,CAAEC,KAAM7C,IAEjB8C,KACG8B,KAAK,sBAAuBgL,GAC5B5M,MAAK,SAACC,GACLL,EAAS,CACPC,KAAMlD,EACNuD,QAASD,EAAIE,KAAKA,OAEpB0B,KAAMC,QAAN,UAAiB7B,EAAIE,KAAK4B,SAAW,CACnCC,SAAUH,KAAMI,SAASC,YAE3BtC,EAAS,CAAEC,KAAM5C,GAClB,IAEAmD,OAAM,SAACC,GACN,IAAIgF,EAASlE,KAAKC,MAAMf,EAAIC,SAASH,KAAK0E,OAAOQ,OACjDzF,EAAS,CACPC,KAAM9C,EACNmD,QAASG,EAAIC,SAAWD,EAAIC,SAASH,KAAOE,EAAIC,WAElDe,QAAQC,IAAIjB,GACZwB,KAAMgD,MAAN,UAAeQ,EAAO,GAAGyH,KAAO,CAC9B9K,SAAUH,KAAMI,SAASC,WAE5B,GACJ,CA3B4B,GmCqTdgB,gBAZS,SAACC,GAAD,MAAY,CAClCC,KAAMD,EAAMC,KACZC,OAAQF,EAAME,OAFQ,GAYgBL,GAAzBE,EAlVC,SAAC,GAWV,IAAD,IAVJ9D,SAGAwP,GAOI,EAVQ3B,SAUR,EAVkBtM,OAUlB,EATJgM,UASI,EARJI,WAQI,EAPJ6B,sBACAC,EAMI,EANJA,cACAlP,EAKI,EALJA,aACAY,EAII,EAJJA,aAII,KAHJgC,QAGI,EAFJc,QACQD,GACJ,EAFM+J,UAEN,EAFiBC,UAEjB,EADJhK,KAAQA,MAER,EAA4CE,oBAAS,GAArD,mBAAOwL,EAAP,KAAuBC,EAAvB,KAEA1N,QAAQC,IAAI8B,GACZoC,qBAAU,WACR7F,GACD,GAAE,IAEH6F,qBAAU,WACJuB,QAAQ3D,IACNA,EAAK4L,YACPzO,EAAa6C,EAAK4L,WAGvB,GAAE,CAAC5L,IAEJ,IAAM6L,EAAc,iDAAG,WAAO5M,GAAP,2EACrBuM,EAAqBvM,GADA,2CAAH,sDAGpB,EAAoCiB,oBAAS,GAA7C,6BACA,OACE,sBAAKI,UAAU,8BAAf,SAEE,uBAAKA,UAAU,yBAAf,UACGoL,EACC,eAAC,KAAD,CACEpD,oBAAkB,EAClBC,cAAe,CACbuD,aAAc,GACdtB,SAAU,GACVC,iBAAkB,IAEpB7B,SAAU,SAAC3J,GAAD,OTsGiB,SAACA,GACtC,IAAIgD,EAAS,CAAC,EAad,OAZKhD,EAAO6M,eACV7J,EAAO6J,aAAe7D,IAEnBhJ,EAAOuL,WACVvI,EAAOuI,SAAWvC,IAEfhJ,EAAOwL,iBAEDxL,EAAOuL,WAAavL,EAAOwL,mBACpCxI,EAAOwI,iBAAmB,2BAF1BxI,EAAOwI,iBAAmBxC,GAI5BhK,QAAQC,IAAI+D,GACLA,CACR,CSrHiC8J,CAAwB9M,EAApC,EACV8J,kBAAgB,EAChBtB,SAAUoE,EATZ,SAWG,SAAC7C,GACA,OACE,gBAAC,KAAD,WACE,sBAAK1I,UAAU,MAAf,SACE,uBAAKA,UAAU,YAAf,UACE,oDACA,eAAC,KAAD,CAAOkI,KAAK,eAAZ,SACG,gBAAGS,EAAH,EAAGA,MAAH,OACC,eAAC1H,GAAD,2BACM0H,GADN,IAEExM,KAAK,WACLgF,MACEuH,EAAUE,QAAQ4C,cAClB9C,EAAU/G,OAAO6J,aACb9C,EAAU/G,OAAO6J,aACjB,KAENxL,UAAU,eACVoG,YAAa,iBAXhB,SAiBP,sBAAKpG,UAAU,MAAf,SACE,uBAAKA,UAAU,YAAf,UACE,oDACA,eAAC,KAAD,CAAOkI,KAAK,WAAZ,SACG,gBAAGS,EAAH,EAAGA,MAAH,OACC,eAAC1H,GAAD,2BACM0H,GADN,IAEExM,KAAK,WACLgF,MACEuH,EAAUE,QAAQsB,UAClBxB,EAAU/G,OAAOuI,SACbxB,EAAU/G,OAAOuI,SACjB,KAENlK,UAAU,eACVoG,YAAa,qBAXhB,SAkBP,sBAAKpG,UAAU,MAAf,SACE,uBAAKA,UAAU,YAAf,UACE,wDACA,eAAC,KAAD,CAAOkI,KAAK,mBAAZ,SACG,gBAAGS,EAAH,EAAGA,MAAH,OACC,eAAC1H,GAAD,2BACM0H,GADN,IAEExM,KAAK,WACLgF,MACEuH,EAAUE,QAAQuB,kBAClBzB,EAAU/G,OAAOwI,iBACbzB,EAAU/G,OAAOwI,iBACjB,KAENnK,UAAU,eACVoG,YAAa,qBAXhB,SAkBP,uBAAKpG,UAAU,mBAAf,UACE,yBACE7D,KAAK,SACL+D,QAAS,kBAAMmL,GAAkB,EAAxB,EACTrL,UAAU,sCAHZ,oBAOA,yBACE7D,KAAK,SACL6D,UAAU,6BAFZ,uBAQF,eAAC,GAAD,MAGL,IAGH,eAAC,KAAD,CACEgI,oBAAkB,EAClBC,cAAe,CACb+B,WAAY3N,eAAIqD,EAAM,aAAc,IACpCuK,UAAW5N,eAAIqD,EAAM,YAAa,IAClC0K,aAAc/N,eAAIqD,EAAM,eAAgB,IACxCyI,MAAO9L,eAAIqD,EAAM,QAAS,IAC1B2I,MAAOhM,eAAIqD,EAAM,QAAS,KAE5B4I,SAAU,SAAC3J,GAAD,OT6CU,SAACA,GAC/B,IAAIgD,EAAS,CAAC,EAYd,OAXKhD,EAAOqL,aACVrI,EAAOqI,WAAarC,IAEjBhJ,EAAOsL,YACVtI,EAAOsI,UAAYtC,IAEhBhJ,EAAOyL,eACVzI,EAAOyI,aAAezC,IAGxBhK,QAAQC,IAAI+D,GACLA,CACR,CS3DiC+J,CAAiB/M,EAA7B,EACV8J,kBAAgB,EAChBtB,SAAUgE,EAXZ,SAaG,SAACzC,GACA,OACE,gBAAC,KAAD,WACE,uBAAK1I,UAAU,MAAf,UACE,sBAAKA,UAAU,WAAf,SACE,eAAC,KAAD,CAAOkI,KAAK,aAAZ,SACG,gBAAGS,EAAH,EAAGA,MAAH,OACC,eAAC1H,GAAD,2BACM0H,GADN,IAEExM,KAAK,OACLgF,MACEuH,EAAUE,QAAQoB,YAClBtB,EAAU/G,OAAOqI,WACbtB,EAAU/G,OAAOqI,WACjB,KAENhK,UAAU,eACVoG,YAAa,iBAXhB,MAgBL,sBAAKpG,UAAU,WAAf,SACE,eAAC,KAAD,CAAOkI,KAAK,YAAZ,SACG,gBAAGS,EAAH,EAAGA,MAAH,OACC,eAAC1H,GAAD,2BACM0H,GADN,IAEExM,KAAK,OACLgF,MACEuH,EAAUE,QAAQqB,WAClBvB,EAAU/G,OAAOsI,UACbvB,EAAU/G,OAAOsI,UACjB,KAENjK,UAAU,eACVoG,YAAa,gBAXhB,SAiBP,uBAAKpG,UAAU,MAAf,UACE,sBAAKA,UAAU,WAAf,SACE,eAAC,KAAD,CAAOkI,KAAK,QAAZ,SACG,gBAAGS,EAAH,EAAGA,MAAH,OACC,iCACE,eAAC,KAAD,2BACMA,GADN,IAEE8B,QAAQ,KACRtO,KAAK,QACLwP,UAAQ,EACR5P,MAAO2M,EAAU/J,OAAO0J,MACxBlH,MACEuH,EAAUE,QAAQP,OAClBK,EAAU/G,OAAO0G,MACbK,EAAU/G,OAAO0G,MACjB,KAGNjC,YAAY,kBAEbsC,EAAU/G,OAAO0G,OAChB,oBACEtH,MAAO,CACLO,WAAY,EACZC,SAAU,GACVC,MAAO,OAJX,SAOGkH,EAAU/G,OAAO0G,UAzBzB,MAgCL,sBAAKrI,UAAU,WAAf,SACE,eAAC,KAAD,CAAOkI,KAAK,QAAZ,SACG,gBAAGS,EAAH,EAAGA,MAAH,OACC,eAAC1H,GAAD,2BACM0H,GADN,IAEExM,KAAK,QACLwP,UAAQ,EACR3L,UAAU,eACVmB,MACEuH,EAAUE,QAAQT,OAASO,EAAU/G,OAAOwG,MACxCO,EAAU/G,OAAOwG,MACjB,KAEN/B,YAAa,kBAXhB,SAiBP,sBAAKpG,UAAU,MAAf,SACE,sBAAKA,UAAU,YAAf,SACE,eAAC,KAAD,CAAOkI,KAAK,eAAZ,SACG,gBAAGS,EAAH,EAAGA,MAAH,OACC,eAAC1H,GAAD,2BACM0H,GADN,IAEExM,KAAK,OACLgF,MACEuH,EAAUE,QAAQwB,cAClB1B,EAAU/G,OAAOyI,aACb1B,EAAU/G,OAAOyI,aACjB,KAENpK,UAAU,eACVoG,YAAa,iBAXhB,QAkBP,uBAAKpG,UAAU,MAAf,UACE,sBAAKA,UAAU,WAAf,SACE,eAAC,KAAD,CAAOkI,KAAK,WAAZ,SACG,gBAAGS,EAAH,EAAGA,MAAH,OACC,eAAC1H,GAAD,2BACM0H,GADN,IAEExM,KAAK,WACL6D,UAAU,eACVmB,MACEuH,EAAUE,QAAQsB,UAClBxB,EAAU/G,OAAOuI,SACbxB,EAAU/G,OAAOuI,SACjB,KAEN9D,YAAa,eAXhB,MAiBL,sBAAKpG,UAAU,WAAf,SACE,eAAC,KAAD,CAAOkI,KAAK,mBAAZ,SACG,gBAAGS,EAAH,EAAGA,MAAH,OACC,eAAC1H,GAAD,2BACM0H,GADN,IAEExM,KAAK,WACL6D,UAAU,eACVmB,MACEuH,EAAUE,QAAQuB,kBAClBzB,EAAU/G,OAAOwI,iBACbzB,EAAU/G,OAAOwI,iBACjB,KAEN/D,YAAa,uBAXhB,SAkBP,sBAAKpG,UAAU,mBAAf,SACE,yBACE7D,KAAK,SACL6D,UAAU,uCAFZ,4BAQF,eAAC,GAAD,MAGL,IAEF,QAIV,IC5Tc4L,I,cApBE,WACf,OACE,+BACE,sBAAK5L,UAAU,+CAAf,SACE,sBAAKA,UAAU,YAAf,SACE,sBAAKA,UAAU,6BAAf,SACE,uBAAKA,UAAU,wBAAf,UACE,uBAAMA,UAAU,oBAAhB,iBACA,sBAAKA,UAAU,YAAf,yDAEA,eAAC,IAAD,CAAMC,GAAG,IAAT,oCAQb,GCgKKX,GAAoB,CACxBuM,WvCvFwB,SAAClN,GAAD,OAAY,SAACzC,GACrCA,EAAS,CAAEC,KAAM7C,IAEjB8C,KACG8B,KAAK,gBAAiBS,GACtBrC,MAAK,SAACC,GACL4B,KAAMC,QAAN,UAAiB7B,EAAIE,KAAK4B,SAAW,CACnCC,SAAUH,KAAMI,SAASC,YAE3BtC,EAAS,CACPC,KAAMtC,EACN2C,QAASD,EAAIE,KAAKA,OAEpBP,EAAS,CAAEC,KAAM5C,GAClB,IAEAmD,OAAM,SAACC,GACNT,EAAS,CACPC,KAAM9C,EACNmD,QAASG,EAAIC,SAAWD,EAAIC,SAASH,KAAOE,EAAIC,UAEnD,GACJ,CAtByB,EuCwFxBX,gBACA6P,YvCjEyB,SAACnN,GAAD,OAAY,SAACzC,GACtCA,EAAS,CAAEC,KAAM7C,IAEjB8C,KACG8B,KAAK,kBAAmBS,GACxBrC,MAAK,SAACC,GACL4B,KAAMC,QAAN,UAAiB7B,EAAIE,KAAK4B,SAAW,CACnCC,SAAUH,KAAMI,SAASC,YAE3BtC,EAAS,CACPC,KAAM/B,EACNoC,QAASD,EAAIE,KAAKA,OAEpBP,EAAS,CAAEC,KAAM5C,GAClB,IAEAmD,OAAM,SAACC,GACNT,EAAS,CACPC,KAAM9C,EACNmD,QAASG,EAAIC,SAAWD,EAAIC,SAASH,KAAOE,EAAIC,UAEnD,GACJ,CAtB0B,GuCqEZ4C,gBAZS,SAACC,GAAD,MAAY,CAClCC,KAAMD,EAAMC,KACZC,OAAOF,EAAME,OAFS,GAYgBL,GAAzBE,EAvLW,SAAC,GAAiE,IAAhEvD,EAA+D,EAA/DA,aAAa4P,EAAkD,EAAlDA,WAAWC,EAAuC,EAAvCA,YAAuC,IAA3BnM,OAAQ8J,iBAAmB,MAAT,GAAS,EAGzF3H,qBAAU,WACR7F,GACD,GAAC,IACF,MAAiC2D,oBAAS,GAA1C,mBAAOmM,EAAP,KAAiBC,EAAjB,KACA,EAAiCpM,mBAAS,MAA1C,mBAAOqM,EAAP,KAAiBC,EAAjB,KAgBA,OACE,uBAAKlM,UAAU,kBAAf,UAEI,sBAAIA,UAAU,aAAd,UACE,qBAAIA,UAAU,kBAAd,SACE,oBAAGrE,KAAK,IAAR,yBAEF,qBAAIqE,UAAU,yBAAd,mCAEF,sBAAKA,UAAU,iBAAf,SACA,yBAAQE,QAAS,WACfgM,EAAa,MACbF,GAAa,EAAM,EAAGhM,UAAU,6BAFlC,2BAOA,sBAAKA,UAAU,YAAf,SAEE,yBAAOoE,MAAM,sBAAb,UACR,iCACE,gCAEE,qBAAI+H,MAAM,MAAV,kBACA,qBAAIA,MAAM,MAAV,0BACA,qBAAIA,MAAM,MAAV,0BAIJ,iCACG1C,EAAUlG,KAAI,SAACC,GACZ,OACE,gCACJ,8BAAKA,EAAK0E,OACV,8BAAK1E,EAAK4I,eACV,8BAAI,yBACJlM,QAAS,WACP8L,GAAa,GACbE,EAAa1I,EACd,EACDxD,UAAU,6BALN,SAKmC,oBAAGA,UAAU,qBAMrD,WAoBK,eAACS,GAAD,CAAOG,KAAMmL,EAChBlL,QAAS,WACRqL,EAAa,MACZF,GAAa,EAAO,EAAEtL,QAAS,sBAAKV,UAAU,aAAf,SAExC,eAAC,KAAD,CACgBgI,oBAAkB,EAClBC,cAAe,CACbC,KAAK7L,eAAI4P,EAAU,OAAO,IAC1BG,aAAa/P,eAAI4P,EAAU,eAAe,KAE5C3D,SAAU,SAAC3J,GAAD,OXqHM,SAACA,GAC/B,IAAIgD,EAAS,CAAC,EAQd,OAPKhD,EAAOuJ,OACVvG,EAAOuG,KAAOP,IAEXhJ,EAAOyN,eACVzK,EAAOyK,aAAezE,IAGjBhG,CACR,CW/HqC0K,CAAiB1N,EAA7B,EACV8J,kBAAgB,EAChBtB,SA9FO,SAACxI,GACpBqN,GAAa,GAEE,OAAZC,EACDH,EAAY,2BAAInN,GAAL,IAAY7B,GAAGT,eAAI4P,EAAU,KAAK,OAG7CJ,EAAWlN,GAEbuN,EAAa,KAEd,EA2EH,SAUiB,SAACxD,GACA,OACE,gBAAC,KAAD,WACE,gCAAiB,OAAZuD,EAAiB,SAAS,MAA/B,cAEF,eAAC,KAAD,CAAO/D,KAAK,OAAZ,SACK,gBAAGS,EAAH,EAAGA,MAAH,OACC,eAAC1H,GAAD,2BACM0H,GADN,IAEExM,KAAK,OACL6D,UAAU,eACVoG,YAAa,eACbjF,MACEuH,EAAUE,QAAQV,MAClBQ,EAAU/G,OAAOuG,KACbQ,EAAU/G,OAAOuG,KACjB,OAVT,IAgBH,eAAC,KAAD,CAAOA,KAAK,eAAZ,SACG,gBAAGS,EAAH,EAAGA,MAAH,OACC,eAAC1H,GAAD,2BACM0H,GADN,IAEExM,KAAK,OACN6D,UAAU,eACToG,YAAa,eACbjF,MACEuH,EAAUE,QAAQwD,cAClB1D,EAAU/G,OAAOyK,aACb1D,EAAU/G,OAAOyK,aACjB,OAVT,IAmBH,uBAAKpM,UAAU,YAAf,UACA,yBAAQ7D,KAAK,SAAS+D,QAAS,kBAAK8L,GAAa,EAAlB,EAA2BhM,UAAU,iCAApE,oBAGE,yBAAQ7D,KAAK,SAAS6D,UAAU,8BAAhC,SACW,OAAZiM,EAAiB,SAAS,WAI3B,eAAC,GAAD,MAGL,UAShB,ICDK3M,GAAoB,CACxBvC,eACAuP,WxCiEwB,SAAC3N,GAAD,OAAY,SAACzC,GACrCA,EAAS,CAAEC,KAAM7C,IAEjB8C,KACG8B,KAAK,yBAA0BS,GAC/BrC,MAAK,SAACC,GACL4B,KAAMC,QAAN,UAAiB7B,EAAIE,KAAK4B,SAAW,CACnCC,SAAUH,KAAMI,SAASC,YAE3Bb,QAAQC,IAAIrB,EAAIE,KAAKA,MACrBP,EAAS,CACPC,KAAM3B,EACNgC,QAASD,EAAIE,KAAKA,OAEpBP,EAAS,CAAEC,KAAM5C,GAClB,IAEAmD,OAAM,SAACC,GACNT,EAAS,CACPC,KAAM9C,EACNmD,QAASG,EAAIC,SAAWD,EAAIC,SAASH,KAAOE,EAAIC,UAEnD,GACJ,CAvByB,EwChExB2P,axCyF0B,SAAC5N,GAAD,OAAY,SAACzC,GACvCA,EAAS,CAAEC,KAAM7C,IAEjB8C,KACG8B,KAAK,2BAA4BS,GACjCrC,MAAK,SAACC,GACL4B,KAAMC,QAAN,UAAiB7B,EAAIE,KAAK4B,SAAW,CACnCC,SAAUH,KAAMI,SAASC,YAE3BtC,EAAS,CACPC,KAAM1B,EACN+B,QAASmC,IAEXzC,EAAS,CAAEC,KAAM5C,GAClB,IAEAmD,OAAM,SAACC,GACNT,EAAS,CACPC,KAAM9C,EACNmD,QAASG,EAAIC,SAAWD,EAAIC,SAASH,KAAOE,EAAIC,UAEnD,GACJ,CAtB2B,GwCrFb4C,gBAZS,SAACC,GAAD,MAAY,CAClCC,KAAMD,EAAMC,KACZC,OAAOF,EAAME,OAFS,GAYgBL,GAAzBE,EA7KY,SAAC,GAA6D,IAA5DzC,EAA2D,EAA3DA,YAAYwP,EAA+C,EAA/CA,aAAaD,EAAkC,EAAlCA,WAAmBE,EAAe,EAAvB7M,OAAQ6M,SACvE,EAAmC5M,mBAAS,GAA5C,mBAAO0F,EAAP,KAAkBmH,EAAlB,KACA,EAAiC7M,mBAAS,IAA1C,mBAAOmM,EAAP,KAAiBC,EAAjB,KACA,EAAqCpM,mBAAS,IAA9C,mBAAOgG,EAAP,KAAmBC,EAAnB,KACA,EAAwCjG,mBAAS,IAAjD,mBAAO8M,EAAP,KAAqBC,EAArB,KAEA7K,qBAAU,WACR/E,EAAYuI,EAAWM,EACxB,GAAC,CAACN,IAeH,OACE,uBAAKtF,UAAU,kBAAf,UAEI,sBAAIA,UAAU,aAAd,UACE,qBAAIA,UAAU,kBAAd,SACE,oBAAGrE,KAAK,IAAR,yBAEF,qBAAIqE,UAAU,yBAAd,yBAEF,uBAAKA,UAAU,2BAAf,UACA,eAAC,GAAD,CAAQ6F,eAAgBA,EAClBD,YAAaA,EAAaE,YAAa,kBAAM/I,EAAY,EAAG6I,EAArB,EAAmCG,YAAa,WAAMhJ,EAAYuI,EAAW,IACpHO,EAAe,GAAI,IAEzB,yBAAS3F,QAAS,kBAAK8L,EAAa,OAAlB,EAA2BhM,UAAU,6BAAvD,6BAIA,uBAAKA,UAAU,YAAf,UAEE,yBAAOoE,MAAM,sBAAb,UACR,iCACE,gCAEE,qBAAI+H,MAAM,MAAV,kBACA,qBAAIA,MAAM,MAAV,oBAEA,qBAAIpL,MAAO,CAACR,MAAM,KAAK4L,MAAM,MAA7B,0BAKJ,iCACG9P,eAAImQ,EAAS,eAAe,IAAIjJ,KAAI,SAACC,GAClC,OACE,gCACJ,8BAAKA,EAAKgJ,WACV,gCACc,wBACErQ,KAAK,WACLyQ,QAASpJ,EAAKpG,OACd8I,SAAU,WAERyG,EAAgB,2BACXnJ,GADU,IAEb1G,GAAI0G,EAAK1G,GACTM,OAAuB,GAAfoG,EAAKpG,OAAc,EAAI,IAElC,EACDN,GAAI,KAAO0G,EAAK1G,KAElB,wBAAO+P,QAAS,KAAOrJ,EAAK1G,GAA5B,sBAEd,8BAAI,yBACJoD,QAAS,kBAAK8L,EAAaxI,EAAlB,EACTxD,UAAU,6BAFN,SAEmC,oBAAGA,UAAU,uBAGrD,SAIL,eAAC,GAAD,CAAYqF,UAAWhJ,eAAImQ,EAAS,YAAY,GAAIlH,WAAYA,EAAYC,iBAAkB,SAACuH,GAC5FL,EAAcK,EACf,OAKM,eAACrM,GAAD,CACAE,OAAqB,QAAboL,EAAuB,eAAe,gBAC9CnL,KAAMmL,EAAWlL,QAAS,kBAAKmL,GAAa,EAAlB,EAA0BtL,QAAS,sBAAKV,UAAU,aAAf,SAE3D,eAAC,KAAD,CAEMgI,oBAAkB,EAClBC,cAAe,CACbuE,SAASnQ,eAAI0P,EAAU,WAAW,KAEpCzD,SAAU,SAAC3J,GAAD,OZ7CO,SAACA,GAChC,IAAIgD,EAAS,CAAC,EAKd,OAJKhD,EAAO6N,WACV7K,EAAO6K,SAAW7E,IAGbhG,CACR,CYsCqCoL,CAAkBpO,EAA9B,EACV8J,kBAAgB,EAChBtB,SA9FO,SAACxI,GACpB8N,EAAc,GACE,QAAbV,EACDO,EAAW3N,GAGX4N,EAAa,2BAAI5N,GAAL,IAAY7B,GAAGiP,EAAUjP,MAGvCkP,GAAa,EACd,EA4EO,SAUO,SAACtD,GACA,OACE,gBAAC,KAAD,CAAM1I,UAAU,aAAhB,UACE,sBAAKA,UAAU,MAAf,SACE,sBAAMA,UAAU,YAAhB,SAGJ,eAAC,KAAD,CAAOkI,KAAK,WAAZ,SACK,gBAAGS,EAAH,EAAGA,MAAH,OACC,eAAC1H,GAAD,2BACM0H,GADN,IAEExM,KAAK,OACL6D,UAAU,eACVoG,YAAa,gBACbjF,MACEuH,EAAUE,QAAQ4D,UAClB9D,EAAU/G,OAAO6K,SACb9D,EAAU/G,OAAO6K,SACjB,OAVT,QAqBD,yBAAQrQ,KAAK,SAAS6D,UAAU,uCAAhC,oBAMF,eAAC,GAAD,MAGL,QAGT,eAACsG,GAAD,CAAc1F,KAAqB,KAAf8L,EAAoBlG,YAAa,WAAOmG,EAAgB,GAAI,EAAEpG,YAAa,WAC/FgG,EAAaG,GACbC,EAAgB,GACf,EAAEjM,QAAS,sDAOnB,ICMKpB,GAAoB,CACxBpC,WACA8P,QzCoJqB,SAACrO,GAAD,OAAY,SAACzC,GAClCA,EAAS,CAAEC,KAAM7C,IAEjB8C,KACG8B,KAAK,qBAAsBS,GAC3BrC,MAAK,SAACC,GACL4B,KAAMC,QAAN,UAAiB7B,EAAIE,KAAK4B,SAAW,CACnCC,SAAUH,KAAMI,SAASC,YAE3Bb,QAAQC,IAAIrB,EAAIE,KAAKA,MACrBP,EAAS,CACPC,KAAMxB,EACN6B,QAASD,EAAIE,KAAKA,OAGpBP,EAAS,CAAEC,KAAM5C,GAClB,IAEAmD,OAAM,SAACC,GACNT,EAAS,CACPC,KAAM9C,EACNmD,QAASG,EAAIC,SAAWD,EAAIC,SAASH,KAAOE,EAAIC,UAEnD,GACJ,CAxBsB,EyCnJrBqQ,SzC6KsB,SAACtO,GAAD,OAAY,SAACzC,GACnCA,EAAS,CAAEC,KAAM7C,IAEjB8C,KACG8B,KAAK,uBAAwBS,GAC7BrC,MAAK,SAACC,GACL4B,KAAMC,QAAN,UAAiB7B,EAAIE,KAAK4B,SAAW,CACnCC,SAAUH,KAAMI,SAASC,YAE3BtC,EAAS,CACPC,KAAMvB,EACN4B,QAASmC,IAEXzC,EAAS,CAAEC,KAAM5C,GAClB,IAEAmD,OAAM,SAACC,GACNT,EAAS,CACPC,KAAM9C,EACNmD,QAASG,EAAIC,SAAWD,EAAIC,SAASH,KAAOE,EAAIC,UAEnD,GACJ,CAtBuB,GyC1KT4C,gBAXS,SAACC,GAAD,MAAY,CAClCC,KAAMD,EAAMC,KACZC,OAAQF,EAAME,OAFQ,GAWgBL,GAAzBE,EAzKQ,SAAC,GAAuD,IAArDtC,EAAoD,EAApDA,QAAS+P,EAA2C,EAA3CA,SAAUD,EAAiC,EAAjCA,QAAmBE,EAAc,EAAxBvN,OAAUuN,MAC9D,EAAoCtN,mBAAS,GAA7C,mBAAO0F,EAAP,KAAmBmH,EAAnB,KACA,EAAkC7M,mBAAS,IAA3C,mBAAOmM,EAAP,KAAkBC,EAAlB,KACA,EAAsCpM,mBAAS,IAA/C,mBAAOgG,EAAP,KAAoBC,EAApB,KACA,EAAwCjG,mBAAS,IAAjD,mBAAO8M,EAAP,KAAqBC,EAArB,KAEA7K,qBAAU,WACR5E,EAAQoI,EAAYM,EACrB,GAAE,CAACN,IAaJ,OACE,uBAAKtF,UAAU,kBAAf,UAEE,sBAAIA,UAAU,aAAd,UACE,qBAAIA,UAAU,kBAAd,SACE,oBAAGrE,KAAK,IAAR,yBAEF,qBAAIqE,UAAU,yBAAd,qBAEF,uBAAKA,UAAU,2BAAf,UACA,eAAC,GAAD,CAAQ6F,eAAgBA,EAChBD,YAAaA,EAAaE,YAAa,kBAAM5I,EAAQ,EAAG0I,EAAjB,EAA+BG,YAAa,WAAM7I,EAAQoI,EAAW,IAC5GO,EAAe,GAAI,IAEzB,yBACE3F,QAAS,kBAAM8L,EAAa,OAAnB,EACThM,UAAU,6BAFZ,yBAOF,uBAAKA,UAAU,YAAf,UACE,yBAAOoE,MAAM,sBAAb,UACE,iCACE,gCACE,qBAAI+H,MAAM,MAAV,kBACA,qBAAIA,MAAM,MAAV,oBAEA,qBAAIpL,MAAO,CAAER,MAAO,KAAO4L,MAAM,MAAjC,0BAKJ,iCACG9P,eAAI6Q,EAAO,WAAY,IAAI3J,KAAI,SAACC,GAC/B,OACE,gCACE,8BAAKA,EAAKrH,OACV,gCACE,wBACEA,KAAK,WACLyQ,QAASpJ,EAAKpG,OACd8I,SAAU,WAERyG,EAAgB,2BACXnJ,GADU,IAEb1G,GAAI0G,EAAK1G,GACTM,OAAuB,GAAfoG,EAAKpG,OAAc,EAAI,IAElC,EACDN,GAAI,KAAO0G,EAAK1G,KAElB,wBAAO+P,QAAS,KAAOrJ,EAAK1G,GAA5B,sBAEF,8BACE,yBACEoD,QAAS,kBAAM8L,EAAaxI,EAAnB,EACTxD,UAAU,6BAFZ,SAIE,oBAAGA,UAAU,uBAKtB,SAGL,eAAC,GAAD,CACEqF,UAAWhJ,eAAI6Q,EAAO,YAAa,GACnC5H,WAAYA,EACZC,iBAAkB,SAACuH,GACjBL,EAAcK,EACf,OAIL,eAACrM,GAAD,CACEE,OAAqB,QAAboL,EAAsB,WAAa,YAC3CnL,KAAMmL,EACNlL,QAAS,kBAAMmL,GAAa,EAAnB,EACTtL,QACE,sBAAKV,UAAU,aAAf,SACE,eAAC,KAAD,CACEgI,oBAAkB,EAClBC,cAAe,CACb9L,KAAME,eAAI0P,EAAW,OAAQ,KAE/BzD,SAAU,SAAC3J,GAAD,Ob3CM,SAACA,GAC7B,IAAIgD,EAAS,CAAC,EAKd,OAJKhD,EAAOxC,OACVwF,EAAOxF,KAAOwL,IAGThG,CACR,CaoCmCwL,CAAexO,EAA3B,EACV8J,kBAAgB,EAChBtB,SApGS,SAACxI,GACpB8N,EAAc,GACG,QAAbV,EACFiB,EAAQrO,GAERsO,EAAS,2BAAKtO,GAAN,IAAc7B,GAAIiP,EAAUjP,MAGtCkP,GAAa,EACd,EAoFS,SASG,SAACtD,GACA,OACE,gBAAC,KAAD,CAAM1I,UAAU,aAAhB,UACE,sBAAKA,UAAU,MAAf,SACE,sBAAKA,UAAU,YAAf,SACE,eAAC,KAAD,CAAOkI,KAAK,OAAZ,SACG,gBAAGS,EAAH,EAAGA,MAAH,OACC,eAAC1H,GAAD,2BACM0H,GADN,IAEExM,KAAK,OACL6D,UAAU,eACVoG,YAAa,YACbjF,MACEuH,EAAUE,QAAQzM,MAAQuM,EAAU/G,OAAOxF,KACvCuM,EAAU/G,OAAOxF,KACjB,OATT,QAiBP,yBACEA,KAAK,SACL6D,UAAU,uCAFZ,oBAOA,eAAC,GAAD,MAGL,QAKT,eAACsG,GAAD,CAAc1F,KAAqB,KAAf8L,EAAoBlG,YAAa,WAAOmG,EAAgB,GAAI,EAAEpG,YAAa,WAC7F0G,EAASP,GACTC,EAAgB,GACf,EAAEjM,QAAS,mDAGnB,ICnFKpB,GAAoB,CACxB8N,W1CiEA,eAACpQ,EAAD,uDAAQ,EAAGC,EAAX,8CACA,SAACf,GACCA,EAAS,CAAEC,KAAM7C,IAEjB8C,KACGC,IACC,6BACEW,EACA,SAFF,aAKEC,GAEHX,MAAK,SAACC,GACLoB,QAAQC,IAAIrB,GACZL,EAAS,CACPC,KAAMnC,EACNwC,QAASD,EAAIE,KAAKA,OAGpBP,EAAS,CAAEC,KAAM5C,GAClB,IAEAmD,OAAM,SAACC,GACNT,EAAS,CACPC,KAAM9C,EACNmD,QAASG,EAAIC,SAAWD,EAAIC,SAASH,KAAOE,EAAIC,UAEnD,GACJ,CA7BD,G0C9Da4C,gBATS,SAACC,GAAD,MAAY,CAClCC,KAAMD,EAAMC,KACZC,OAAQF,EAAME,OAFQ,GASgBL,GAAzBE,EA3EM,SAAC,GAA+C,IAA7C4N,EAA4C,EAA5CA,WAA4C,IAAhCzN,OAAU0N,gBAAsB,MAAX,GAAW,EAClE,EAAoCzN,mBAAS,GAA7C,mBAAO0F,EAAP,KAAmBmH,EAAnB,KACA,EAAsC7M,mBAAS,IAA/C,mBAAOgG,EAAP,KAAoBC,EAApB,KAMA,OAJA/D,qBAAU,WACRsL,EAAW9H,EAAY,GACxB,GAAE,CAACA,IAGF,uBAAKtF,UAAU,kBAAf,UAEE,sBAAIA,UAAU,aAAd,UACE,qBAAIA,UAAU,kBAAd,SACE,oBAAGrE,KAAK,IAAR,yBAEF,qBAAIqE,UAAU,yBAAd,8BAGF,sBAAKA,UAAU,2BAAf,SACE,eAAC,GAAD,CACE6F,eAAgBA,EAChBD,YAAaA,EACbE,YAAa,kBAAMsH,EAAW,EAAGxH,EAApB,EACbG,YAAa,WACXqH,EAAW9H,EAAY,IACvBO,EAAe,GAChB,MAGL,uBAAK7F,UAAU,YAAf,UACE,yBAAOoE,MAAM,sBAAb,UACE,iCACE,gCACE,qBAAI+H,MAAM,MAAV,kBACA,qBAAIA,MAAM,MAAV,mBACA,qBAAIA,MAAM,MAAV,2BACA,qBAAIA,MAAM,MAAV,mBACA,qBAAIA,MAAM,MAAV,0BAGJ,iCACG9P,eAAIgR,EAAU,gBAAiB,IAAI9J,KAAI,SAACC,GACvC,OACE,gCACE,8BAAKA,EAAK0E,OACV,8BAAK1E,EAAK2E,QACV,8BAAK3E,EAAK4G,eACV,8BAAK5G,EAAK6E,QACV,8BAAK7E,EAAKnF,YAGf,SAGL,eAAC,GAAD,CACEgH,UAAWhJ,eAAIgR,EAAU,YAAa,GACtC/H,WAAYA,EACZC,iBAAkB,SAACuH,GACjBL,EAAcK,EACf,SAKV,I,oBCmBKxN,GAAoB,CACxBgO,W3CikBwB,SAAC3O,GAAD,OAAY,SAACzC,GACrCA,EAAS,CAAEC,KAAM7C,IAEjB8C,KACG8B,KAAK,wBAAyBS,GAC9BrC,MAAK,SAACC,GACLL,EAAS,CACPC,KAAMb,GACNkB,QAASD,EAAIE,KAAKA,OAGpBP,EAAS,CAAEC,KAAM5C,GAClB,IAEAmD,OAAM,SAACC,GACNT,EAAS,CACPC,KAAM9C,EACNmD,QAASG,EAAIC,SAAWD,EAAIC,SAASH,KAAOE,EAAIC,UAEnD,GACJ,CApByB,G2C9jBX4C,gBATS,SAACC,GAAD,MAAY,CAClCC,KAAMD,EAAMC,KACZC,OAAQF,EAAME,OAFQ,GASgBL,GAAzBE,EAxFY,SAAC,GAAyC,IAAvC8N,EAAsC,EAAtCA,WAAsBC,EAAgB,EAA1B5N,OAAU4N,QAClD,EAAoC3N,mBAAS,GAA7C,mBAAO0F,EAAP,KAAmBmH,EAAnB,KACA,EAAkC7M,mBAAS,IAA3C,mBACA,GADA,UACsCA,mBAAS,KAA/C,mBAAOgG,EAAP,KAAoBC,EAApB,KACA,EAAwCjG,mBAAS,IAAjD,6BAMA,OAJAkC,qBAAU,WACRwL,GACD,GAAE,IAGD,uBAAKtN,UAAU,kBAAf,UAEE,sBAAIA,UAAU,aAAd,UACE,qBAAIA,UAAU,kBAAd,SACE,oBAAGrE,KAAK,IAAR,yBAEF,qBAAIqE,UAAU,yBAAd,yBAEF,sBAAKA,UAAU,2BAAf,SACE,eAAC,GAAD,CACE6F,eAAgBA,EAChBD,YAAaA,EACbE,YAAa,kBAAMwH,EAAW,CAAErQ,OAAQ2I,GAA3B,EACbG,YAAa,WACXuH,EAAW,CAAErQ,OAAQ,KACrB4I,EAAe,GAChB,MAGL,uBAAK7F,UAAU,YAAf,UACE,yBAAOoE,MAAM,sBAAb,UACE,iCACE,gCACE,qBAAI+H,MAAM,MAAV,kBACA,qBAAIA,MAAM,MAAV,mBACA,qBAAIA,MAAM,MAAV,oBACA,qBAAIpL,MAAO,CAAER,MAAO,KAAO4L,MAAM,MAAjC,0BAGA,qBAAIpL,MAAO,CAAER,MAAO,KAAO4L,MAAM,MAAjC,wBAGA,qBAAIA,MAAM,MAAV,2BACA,qBAAIA,MAAM,MAAV,sBACA,qBAAIA,MAAM,MAAV,yBACA,qBAAIA,MAAM,MAAV,6BAGJ,iCACG9P,eAAIkR,EAAS,cAAe,IAAIhK,KAAI,SAACC,GACpC,OACE,gCACE,8BAAKA,EAAK0E,OACV,8BAAK1E,EAAK2E,QACV,8BAAK3E,EAAKgK,WACV,8BAAKhK,EAAK4G,eACV,8BAAK5G,EAAKiK,aACV,8BAAKC,KAAOlK,EAAKmK,eAAeC,OAAO,mBACvC,8BAAKpK,EAAK9H,WACV,8BAAK8H,EAAKqK,aACV,8BAAKH,KAAOlK,EAAKsK,YAAYF,OAAO,qBAGzC,SAGL,eAAC,GAAD,CACEvI,UAAWhJ,eAAIkR,EAAS,YAAa,GACrCjI,WAAYA,EACZC,iBAAkB,SAACuH,GACjBL,EAAcK,EACf,SAKV,ICsHKxN,GAAoB,CACxBZ,aACAqP,a5C8Z0B,SAACpP,GAAD,OAAY,SAACzC,GACvCA,EAAS,CAAEC,KAAM7C,IAEjB8C,KACGwG,IAAI,+BAAgCjE,GACpCrC,MAAK,SAACC,GACL4B,KAAMC,QAAN,UAAiB7B,EAAIE,KAAK4B,SAAW,CACnCC,SAAUH,KAAMI,SAASC,YAE3BtC,EAAS,CACPC,KAAMd,GACNmB,QAASmC,IAEXzC,EAAS,CAAEC,KAAM5C,GAClB,IAEAmD,OAAM,SAACC,GACNT,EAAS,CACPC,KAAM9C,EACNmD,QAASG,EAAIC,SAAWD,EAAIC,SAASH,KAAOE,EAAIC,UAEnD,GACJ,CAtB2B,G4C3Zb4C,gBAVS,SAACC,GAAD,MAAY,CAClCC,KAAMD,EAAMC,KACZC,OAAQF,EAAME,OAFQ,GAUgBL,GAAzBE,EAzMA,SAAC,GAMT,IALLd,EAKI,EALJA,UAKI,IAJJiB,OAII,KAJM8J,UAIN,EAJsBuE,eAItB,MAJ+B,GAI/B,EAHJD,EAGI,EAHJA,aAEY9Q,GACR,EAFJyC,KAAQA,KAEJ,EADJhE,SAAYuB,QAENuM,EAAQ,IAAIG,gBAAgB1M,GAClC,EAA+B2C,mBAAS4J,EAAMnN,IAAI,UAAlD,mBAAOuK,EAAP,KAAkBqH,EAAlB,KACA,EAA4BrO,mBAAS,GAArC,mBAAOxC,EAAP,KAAe8Q,EAAf,KACA,EAA0CtO,mBAAS,IAAnD,mBAAOuO,EAAP,KAAsBC,EAAtB,KACIC,EAAW,CACbjO,KAAM7C,aAAaC,QAAQ,WAC3BR,KAAM,EACNC,OAAQ2J,EACR0H,QAAS7Q,KAAKC,MAAMH,aAAaC,QAAQ,cAAcV,GACvDM,OAAQA,GAMV,OAJA0E,qBAAU,WACRpD,EAAU2P,EACX,GAAE,CAACzH,EAAWxJ,IAGb,uBAAK4C,UAAU,kBAAf,UAEE,sBAAIA,UAAU,aAAd,UACE,qBAAIA,UAAU,kBAAd,SACE,oBAAGrE,KAAK,IAAR,yBAEF,qBAAIqE,UAAU,yBAAd,uBAEF,uBAAKA,UAAU,2BAAf,UACE,uBAAKA,UAAU,aAAf,UACE,wBACEA,UAAU,eACVjE,MAAO6K,EACPV,SAAU,SAACC,GAAD,OAAO8H,EAAU9H,EAAEhG,OAAOpE,MAA1B,EACVI,KAAK,OACLiK,YAAY,mCAEd,yBAAQpG,UAAU,6BAA6B7D,KAAK,SAApD,uBAIF,0BACEJ,MAAOqB,EACP8I,SAAU,SAACC,GACT+H,EAAU/H,EAAEhG,OAAOpE,MACpB,EAJH,UAME,yBAAQA,MAAM,IAAd,sBACA,yBAAQA,MAAM,IAAd,8BAIJ,sBAAKiE,UAAU,gBAAf,SACG3D,eAAI2R,EAAQ,YAAa,IAAIzK,KAAI,SAACgL,GACjC,OACE,uBAAKvO,UAAU,OAAf,UACE,sBAAKA,UAAU,cAAf,SACE,uBAAKA,UAAU,MAAf,UACE,uBAAKA,UAAU,WAAf,UACE,+BACE,mDADF,IACiC,IAC9B0N,KAAOa,EAAMC,YAAYZ,OAAO,oBAEnC,+BACE,wDADF,IACsC,IACnCW,EAAME,wBAGX,sBAAKzO,UAAU,WAAf,SACE,+BACE,+CADF,KAC8BuO,EAAMG,mBAK1C,uBAAK1O,UAAU,YAAf,UACE,mDAEA,uBAAKA,UAAU,wBAAf,UACE,+BACE,4CAAuB,IACtB3D,eAAIkS,EAAO,yBAA0B,IAAK,IAC1ClS,eAAIkS,EAAO,wBAAyB,OAEvC,+BACE,6CAAwB,IACvBlS,eAAIkS,EAAO,oBAAqB,IAAK,OAExC,+BACE,gDAA2B,IAC1BlS,eAAIkS,EAAO,oBAAqB,OAEnC,+BACE,uDAAkC,IACjCb,KAAOa,EAAMI,iBAAiBf,OAAO,oBAExC,+BACE,sDAAiC,IAChCF,KAAOa,EAAMK,eAAehB,OAAO,uBAIxC,uBACE5N,UAAS,2BACS,GAAhBuO,EAAMnR,OAAc,aAAe,aAD5B,KADX,SAKmB,GAAhBmR,EAAMnR,OAAc,aAAe,aAEtC,yBACE8C,QAAS,WACPkO,EAAiB,CACfhR,OAAwB,GAAhBmR,EAAMnR,OAAc,EAAI,EAChCsR,SAAUH,EAAMzR,IAEnB,EACDkD,UAAU,+CAPZ,SASmB,GAAhBuO,EAAMnR,OACH,8BACA,8BAEN,yBAAOgH,MAAM,sBAAb,UACE,iCACE,gCACE,qBAAI+H,MAAM,MAAV,kBACA,qBAAIA,MAAM,MAAV,mBACA,qBAAIA,MAAM,MAAV,sBAEA,qBAAIA,MAAM,MAAV,2BAGJ,iCACG9P,eAAIkS,EAAO,eAAgB,IAAIhL,KAAI,SAACC,GACnC,OACE,gCACE,8BACGnH,eAAImH,EAAM,gCAAiC,SAE9C,gCACG,IACD,sBACEnD,IAAKhE,eACHmH,EACA,iCACA,SAIN,8BACGnH,eACCmH,EACA,mCACA,SAGJ,8BAAKnH,eAAImH,EAAM,WAAY,WAGhC,cAMZ,MAEH,eAAC8C,GAAD,CACE1F,KAAwB,KAAlBuN,EACNzN,QACE,uDAEE,wBAFF,yCAE+C,IACpB,GAAxByN,EAAc/Q,OAAc,aAAe,WAH9C,MAG6D,IAClC,GAAxB+Q,EAAc/Q,OAAc,aAAe,cAGhDoJ,YAAa,WACX4H,EAAiB,GAClB,EACD7H,YAAa,WACXwH,EAAaI,EACd,MAIR,IC1GK7O,GAAoB,CACxBuP,S7CwFA,eAAC7R,EAAD,uDAAQ,EAAGC,EAAX,8CACA,SAACf,GACCA,EAAS,CAAEC,KAAM7C,IAEjB8C,KACGC,IACC,yBACEW,EACA,SAFF,aAKEC,GAEHX,MAAK,SAACC,GACLL,EAAS,CACPC,KAAMhC,EACNqC,QAASD,EAAIE,KAAKA,OAGpBP,EAAS,CAAEC,KAAM5C,GAClB,IAEAmD,OAAM,SAACC,GACNT,EAAS,CACPC,KAAM9C,EACNmD,QAASG,EAAIC,SAAWD,EAAIC,SAASH,KAAOE,EAAIC,UAEnD,GACJ,CA5BD,G6CrFa4C,gBATS,SAACC,GAAD,MAAY,CAClCC,KAAMD,EAAMC,KACZC,OAAQF,EAAME,OAFQ,GASgBL,GAAzBE,EAxFM,SAAC,GAAqC,IAAnCqP,EAAkC,EAAlCA,SAAoBC,EAAc,EAAxBnP,OAAUmP,MAC1C,EAAoClP,mBAAS,GAA7C,mBAAO0F,EAAP,KAAmBmH,EAAnB,KACA,EAAsC7M,mBAAS,IAA/C,mBAAOgG,EAAP,KAAoBC,EAApB,KAEA/D,qBAAU,WACR+M,EAASvJ,EAAY,GACtB,GAAE,CAACA,IACJ,MAAgC1F,oBAAS,GAAzC,mBACA,GADA,UACoCA,oBAAS,IAA7C,6BACA,OACE,uBAAKI,UAAU,kBAAf,UAEE,sBAAIA,UAAU,aAAd,UACE,qBAAIA,UAAU,kBAAd,SACE,oBAAGrE,KAAK,IAAR,yBAEF,qBAAIqE,UAAU,yBAAd,0BAGF,sBAAKA,UAAU,2BAAf,SACE,eAAC,GAAD,CACE6F,eAAgBA,EAChBD,YAAaA,EACbE,YAAa,kBAAM+I,EAAS,EAAGjJ,EAAlB,EACbG,YAAa,WACX8I,EAASvJ,EAAY,IACrBO,EAAe,GAChB,MAGL,uBAAK7F,UAAU,YAAf,UACE,yBAAOoE,MAAM,sBAAb,UACE,iCACE,gCACE,qBAAI+H,MAAM,MAAV,kBACA,qBAAIA,MAAM,MAAV,mBACA,qBAAIA,MAAM,MAAV,0BACA,qBAAIA,MAAM,MAAV,mBACA,qBAAIA,MAAM,MAAV,uBAEA,qBAAIA,MAAM,MAAV,yBAGJ,iCACG9P,eAAIyS,EAAO,YAAa,IAAIvL,KAAI,SAACC,GAChC,OACE,gCACE,gCACGA,EAAKwG,WADR,IACqBxG,EAAKyG,aAE1B,8BAAKzG,EAAK2E,QACV,8BAAK3E,EAAK4G,eACV,8BAAK5G,EAAK6E,QACV,8BACqB,GAAlB7E,EAAK8G,UACF,WACgB,GAAhB9G,EAAKtE,QACL,QACA,YAGN,8BAAoB,GAAfsE,EAAKpG,OAAc,UAAY,kBAGzC,SAGL,eAAC,GAAD,CACEiI,UAAWhJ,eAAIyS,EAAO,YAAa,GACnCxJ,WAAYA,EACZC,iBAAkB,SAACuH,GACjBL,EAAcK,EACf,SAKV,IC6JKxN,GAAoB,CACxBnC,eACA4R,Y9CiKyB,SAACpQ,GAAD,OAAY,SAACzC,GACtCA,EAAS,CAAEC,KAAM7C,IAEjB8C,KACG8B,KAAK,yBAA0BS,GAC/BrC,MAAK,SAACC,GACL4B,KAAMC,QAAN,UAAiB7B,EAAIE,KAAK4B,SAAW,CACnCC,SAAUH,KAAMI,SAASC,YAE3Bb,QAAQC,IAAIrB,EAAIE,KAAKA,MACrBP,EAAS,CACPC,KAAMrB,EACN0B,QAASD,EAAIE,KAAKA,OAEpBP,EAAS,CAAEC,KAAM5C,GAClB,IAEAmD,OAAM,SAACC,GACNT,EAAS,CACPC,KAAM9C,EACNmD,QAASG,EAAIC,SAAWD,EAAIC,SAASH,KAAOE,EAAIC,UAEnD,GACJ,CAvB0B,E8ChKzBoS,a9CyL0B,SAACrQ,GAAD,OAAY,SAACzC,GACvCA,EAAS,CAAEC,KAAM7C,IAEjB8C,KACG8B,KAAK,2BAA4BS,GACjCrC,MAAK,SAACC,GACL4B,KAAMC,QAAN,UAAiB7B,EAAIE,KAAK4B,SAAW,CACnCC,SAAUH,KAAMI,SAASC,YAE3BtC,EAAS,CACPC,KAAMpB,EACNyB,QAASmC,IAEXzC,EAAS,CAAEC,KAAM5C,GAClB,IAEAmD,OAAM,SAACC,GACNT,EAAS,CACPC,KAAM9C,EACNmD,QAASG,EAAIC,SAAWD,EAAIC,SAASH,KAAOE,EAAIC,UAEnD,GACJ,CAtB2B,E8CxL1BiB,eACAY,gBAGae,gBAbS,SAACC,GAAD,MAAY,CAClCC,KAAMD,EAAMC,KACZC,OAAQF,EAAME,OAFQ,GAagBL,GAAzBE,EAnOW,SAAC,GAOpB,IANLrC,EAMI,EANJA,YACA6R,EAKI,EALJA,aACAnR,EAII,EAJJA,YACAY,EAGI,EAHJA,YACAsQ,EAEI,EAFJA,YAEI,IADJpP,OAAU+G,EACN,EADMA,SAAUC,EAChB,EADgBA,cAEpB,EAAoC/G,mBAAS,GAA7C,mBAAO0F,EAAP,KAAmBmH,EAAnB,KACA,EAAkC7M,mBAAS,IAA3C,mBAAOmM,EAAP,KAAkBC,EAAlB,KACA,EAAsCpM,mBAAS,IAA/C,mBAAOgG,EAAP,KAAoBC,EAApB,KACA,EAAwCjG,mBAAS,IAAjD,mBAAO8M,EAAP,KAAqBC,EAArB,KAEA7K,qBAAU,WACR3E,EAAYmI,EAAYM,EACzB,GAAE,CAACN,IAiBJ,OACE,uBAAKtF,UAAU,kBAAf,UAEE,sBAAIA,UAAU,aAAd,UACE,qBAAIA,UAAU,kBAAd,SACE,oBAAGrE,KAAK,IAAR,yBAEF,qBAAIqE,UAAU,yBAAd,yBAEF,uBAAKA,UAAU,2BAAf,UACA,eAAC,GAAD,CAAQ6F,eAAgBA,EAChBD,YAAaA,EAAaE,YAAa,kBAAM3I,EAAY,EAAGyI,EAArB,EAAmCG,YAAa,WAAM5I,EAAYmI,EAAW,IACpHO,EAAe,GAAI,IAEzB,yBACE3F,QAAS,WACPzB,EAAY,IACZuN,EAAa,OACd,EACDhM,UAAU,6BALZ,6BAUF,uBAAKA,UAAU,YAAf,UACE,yBAAOoE,MAAM,sBAAb,UACE,iCACE,gCACE,qBAAI+H,MAAM,MAAV,kBACA,qBAAIA,MAAM,MAAV,mBACA,qBAAIA,MAAM,MAAV,oBAEA,qBAAIpL,MAAO,CAAER,MAAO,KAAO4L,MAAM,MAAjC,0BAKJ,iCACG9P,eAAIqK,EAAU,eAAgB,IAAInD,KAAI,SAACC,GACtC,OACE,gCACE,8BAAKA,EAAK6D,gBACV,8BACE,sBAAK9G,MAAO,IAAKF,IAAKmD,EAAK8D,mBAE7B,gCACE,wBACEnL,KAAK,WACLyQ,QAASpJ,EAAKpG,OACd8I,SAAU,WAERyG,EAAgB,2BACXnJ,GADU,IAEb1G,GAAI0G,EAAK1G,GACTM,OAAuB,GAAfoG,EAAKpG,OAAc,EAAI,IAElC,EACDN,GAAI,KAAO0G,EAAK1G,KAElB,wBAAO+P,QAAS,KAAOrJ,EAAK1G,GAA5B,sBAEF,8BACE,yBACEoD,QAAS,WACP8L,EAAaxI,GACb/E,EAAY+E,EAAK8D,eAElB,EACDtH,UAAU,6BANZ,SAQE,oBAAGA,UAAU,uBAKtB,SAGL,eAAC,GAAD,CACEqF,UAAWhJ,eAAIqK,EAAU,YAAa,GACtCpB,WAAYA,EACZC,iBAAkB,SAACuH,GACjBL,EAAcK,EACf,OAIL,eAACrM,GAAD,CACEE,OAAqB,QAAboL,EAAsB,eAAiB,gBAC/CnL,KAAMmL,EACNlL,QAAS,kBAAMmL,GAAa,EAAnB,EACTtL,QACE,sBAAKV,UAAU,aAAf,SACE,eAAC,KAAD,CACEgI,oBAAkB,EAClBC,cAAe,CACbZ,cAAehL,eAAI0P,EAAW,gBAAiB,KAEjDzD,SAAU,SAAC3J,GAAD,OlBtES,SAACA,EAAQsQ,GACxC,IAAItN,EAAS,CAAC,EAQd,OAPKhD,EAAO0I,gBACV1F,EAAO0F,cAAgBM,IAEpBsH,IACHtN,EAAO2F,eAAiBK,IAGnBhG,CACR,CkB4DmCuN,CAAkBvQ,EAAQgI,EAAtC,EACV8B,kBAAgB,EAChBtB,SAnHS,SAACxI,GACpB8N,EAAc,GACG,QAAbV,EACFgD,EAAY,2BAAKpQ,GAAN,IAAc2I,eAAgBX,KAEzCqI,EAAa,2BACRrQ,GADO,IAEV7B,GAAIiP,EAAUjP,GACdwK,eAAgBX,KAGpBqF,GAAa,GACbrF,EAAc,GACf,EA+FS,SASG,SAAC+B,GACA,OACE,gBAAC,KAAD,CAAM1I,UAAU,aAAhB,UACE,sBAAKA,UAAU,MAAf,SACE,sBAAKA,UAAU,YAAf,SACE,eAAC,KAAD,CAAOkI,KAAK,gBAAZ,SACG,gBAAGS,EAAH,EAAGA,MAAH,OACC,eAAC1H,GAAD,2BACM0H,GADN,IAEExM,KAAK,OACL6D,UAAU,eACVoG,YAAa,gBACbjF,MACEuH,EAAUE,QAAQvB,eAClBqB,EAAU/G,OAAO0F,cACbqB,EAAU/G,OAAO0F,cACjB,OAVT,QAiBP,wBACA,sBAAKrH,UAAU,MAAf,SACE,uBAAKA,UAAU,YAAf,UACGqD,QAAQ5E,IACP,sBAAK8B,MAAO,IAAKF,IAAKsG,IAExB,wBAEA,2DACA,eAAC,KAAD,CAAOuB,KAAK,iBAAZ,SACG,gBAAGS,EAAH,EAAGA,MAAH,OACC,eAAC1H,GAAD,2BACM0H,GADN,IAEExM,KAAK,OACL+J,SAAQ,iDAAE,WAAOC,GAAP,iGACUtI,EAChBsI,EAAEhG,OAAOgP,MAAM,IAFT,OACJF,EADI,OAIRtR,QAAQC,IAAI,QAASqR,GAJb,2CAAF,sDAMR9N,MACEuH,EAAUE,QAAQtB,gBAClBoB,EAAU/G,OAAO2F,eACboB,EAAU/G,OAAO2F,eACjB,OAdT,SAsBP,yBACEnL,KAAK,SACL6D,UAAU,uCAFZ,oBAOA,eAAC,GAAD,MAGL,QAMT,eAACsG,GAAD,CAAc1F,KAAqB,KAAf8L,EAAoBlG,YAAa,WAAOmG,EAAgB,GAAI,EAAEpG,YAAa,WAC7FyI,EAAatC,GACbC,EAAgB,GACf,EAAEjM,QAAS,uDAInB,ICmKKpB,GAAoB,CACxBnC,eACAU,eACAY,eACA2Q,W/C0FwB,SAACzQ,GAAD,OAAY,SAACzC,GACrCA,EAAS,CAAEC,KAAM7C,IAEjB8C,KACG8B,KAAK,uBAAwBS,GAC7BrC,MAAK,SAACC,GACL4B,KAAMC,QAAN,UAAiB7B,EAAIE,KAAK4B,SAAW,CACnCC,SAAUH,KAAMI,SAASC,YAE3Bb,QAAQC,IAAIrB,EAAIE,KAAKA,MACrBP,EAAS,CACPC,KAAMjB,GACNsB,QAASD,EAAIE,KAAKA,OAEpBP,EAAS,CAAEC,KAAM5C,GAClB,IAEAmD,OAAM,SAACC,GACNT,EAAS,CACPC,KAAM9C,EACNmD,QAASG,EAAIC,SAAWD,EAAIC,SAASH,KAAOE,EAAIC,UAEnD,GACJ,CAvByB,E+CzFxByS,Y/CkHyB,SAAC1Q,GAAD,OAAY,SAACzC,GACtCA,EAAS,CAAEC,KAAM7C,IAEjB8C,KACG8B,KAAK,0BAA2BS,GAChCrC,MAAK,SAACC,GACL4B,KAAMC,QAAN,UAAiB7B,EAAIE,KAAK4B,SAAW,CACnCC,SAAUH,KAAMI,SAASC,YAE3Bb,QAAQC,IAAIe,GACZzC,EAAS,CACPC,KAAMhB,GACNqB,QAAQ,2BAAMD,EAAIE,KAAKA,MAAhB,IAAsB6S,cAAe3Q,EAAO2Q,kBAErDpT,EAAS,CAAEC,KAAM5C,GAClB,IAEAmD,OAAM,SAACC,GACNT,EAAS,CACPC,KAAM9C,EACNmD,QAASG,EAAIC,SAAWD,EAAIC,SAASH,KAAOE,EAAIC,UAEnD,GACJ,CAvB0B,E+CjHzBU,eACAP,eACAG,YAGasC,gBAhBS,SAACC,GAAD,MAAY,CAClCC,KAAMD,EAAMC,KACZC,OAAQF,EAAME,OAFQ,GAgBgBL,GAAzBE,EA9XW,SAAC,GAWpB,IAVLlC,EAUI,EAVJA,YACAH,EASI,EATJA,YACAkS,EAQI,EARJA,YACAxR,EAOI,EAPJA,YACAY,EAMI,EANJA,YACA2Q,EAKI,EALJA,WACArS,EAII,EAJJA,YACM2C,EAGF,EAHJA,KAAMA,KACNxC,EAEI,EAFJA,QAEI,IADJyC,OAAU+G,EACN,EADMA,SAAUC,EAChB,EADgBA,cAAe4I,EAC/B,EAD+BA,SAASrC,EACxC,EADwCA,MAAMV,EAC9C,EAD8CA,SAElD,EAAoC5M,mBAAS,GAA7C,mBAAO0F,EAAP,KAAmBmH,EAAnB,KACA,EAAkC7M,mBAAS,IAA3C,mBAAOmM,EAAP,KAAkBC,EAAlB,KACA,EAAsCpM,mBAAS,IAA/C,mBAAOgG,EAAP,KAAoBC,EAApB,KACA,EAAwCjG,mBAAS,IAAjD,mBAAO8M,EAAP,KAAqBC,EAArB,KACAhP,QAAQC,IAAI8B,EAAK,QAEjBoC,qBAAU,WACRxE,EAAYgI,EAAYM,GACxBzI,IACAD,IACAH,GAED,GAAE,CAACuI,IAkBJ,OACE,uBAAKtF,UAAU,kBAAf,UAEE,sBAAIA,UAAU,aAAd,UACE,qBAAIA,UAAU,kBAAd,SACE,oBAAGrE,KAAK,IAAR,yBAEF,qBAAIqE,UAAU,yBAAd,yBAEF,uBAAKA,UAAU,2BAAf,UACA,eAAC,GAAD,CAAQ6F,eAAgBA,EAChBD,YAAaA,EAAaE,YAAa,kBAAMxI,EAAY,EAAGsI,EAArB,EAAmCG,YAAa,WAAMzI,EAAYgI,EAAW,IACpHO,EAAe,GAAI,IAGzB,yBACE3F,QAAS,WACPzB,EAAY,IACZuN,EAAa,OACd,EACDhM,UAAU,6BALZ,4BAUF,uBAAKA,UAAU,YAAf,UACE,yBAAOoE,MAAM,sBAAb,UACE,iCACE,gCACA,qBAAI+H,MAAM,MAAV,4BACE,qBAAIA,MAAM,MAAV,kBACA,qBAAIA,MAAM,MAAV,mBACA,qBAAIA,MAAM,MAAV,yBACA,qBAAIA,MAAM,MAAV,gCACA,qBAAIA,MAAM,MAAV,0BACA,qBAAIA,MAAM,MAAV,oBAEA,qBAAIpL,MAAO,CAAER,MAAO,KAAO4L,MAAM,MAAjC,0BAKJ,iCACG9P,eAAIkT,EAAU,eAAgB,IAAIhM,KAAI,SAACC,GACtC,OACE,gCACE,8BAAKA,EAAKgM,iBACV,8BAAKhM,EAAKiM,eACV,8BACE,sBAAKlP,MAAO,IAAKF,IAAKmD,EAAK8L,kBAE7B,8BAAK9L,EAAKkM,cACV,8BAAKrT,eAAImH,EAAM,0BAA2B,SAC1C,8BAAKnH,eAAImH,EAAM,qBAAsB,SACrC,gCACE,wBACErH,KAAK,WACLyQ,QAASpJ,EAAKpG,OACd8I,SAAU,WAGTyG,EAAgB,2BACZnJ,GADW,IAEd1G,GAAI0G,EAAK1G,GACT6S,WAAYnM,EAAK1G,GACjBM,OAAuB,GAAfoG,EAAKpG,OAAc,EAAI,IAEhC,EACDN,GAAI,KAAO0G,EAAK1G,KAElB,wBAAO+P,QAAS,KAAOrJ,EAAK1G,GAA5B,sBAEF,8BACE,yBACEoD,QAAS,WACP8L,EAAaxI,GACb/E,EAAY+E,EAAK8L,cAClB,EACDtP,UAAU,6BALZ,SAOE,oBAAGA,UAAU,uBAKtB,SAGL,eAAC,GAAD,CACEqF,UAAWhJ,eAAIqK,EAAU,YAAa,GACtCpB,WAAYA,EACZC,iBAAkB,SAACuH,GACjBL,EAAcK,EACf,OAIL,eAACrM,GAAD,CACEE,OAAqB,QAAboL,EAAsB,cAAgB,eAC9CnL,KAAMmL,EACNlL,QAAS,kBAAMmL,GAAa,EAAnB,EACTtL,QACE,sBAAKV,UAAU,aAAf,SACE,eAAC,KAAD,CACEgI,oBAAkB,EAClBC,cAAe,CACbuH,eAAgBnT,eAAI0P,EAAW,iBAAkB,IACjD0D,aAAcpT,eAAI0P,EAAW,eAAgB,IAC7C6D,gBAAiBvT,eAAI0P,EAAW,kBAAmB,IACnD8D,YAAaxT,eAAI0P,EAAW,cAAe,IAC3C+D,YAAazT,eAAI0P,EAAW,cAAe,IAC3C2D,YAAarT,eAAI0P,EAAW,cAAe,IAC3CuC,QAAQjS,eAAIqD,EAAK,OAInB4I,SAAU,SAAC3J,GAAD,OnB1FQ,SAACA,EAAQsQ,GACvC,IAAItN,EAAS,CAAC,EAwBd,OAvBKhD,EAAO8Q,eACV9N,EAAO8N,aAAe9H,IAEnBhJ,EAAO6Q,iBACV7N,EAAO6N,eAAiB7H,IAErBhJ,EAAOkR,cACVlO,EAAOkO,YAAclI,IAElBhJ,EAAOmR,cACVnO,EAAOmO,YAAcnI,IAElBhJ,EAAOiR,kBACVjO,EAAOiO,gBAAkBjI,IAEtBhJ,EAAO+Q,cACV/N,EAAO+N,YAAc/H,IAGlBsH,IACHtN,EAAO2F,eAAiBK,IAGnBhG,CACR,CmBgEmCoO,CAAiBpR,EAAQgI,EAArC,EACV8B,kBAAgB,EAChBtB,SAtIS,SAACxI,GACpBhB,QAAQC,IAAIe,GACZ8N,EAAc,GACG,QAAbV,EACFqD,EAAW,2BAAKzQ,GAAN,IAAc2Q,cAAe3I,KAEvC0I,EAAY,2BACP1Q,GADM,IAETgR,WAAY5D,EAAUjP,GACtBwS,cAAe3I,KAGnBqF,GAAa,GACbrF,EAAc,GACf,EAyGS,SAiBG,SAAC+B,GACA,OACE,gBAAC,KAAD,CAAM1I,UAAU,aAAhB,UACE,sBAAKA,UAAU,MAAf,SACE,sBAAKA,UAAU,YAAf,SACE,eAAC,KAAD,CAAOkI,KAAK,eAAZ,SACG,gBAAGS,EAAH,EAAGA,MAAH,OACC,eAAC1H,GAAD,2BACM0H,GADN,IAEExM,KAAK,OACL6D,UAAU,eACVoG,YAAa,eACbjF,MACEuH,EAAUE,QAAQ6G,cAClB/G,EAAU/G,OAAO8N,aACb/G,EAAU/G,OAAO8N,aACjB,OAVT,QAiBP,wBACA,sBAAKzP,UAAU,MAAf,SACE,sBAAKA,UAAU,YAAf,SACE,eAAC,KAAD,CAAOkI,KAAK,iBAAZ,SACG,gBAAGS,EAAH,EAAGA,MAAH,OACC,eAAC1H,GAAD,2BACM0H,GADN,IAEExM,KAAK,OACL6D,UAAU,eACVoG,YAAa,iBACbjF,MACEuH,EAAUE,QAAQ4G,gBAClB9G,EAAU/G,OAAO6N,eACb9G,EAAU/G,OAAO6N,eACjB,OAVT,QAiBT,wBACE,sBAAKxP,UAAU,MAAf,SACE,sBAAKA,UAAU,YAAf,SACE,eAAC,KAAD,CAAOkI,KAAK,cAAZ,SACG,gBAAGS,EAAH,EAAGA,MAAH,OACC,eAACqH,GAAD,2BACMrH,GADN,IAEExM,KAAK,OAEL8T,QAAS5T,eAAIqK,EAAS,eAAe,IAAInD,KAAI,SAAAC,GAC3C,MAAO,CAAC1H,MAAM0H,EAAK6D,cAActL,MAAMyH,EAAK1G,GAC7C,IACDf,MAAOM,eAAIqK,EAAS,eAAe,IAAInD,KAAI,SAAAC,GACzC,MAAO,CAAC1H,MAAM0H,EAAK6D,cAActL,MAAMyH,EAAK1G,GAC7C,IAAEoT,MAAK,SAAA1M,GAAI,OAAIA,EAAKzH,OAAS2M,EAAU/J,OAAOkR,WAAnC,IACZ3J,SAAU,SAACiK,GAAD,OAAWzH,EAAUqB,cAAc,cAAcoG,EAAOpU,MAAxD,EACVqK,YAAa,kBACbjF,MACEuH,EAAUE,QAAQiH,aAClBnH,EAAU/G,OAAOkO,YACbnH,EAAU/G,OAAOkO,YACjB,OAjBT,QAwBP,wBACA,sBAAK7P,UAAU,MAAf,SACE,sBAAKA,UAAU,YAAf,SACE,eAAC,KAAD,CAAOkI,KAAK,kBAAZ,SACG,gBAAGS,EAAH,EAAGA,MAAH,OACC,eAACqH,GAAD,2BACMrH,GADN,IAEExM,KAAK,OACLJ,MAAOM,eAAI6Q,EAAM,WAAW,IAAI3J,KAAI,SAAAC,GAClC,MAAO,CAAC1H,MAAM0H,EAAKrH,KAAKJ,MAAMyH,EAAK1G,GACpC,IAAEoT,MAAK,SAAA1M,GAAI,OAAIA,EAAKzH,OAAS2M,EAAU/J,OAAOiR,eAAnC,IACZK,QAAS5T,eAAI6Q,EAAM,WAAW,IAAI3J,KAAI,SAAAC,GACpC,MAAO,CAAC1H,MAAM0H,EAAKrH,KAAKJ,MAAMyH,EAAK1G,GACpC,IACDoJ,SAAU,SAACiK,GAAD,OAAWzH,EAAUqB,cAAc,kBAAkBoG,EAAOpU,MAA5D,EACVqK,YAAa,cACbjF,MACEuH,EAAUE,QAAQgH,iBAClBlH,EAAU/G,OAAOiO,gBACblH,EAAU/G,OAAOiO,gBACjB,OAhBT,QAuBP,wBACA,sBAAK5P,UAAU,MAAf,SACE,sBAAKA,UAAU,YAAf,SACE,eAAC,KAAD,CAAOkI,KAAK,cAAZ,SACG,gBAAGS,EAAH,EAAGA,MAAH,OACC,eAACqH,GAAD,2BACMrH,GADN,IAEExM,KAAK,OACLJ,MAAOM,eAAImQ,EAAS,eAAe,IAAIjJ,KAAI,SAAAC,GACzC,MAAO,CAAC1H,MAAM0H,EAAKgJ,SAASzQ,MAAMyH,EAAK1G,GACxC,IAAEoT,MAAK,SAAA1M,GAAI,OAAIA,EAAKzH,OAAS2M,EAAU/J,OAAOmR,WAAnC,IACZG,QAAS5T,eAAImQ,EAAS,eAAe,IAAIjJ,KAAI,SAAAC,GAC3C,MAAO,CAAC1H,MAAM0H,EAAKgJ,SAASzQ,MAAMyH,EAAK1G,GACxC,IACDoJ,SAAU,SAACiK,GAAD,OAAWzH,EAAUqB,cAAc,cAAcoG,EAAOpU,MAAxD,EACVqK,YAAa,kBACbjF,MACEuH,EAAUE,QAAQkH,aAClBpH,EAAU/G,OAAOmO,YACbpH,EAAU/G,OAAOmO,YACjB,OAhBT,QAuBP,wBACA,sBAAK9P,UAAU,MAAf,SACE,sBAAKA,UAAU,YAAf,SACE,eAAC,KAAD,CAAOkI,KAAK,cAAZ,SACG,gBAAGS,EAAH,EAAGA,MAAH,OACC,eAACzE,GAAD,2BACMyE,GADN,IAEExM,KAAK,OACL6D,UAAU,eACVoG,YAAa,cACbjF,MACEuH,EAAUE,QAAQ8G,aAClBhH,EAAU/G,OAAO+N,YACbhH,EAAU/G,OAAO+N,YACjB,OAVT,QAkBP,sBAAK1P,UAAU,MAAf,SACE,uBAAKA,UAAU,YAAf,UACGqD,QAAQ5E,IACP,sBAAK8B,MAAO,IAAKF,IAAKsG,IAExB,wBAEA,0DACA,eAAC,KAAD,CAAOuB,KAAK,gBAAZ,SACG,gBAAGS,EAAH,EAAGA,MAAH,OACC,eAAC1H,GAAD,2BACM0H,GADN,IAEExM,KAAK,OACL+J,SAAQ,iDAAE,WAAOC,GAAP,2FACUtI,EAChBsI,EAAEhG,OAAOgP,MAAM,IAFT,yDAAF,sDAMRhO,MACEuH,EAAUE,QAAQ0G,eAClB5G,EAAU/G,OAAO2N,cACb5G,EAAU/G,OAAO2N,cACjB,OAdT,SAwBP,yBACEnT,KAAK,SACL6D,UAAU,uCAFZ,oBAOA,eAAC,GAAD,MAGL,QAKT,eAACsG,GAAD,CAAc1F,KAAqB,KAAf8L,EAAoBlG,YAAa,WAAOmG,EAAgB,GAAI,EAAEpG,YAAa,WAC7F8I,EAAY3C,GACZC,EAAgB,GACf,EAAEjM,QAAS,qDAGnB,ICtPKpB,GAAoB,CACxBZ,cAGac,gBATS,SAACC,GAAD,MAAY,CAClCC,KAAMD,EAAMC,KACZC,OAAQF,EAAME,OAFQ,GASgBL,GAAzBE,EA7IA,SAAC,GAKT,IAJLd,EAII,EAJJA,UAII,IAHJiB,OAGI,KAHM8J,UAGN,EAHsBuE,eAGtB,MAH+B,GAG/B,EAFQ/Q,EAER,EAFJvB,SAAYuB,OAGNuM,GADF,EADJ9J,KAAQA,KAEM,IAAIiK,gBAAgB1M,IAClC,EAA+B2C,mBAAS4J,EAAMnN,IAAI,UAAlD,mBAAOuK,EAAP,KAAkBqH,EAAlB,KACII,EAAW,CACbjO,KAAM7C,aAAaC,QAAQ,WAC3BR,KAAM,EACNC,OAAQ2J,EACR0H,QAAS7Q,KAAKC,MAAMH,aAAaC,QAAQ,cAAcV,IAOzD,OAJAgF,qBAAU,WACRpD,EAAU2P,EACX,GAAE,CAACzH,IAGF,uBAAK5G,UAAU,kBAAf,UAEE,sBAAIA,UAAU,aAAd,UACE,qBAAIA,UAAU,kBAAd,SACE,oBAAGrE,KAAK,IAAR,yBAEF,qBAAIqE,UAAU,yBAAd,gCAEF,sBAAKA,UAAU,eAAf,SACE,uBAAKA,UAAU,aAAf,UACE,wBACEA,UAAU,eACVjE,MAAO6K,EACPV,SAAU,SAACC,GAAD,OAAO8H,EAAU9H,EAAEhG,OAAOpE,MAA1B,EACVI,KAAK,OACLiK,YAAY,mCAEd,yBAAQpG,UAAU,6BAA6B7D,KAAK,SAApD,yBAKJ,sBAAK6D,UAAU,gBAAf,SACG3D,eAAI2R,EAAQ,YAAa,IAAIzK,KAAI,SAACgL,GACjC,OACE,uBAAKvO,UAAU,OAAf,UACE,sBAAKA,UAAU,cAAf,SACE,uBAAKA,UAAU,MAAf,UACE,uBAAKA,UAAU,WAAf,UACE,+BACE,mDADF,IACiC,IAC9B0N,KAAOa,EAAMC,YAAYZ,OAAO,oBAEnC,+BACE,uDAAkC,IACjCF,KAAOa,EAAMI,iBAAiBf,OAAO,oBAExC,+BACE,wDADF,IACsC,IACnCW,EAAME,wBAGX,uBAAKzO,UAAU,WAAf,UACE,+BACE,+CADF,KAC8BuO,EAAMG,YAEpC,+BACE,sDAAiC,IAChChB,KAAOa,EAAMK,eAAehB,OAAO,4BAK5C,uBAAK5N,UAAU,YAAf,UACE,+CACA,4EACA,uBACEA,UAAS,2BACS,GAAhBuO,EAAMnR,OAAc,aAAe,aAD5B,KADX,SAKmB,GAAhBmR,EAAMnR,OAAc,aAAe,aAEtC,yBAAOgH,MAAM,sBAAb,UACE,iCACE,gCACE,qBAAI+H,MAAM,MAAV,kBACA,qBAAIA,MAAM,MAAV,mBACA,qBAAIA,MAAM,MAAV,sBAEA,qBAAIA,MAAM,MAAV,2BAGJ,iCACG9P,eAAIkS,EAAO,eAAgB,IAAIhL,KAAI,SAACC,GACnC,OACE,gCACE,8BACGnH,eAAImH,EAAM,gCAAiC,SAE9C,gCACG,IACD,sBACEnD,IAAKhE,eACHmH,EACA,iCACA,SAIN,8BACGnH,eACCmH,EACA,mCACA,SAGJ,8BAAKnH,eAAImH,EAAM,WAAY,WAGhC,cAMZ,QAIR,I,6BC4nBKlE,GAAoB,CACxBnC,eACAG,eACA8S,WjD1MwB,SAACzR,EAAQoF,GAAT,OAAqB,SAAC7H,GAC9CA,EAAS,CAAEC,KAAM7C,IACjB,IACMqJ,EAAU,CACd,eAAgB,mBAChB,iBAHYpF,aAAaC,QAAQ,iBAKnCpB,KACG8B,KAAK,sBAAuBS,EAAQ,CACnCgE,QAASA,IAEVrG,MAAK,SAACC,GACLgB,aAAauB,WAAW,cACxB5C,EAAS,CAAEC,KAAM5C,IACjBwK,GAAQ,EACT,IACArH,OAAM,SAACC,GACNT,EAAS,CACPC,KAAM9C,EACNmD,QAASG,EAAIC,SAAWD,EAAIC,SAASH,KAAOE,EAAIC,UAEnD,GACJ,CAtByB,EiD2MxByT,YjDrIyB,SAAC1R,GAAD,OAAY,SAACzC,GACtCA,EAAS,CAAEC,KAAM7C,IACjB,IACMqJ,EAAU,CACd,eAAgB,mBAChB,iBAHYpF,aAAaC,QAAQ,iBAKnCpB,KACG8B,KAAK,mBAAoBS,EAAQ,CAChCgE,QAASA,IAEVrG,MAAK,SAACC,GACL4B,KAAMC,QAAN,UAAiB7B,EAAIE,KAAK4B,SAAW,CACnCC,SAAUH,KAAMI,SAASC,YAE3BjB,aAAauB,WAAW,cACxB5C,EAAS,CAAEC,KAAM5C,GAClB,IAEAmD,OAAM,SAACC,GACNT,EAAS,CACPC,KAAM9C,EACNmD,QAASG,EAAIC,SAAWD,EAAIC,SAASH,KAAOE,EAAIC,UAEnD,GACJ,CAzB0B,GiDwIZ4C,gBAZS,SAACC,GAAD,MAAY,CAClCC,KAAMD,EAAMC,KACZC,OAAQF,EAAME,OAFQ,GAYgBL,GAAzBE,EA7uBC,SAAC0B,GACf,IACE/D,EAOE+D,EAPF/D,YACAG,EAME4D,EANF5D,YACA8S,EAKElP,EALFkP,WACAC,EAIEnP,EAJFmP,YACYpT,EAGViE,EAHFxF,SAAYuB,OALd,EAQIiE,EAFFvB,OAAU+G,EANZ,EAMYA,SAAU6I,EANtB,EAMsBA,SACZ7P,EACNwB,EADFxB,KAAQA,KAEJ8J,EAAQ,IAAIG,gBAAgB1M,GAClC,EAA+B2C,mBAAS4J,EAAMnN,IAAI,UAAlD,mBAAOuK,EAAP,KAAkBqH,EAAlB,KACA,EAAwCrO,mBACtCrC,aAAaC,QAAQ,cACjBC,KAAKC,MAAMH,aAAaC,QAAQ,eAChC,IAHN,mBAAO8S,EAAP,KAAqBC,EAArB,KAKA,EAAuC3Q,mBAAS,IAAI4Q,MAApD,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAmC9Q,mBAAS,IAAI4Q,MAAhD,mBAAOG,EAAP,KAAgBC,EAAhB,KACA,EAAkChR,oBAAS,GAA3C,mBAAOmM,EAAP,KAAkBC,EAAlB,KACA,EAAkCpM,oBAAS,GAA3C,mBAAOiR,EAAP,KAAkBC,EAAlB,KACA,EAAoClR,mBAAS,GAA7C,mBAAOmR,EAAP,KAAmBC,EAAnB,KACA,EAAkCpR,mBAAS,IAA3C,mBAAOqR,EAAP,KAAkBC,EAAlB,KACA,EAAwBtR,oBAAS,GAAjC,mBAAOgB,EAAP,KAAamD,EAAb,KACA,EAAsCnE,oBAAS,GAA/C,oBAAOuR,GAAP,MAAoBC,GAApB,MACMC,GAAQC,iBAAO,MACfC,GAAgB,kBA3BHC,EA2BqBH,GA3Bb5V,OAAOgW,SAAS,EAAGD,EAAIE,QAAQC,WAAxC,IAACH,CA2BG,EAEtB1P,qBAAU,WACR3E,EAAY,EAAG,GAAI,EACpB,GAAE,IACH2E,qBAAU,WACRmM,EAAUzE,EAAMnN,IAAI,SACrB,GAAE,CAACY,IACJ6E,qBAAU,WACRxE,EAAY,EAAGsJ,EAAW,EAAG2K,IAC7BA,IACD,GAAE,CAAC3K,IAEJ,IAMMgL,GAAgB,SAAC9U,EAAI+U,GACzB,IAAIC,EAAU,aAAOxB,GACjByB,EAAqBD,EAAWE,WAAU,SAACxO,GAAD,OAAUA,EAAK1G,KAAOA,CAAtB,IAC7B,IAAb+U,EACFC,EAAWC,GAAoBF,SAAWA,EAE1CC,EAAWG,OAAOF,EAAoB,GAExCG,GAAkBJ,GACO,GAArBA,EAAW7P,QACb+J,GAAa,GAEfuE,EAAgBuB,EACjB,EAEKI,GAAoB,SAACC,GACzB5U,aAAa4B,QAAQ,aAAc1B,KAAK4B,UAAU8S,GACnD,EAEKC,GAAU,iDAAG,WAAOzT,GAAP,iFACjBuS,EAAa,2BACRvS,GADO,IAEVgQ,gBAAiB8B,EACjB7B,cAAe+B,KAEjB3E,GAAa,GACb8E,GAAa,IACTzC,EARa,2BASZ1P,GATY,IAUfgQ,gBAAiB8B,EACjB7B,cAAe+B,KAER0B,cAAgB/B,EAAa/M,KAAI,SAACC,GACzC,MAAO,CACLqM,YAAarM,EAAKqM,YAClByC,mBAAoB9O,EAAK1G,GACzB+U,SAAUrO,EAAKqO,SAElB,IACGtU,aAAaC,QAAQ,gBACvB4S,EAAW/B,EAAUtK,GAErB+M,GAAa,GAvBE,2CAAH,sDA2BVyB,GAAY,iDAAG,WAAO5T,GAAP,iFACnByS,IAAe,GAEX/C,EAHe,eAGC1P,GAEpB0R,EAAYhC,GALO,2CAAH,sDAQlB,OACE,iCACE,sBAAKrO,UAAU,gDAAf,SACE,uBAAKA,UAAU,YAAY,WAAS,UAAU,iBAAgB,IAA9D,UACE,qBAAIA,UAAU,6DAAd,uBAGA,sBAAKA,UAAU,8BAAf,SACE,sBAAKA,UAAU,eAAf,SACE,uBAAKA,UAAU,aAAf,UACE,wBACEA,UAAU,eACVjE,MAAO6K,EACPV,SAAU,SAACC,GAAD,OAAO8H,EAAU9H,EAAEhG,OAAOpE,MAA1B,EACVI,KAAK,OACLiK,YAAY,qCAEd,yBAAQpG,UAAU,6BAA6B7D,KAAK,SAApD,gCASV,uBAAK6D,UAAU,gBAAf,UACE,sBAAKA,UAAU,mCAAf,SACE,sBAAKA,UAAU,sCAAf,SACE,qBAAIA,UAAU,gCAAd,+BAGJ,uBAAKA,UAAU,0BAAf,UACG3D,eAAIqK,EAAU,eAAgB,IAAInD,KAAI,SAACC,GACtC,OACE,sBAAKxD,UAAU,iCAAf,SACE,eAAC,IAAD,CAAMC,GAAI,mBAAqBuD,EAAK6D,cAApC,SACE,sBAAKrH,UAAU,6BAAf,SACE,iCACE,8BAAKwD,EAAK6D,gBACV,sBAAKhH,IAAKmD,EAAK8D,qBAH8B9D,EAAK1G,OAS7D,IACD,sBAAK0U,IAAKH,WAId,uBAAKrR,UAAU,kBAAf,UAC+C,GAA5C3D,eAAIkT,EAAU,eAAgB,IAAItN,QAAe,eAAC,GAAD,IACjD5F,eAAIkT,EAAU,eAAgB,IAAIhM,KAAI,SAACC,GACtC,IAAIgP,EAAiBlC,EAAaJ,MAAK,SAACuC,GAAD,OAAQA,EAAG3V,IAAM0G,EAAK1G,EAAtB,IAEvC,OADAa,QAAQC,IAAI,eAAgB0S,GAE1B,uBAAKtQ,UAAU,eAAf,UACE,sBAAKA,UAAU,UAAf,SACE,sBAAKK,IAAKmD,EAAK8L,kBAEjB,uBAAKtP,UAAU,WAAf,UACE,8BAAKwD,EAAKiM,eACV,+BACE,gDAA2B,IAC1BpT,eAAImH,EAAM,0BAA2B,UAExC,+BACE,4CAAuB,IACtBnH,eAAImH,EAAM,qBAAsB,UAEnC,+BACE,gDAA2B,IAC1BnH,eAAImH,EAAM,0BAA2B,UAEtCgP,EAUA,uBAAKxS,UAAU,cAAf,UACE,yBACEE,QAAS,WACP0R,GAAcpO,EAAK1G,GAAI0V,EAAeX,SAAW,EAClD,EAHH,SAKE,oBAAGzN,MAAM,cAAc,cAAY,WAErC,gCAAOoO,EAAeX,WACtB,yBACE3R,QAAS,WACP0R,GAAcpO,EAAK1G,GAAI0V,EAAeX,SAAW,EAClD,EAHH,SAKE,oBAAGzN,MAAM,aAAa,cAAY,cAvBtC,0BACElE,QAAS,YAzIT,SAACwS,GACjB,IAAIZ,EAAU,aAAOxB,GACrBwB,EAAW/S,KAAX,2BAAqB2T,GAArB,IAA8Bb,SAAU,KACxCK,GAAkBJ,GAClBvB,EAAgBuB,EACjB,CAqImBa,CAAUnP,EACX,EACDxD,UAAU,6BAJZ,UAME,oBAAGA,UAAU,eANf,uBA8BT,OAEH,eAACS,GAAD,CACEE,OAAQ,gBACRC,KAAMmL,EACNxL,MAAO,IACPM,QAAS,kBAAMmL,GAAa,EAAnB,EACTtL,QACE,uBAAKV,UAAU,YAAf,UACE,uBAAKA,UAAS,qBAAgB+Q,GAA9B,UACE,qBAAG/Q,UAAU,YAAYrE,KAAK,oBAA9B,UACE,uBAAMqE,UAAU,QAAhB,SACG+Q,EAAa,EAAI,oBAAG/Q,UAAU,gBAAqB,IAEtD,uBAAMA,UAAU,YAAhB,8BAEF,qBAAGA,UAAU,YAAYrE,KAAK,oBAA9B,UACE,uBAAMqE,UAAU,QAAhB,eACA,uBAAMA,UAAU,YAAhB,iCAGW,GAAd+Q,GACC,uBAAK/Q,UAAU,YAAf,UACE,yBAAOoE,MAAM,sBAAb,UACE,iCACE,gCACE,qBAAI+H,MAAM,MAAV,kBACA,qBAAIA,MAAM,MAAV,mBACA,qBAAIA,MAAM,MAAV,sBACA,qBAAIA,MAAM,MAAV,kBACA,qBAAIA,MAAM,MAAV,sBACA,qBAAIA,MAAM,MAAV,sBACA,qBAAIA,MAAM,MAAV,0BAGJ,iCACGmE,EAAa/M,KAAI,SAACC,GACjB,OACE,gCACE,8BAAKnH,eAAImH,EAAM,eAAgB,SAC/B,gCACG,IACD,sBAAKnD,IAAKmD,EAAK8L,mBAEjB,8BAAKjT,eAAImH,EAAM,0BAA2B,SAC1C,8BAAKnH,eAAImH,EAAM,qBAAsB,SACrC,8BAAKnH,eAAImH,EAAM,0BAA2B,SAC1C,8BACE,wBACErH,KAAK,SACLJ,MAAOyH,EAAKqO,SACZe,IAAK,EACL1M,SAAU,SAACC,GACTyL,GAAcpO,EAAK1G,GAAI+V,OAAO1M,EAAEhG,OAAOpE,OACxC,MAGL,8BACE,0BACEiE,UAAU,iBACVE,QAAS,SAACiG,GACRyL,GAAcpO,EAAK1G,GAAI,EACxB,EAJH,UAME,oBAAGkD,UAAU,cAAc,cAAY,SANzC,gBAYP,SAGL,sBAAKA,UAAU,iBAAf,SACE,yBACEA,UAAU,6BACVE,QAAS,WACP8Q,EAAc,EACf,EAJH,4BAWS,GAAdD,GACC,sBAAK/Q,UAAU,YAAf,SACE,eAAC,KAAD,CACEgI,oBAAkB,EAClBC,cAAe,CACbwG,kBAAmB,GACnBqE,iBAAkB,GAClBC,YAAa,MAEfzK,SAAU,SAAC3J,GAAD,OrB7FE,SAACA,GAC7B,IAAIgD,EAAS,CAAC,EAcd,OAbKhD,EAAOoU,cACVpR,EAAOoR,YAAcpL,IAElBhJ,EAAO8P,oBACV9M,EAAO8M,kBAAoB9G,IAExBhJ,EAAOmU,mBACVnR,EAAOmR,iBAAmBnL,IAEvBhJ,EAAOoU,cACVpR,EAAOoR,YAAcpL,IAGhBhG,CACR,CqB6EuCqR,CAAerU,EAA3B,EACV8J,kBAAgB,EAChBtB,SAAUiL,GATZ,SAWG,SAAC1J,GACA,OACE,gBAAC,KAAD,WACE,sBAAK1I,UAAU,MAAf,SACE,sBAAKA,UAAU,YAAf,SACE,eAAC,KAAD,CAAOkI,KAAK,cAAZ,SACG,gBAAGS,EAAH,EAAGA,MAAH,OACC,eAACqH,GAAD,2BACMrH,GADN,IAEET,KAAK,cACL+H,QAASpU,GACTuK,YAAa,uBACbrK,MAAOF,GAAOqU,MACZ,SAACC,GAAD,OACEA,EAAOpU,QACP2M,EAAU/J,OAAOoU,WAFnB,IAIF7M,SAAU,SAACiK,GACTzH,EAAUqB,cACR,cADF,OAEEoG,QAFF,IAEEA,OAFF,EAEEA,EAAQpU,MAEX,EACDoF,MACEuH,EAAUE,QAAQmK,aAClBrK,EAAU/G,OAAOoR,YACbrK,EAAU/G,OAAOoR,YACjB,OArBT,QA4BP,sBAAK/S,UAAU,MAAf,SACE,sBAAKA,UAAU,YAAf,SACE,eAAC,KAAD,CAAOkI,KAAK,oBAAZ,SACG,gBAAGS,EAAH,EAAGA,MAAH,OACC,eAAC1H,GAAD,2BACM0H,GADN,IAEExM,KAAK,OACL6D,UAAU,eACVoG,YAAa,oBACbjF,MACEuH,EAAUE,QAAQ6F,mBAClB/F,EAAU/G,OAAO8M,kBACb/F,EAAU/G,OAAO8M,kBACjB,OAVT,QAiBP,uBAAKzO,UAAU,MAAf,UACE,uBAAKA,UAAU,WAAf,UACE,qDACA,eAAC,KAAD,CAAOkI,KAAK,kBAAZ,SACG,cAAGS,MAAH,OACC,+BACE,eAAC,KAAD,CACEzC,SAAUwK,EACV3U,MAAO0U,EACPwC,QAAS,IAAIzC,QALlB,OAWL,uBAAKxQ,UAAU,WAAf,UACE,mDACA,eAAC,KAAD,CAAOkI,KAAK,gBAAZ,SACG,cAAGS,MAAH,OACC,+BACE,eAAC,KAAD,CACEzC,SAAU0K,EACV7U,MAAO4U,EACPsC,QAASxC,KALd,UAYP,sBAAKzQ,UAAU,MAAf,SACE,sBAAKA,UAAU,YAAf,SACE,eAAC,KAAD,CAAOkI,KAAK,mBAAZ,SACG,gBAAGS,EAAH,EAAGA,MAAH,OACC,eAACzE,GAAD,2BACMyE,GADN,IAEE3I,UAAU,eACVoG,YAAa,mBACbjF,MACEuH,EAAUE,QAAQkK,kBAClBpK,EAAU/G,OAAOmR,iBACbpK,EAAU/G,OAAOmR,iBACjB,OATT,QAiBP,uBAAK9S,UAAU,iBAAf,UACE,yBACEA,UAAU,6BACV7D,KAAK,SACL+D,QAAS,WACP8Q,EAAc,EACf,EALH,2BASA,yBACEhR,UAAU,6BACV7D,KAAK,SAFP,4BAQF,eAAC,GAAD,MAGL,WASb,eAACsE,GAAD,CACEE,OAAQ,uBACRC,KAAMuQ,GACN5Q,MAAO,IACPM,QAAS,kBAAMuQ,IAAe,EAArB,EACT1Q,QACE,sBAAKV,UAAU,aAAf,SACE,eAAC,KAAD,CACEgI,oBAAkB,EAClBC,cAAe,CACbqG,SAAa,OAAJ5O,QAAI,IAAJA,OAAA,EAAAA,EAAM5C,KAAM,GACrBoL,KAAM,GACNC,MAAO,GACPiC,aAAc,GACdoD,SAAU,GACVK,WAAY,GACZJ,WAAY,KACZE,cAAe,GACfjS,SAAU,IAEZ4M,SAAU,SAAC3J,GAAD,OrBzOQ,SAACA,GAC/BhB,QAAQC,IAAIe,GACZ,IAAIgD,EAAS,CAAC,EAgBd,OAfIhD,EAAOe,KAENf,EAAO8O,aACV9L,EAAO8L,WAAa9F,IAEjBhJ,EAAOgP,gBACVhM,EAAOgM,cAAgBhG,IAEpBhJ,EAAOjD,WACViG,EAAOjG,SAAWiM,IAEfhJ,EAAOkP,aACVlM,EAAOkM,WAAalG,IAGfhG,CACR,CqBsNmCuR,CAAiBvU,EAA7B,EACV8J,kBAAgB,EAChBtB,SAAUoL,GAfZ,SAiBG,SAAC7J,GACA,OACE,gBAAC,KAAD,YACIhJ,GACA,uCACE,uBAAKM,UAAU,MAAf,UACE,sBAAKA,UAAU,WAAf,SACE,eAAC,KAAD,CAAOkI,KAAK,OAAZ,SACG,gBAAGS,EAAH,EAAGA,MAAH,OACC,eAAC1H,GAAD,2BACM0H,GADN,IAEExM,KAAK,OACLgF,MACEuH,EAAUE,QAAQV,MAClBQ,EAAU/G,OAAOuG,KACbQ,EAAU/G,OAAOuG,KACjB,KAENlI,UAAU,eACVoG,YAAa,gBAXhB,MAgBL,sBAAKpG,UAAU,WAAf,SACE,eAAC,KAAD,CAAOkI,KAAK,eAAZ,SACG,gBAAGS,EAAH,EAAGA,MAAH,OACC,eAAC1H,GAAD,2BACM0H,GADN,IAEExM,KAAK,OACLgF,MACEuH,EAAUE,QAAQwB,cAClB1B,EAAU/G,OAAOyI,aACb1B,EAAU/G,OAAOyI,aACjB,KAENpK,UAAU,eACVoG,YAAa,mBAXhB,SAiBP,uBAAKpG,UAAU,MAAf,UACE,sBAAKA,UAAU,WAAf,SACE,eAAC,KAAD,CAAOkI,KAAK,QAAZ,SACG,gBAAGS,EAAH,EAAGA,MAAH,OACC,iCACE,eAAC,KAAD,2BACMA,GADN,IAEE8B,QAAQ,KACRtO,KAAK,QACLJ,MAAO2M,EAAU/J,OAAO6O,SACxBtH,SAAU,SAACmC,EAAO5L,GAChBiM,EAAUqB,cACR,WACA1B,GAEFK,EAAUqB,cACR,eACAtN,EAAKiO,SAER,EACDvJ,MACEuH,EAAUE,QAAQP,OAClBK,EAAU/G,OAAO0G,MACbK,EAAU/G,OAAO0G,MACjB,KAENrI,UAAU,eACVoG,YAAY,kBAEbsC,EAAU/G,OAAO0G,OAChB,oBACEtH,MAAO,CACLO,WAAY,EACZC,SAAU,GACVC,MAAO,OAJX,SAOGkH,EAAU/G,OAAO0G,UAlCzB,MAyCL,sBAAKrI,UAAU,WAAf,SACE,eAAC,KAAD,CAAOkI,KAAK,QAAZ,SACG,gBAAGS,EAAH,EAAGA,MAAH,OACC,eAAC1H,GAAD,2BACM0H,GADN,IAEExM,KAAK,QACL6D,UAAU,eACVmB,MACEuH,EAAUE,QAAQT,OAClBO,EAAU/G,OAAOwG,MACbO,EAAU/G,OAAOwG,MACjB,KAEN/B,YAAa,kBAXhB,YAmBX,gDAEA,sBAAKpG,UAAU,MAAf,SACE,sBAAKA,UAAU,YAAf,SACE,eAAC,KAAD,CAAOkI,KAAK,aAAZ,SACG,gBAAGS,EAAH,EAAGA,MAAH,OACC,eAACqH,GAAD,2BACMrH,GADN,IAEET,KAAK,cACL+H,QAASjU,GACToK,YAAa,aACbrK,MAAOF,GAAOqU,MACZ,SAACC,GAAD,OACEA,EAAOpU,QAAU2M,EAAU/J,OAAO8O,UADpC,IAGFvH,SAAU,SAACiK,GACTzH,EAAUqB,cACR,aADF,OAEEoG,QAFF,IAEEA,OAFF,EAEEA,EAAQpU,MAEX,EACDoF,MACEuH,EAAUE,QAAQ6E,YAClB/E,EAAU/G,OAAO8L,WACb/E,EAAU/G,OAAO8L,WACjB,OApBT,QA2BP,uBAAKzN,UAAU,MAAf,UACE,sBAAKA,UAAU,WAAf,SACE,eAAC,KAAD,CAAOkI,KAAK,WAAZ,SACG,gBAAGS,EAAH,EAAGA,MAAH,OACC,eAAC1H,GAAD,2BACM0H,GADN,IAEExM,KAAK,OACL6D,UAAU,eACVoG,YAAa,oBACbjF,MACEuH,EAAUE,QAAQlN,UAClBgN,EAAU/G,OAAOjG,SACbgN,EAAU/G,OAAOjG,SACjB,OAVT,MAgBL,sBAAKsE,UAAU,WAAf,SACE,eAAC,KAAD,CAAOkI,KAAK,gBAAZ,SACG,gBAAGS,EAAH,EAAGA,MAAH,OACC,eAAC1H,GAAD,2BACM0H,GADN,IAEExM,KAAK,OACL6D,UAAU,eACVoG,YAAa,kBACbjF,MACEuH,EAAUE,QAAQ+E,eAClBjF,EAAU/G,OAAOgM,cACbjF,EAAU/G,OAAOgM,cACjB,OAVT,SAiBP,sBAAK3N,UAAU,MAAf,SACE,sBAAKA,UAAU,YAAf,SACE,eAAC,KAAD,CAAOkI,KAAK,aAAZ,SACG,gBAAGS,EAAH,EAAGA,MAAH,OACC,eAACzE,GAAD,2BACMyE,GADN,IAEE3I,UAAU,eACVoG,YAAa,cACbjF,MACEuH,EAAUE,QAAQiF,YAClBnF,EAAU/G,OAAOkM,WACbnF,EAAU/G,OAAOkM,WACjB,OATT,QAiBP,sBAAK7N,UAAU,iBAAf,SACE,yBACEA,UAAU,6BACV7D,KAAK,SAFP,4BAQF,eAAC,GAAD,MAGL,QAKT,eAACsE,GAAD,CACEG,KAAMiQ,EACNnQ,QACE,qCACE,eAAC,GAAD,yBACEyI,SAAO,GACHjI,GAFN,IAGE4E,YAAa,WACXsM,GAAWnB,EACZ,SAMRX,EAAarO,OAAS,IAAM8J,IAAc8E,EACzC,uBAAK7Q,UAAU,WAAf,UACGsQ,EAAarO,OADhB,8BACmD,IACjD,0BACEjC,UAAU,iBACVE,QAAS,WACP8L,GAAa,GACbgF,EAAc,EACf,EALH,UAOE,oBAAG5M,MAAM,0BAPX,0BAYF,uBAAKpE,UAAU,WAAf,UACE,+EAGA,0BACEA,UAAU,iBACVE,QAAS,WACPkR,IAAe,EAChB,EAJH,UAME,oBAAGhN,MAAM,0BANX,uBAWJ,eAACqC,GAAD,CACE7F,KAAMA,EACNF,QACE,qEAC6B,wBAD7B,uCAIF6F,YAAa,WACXxC,GAAQ,GACRtI,OAAOC,SAASyX,QACjB,MAIR,I,mDCntBD/W,KAAMgX,aAAaxW,SAASyW,KAC1B,SAACC,GACC,OAAOA,CACR,IACD,SAACnS,GAMC,OALIA,EAAMvE,SAASQ,OAKZmW,QAAQC,OAAOrS,EACvB,IAGH,IAAMsS,GAAmB,SAAC,GAAD,IAActO,EAAd,EAAGuO,UAAyBC,EAA5B,yBACvB,eAAC,IAAD,2BACMA,GADN,IAEEC,OAAQ,SAAC1S,GACP,IAAM2S,EAAQtW,aAAaC,QAAQ,gBAInC,OAHApB,KAAM0X,SAASnR,QAAQ,kBAAvB,UAA8CkR,GAC9CzX,KAAM0X,SAASnR,QAAQ,gBAAvB,mBAEIkR,EAEA,eAAC,GAAD,UACE,eAAC1O,EAAD,eAAejE,MAKjB,eAAC,IAAD,CACEjB,GAAI,CACFsJ,SAAU,WAKnB,IAvBoB,EA2BnBwK,GAAgB,SAAC,GAAD,IAAc5O,EAAd,EAAGuO,UAAyBC,EAA5B,yBACpB,eAAC,IAAD,2BACMA,GADN,IAEEC,OAAQ,SAAC1S,GACP,IAAM2S,EAAQtW,aAAaC,QAAQ,gBAInC,OAHApB,KAAM0X,SAASnR,QAAQ,kBAAvB,UAA8CkR,GAC9CzX,KAAM0X,SAASnR,QAAQ,gBAAvB,mBAGE,eAAC,GAAD,UACE,eAACwC,EAAD,eAAejE,KAGpB,IAbiB,EAiBhB8S,GAAgB,SAAC,GAAD,IAAc7O,EAAd,EAAGuO,UAAyBC,EAA5B,yBACpB,eAAC,IAAD,2BACMA,GADN,IAEEC,OAAQ,SAAC1S,GACP,OACE,uCACE,eAAC,GAAD,IACA,eAACiE,EAAD,eAAejE,IACf,eAACV,GAAD,MAGL,IAXiB,EAchByT,G,4JACJ,WAEE,OADA7X,KAAM0X,SAASI,QAAU1Y,GAEvB,uCACE,eAAC,IAAD,UACE,gBAAC,IAAD,WACE,eAAC,GAAD,CAAe2Y,OAAK,EAACC,KAAK,IAAIV,UAAWW,KACzC,eAAC,GAAD,CAAeF,OAAK,EAACC,KAAK,SAASV,UAAWnM,KAC9C,eAAC,GAAD,CAAe4M,OAAK,EAACC,KAAK,WAAWV,UAAWY,KAChD,eAAC,GAAD,CAAeH,OAAK,EAACC,KAAK,YAAYV,UAAW3I,KACjD,eAAC,GAAD,CAAeoJ,OAAK,EAACC,KAAK,SAASV,UAAWzI,KAE9C,eAAC,IAAD,CAAOkJ,OAAK,EAACC,KAAK,eAAeV,UAAWa,KAC5C,eAAC,GAAD,CAAeJ,OAAK,EAACC,KAAK,YAAYV,UAAWc,KACjD,eAAC,GAAD,CAAkBL,OAAK,EAACC,KAAK,aAAaV,UAAW5I,KACrD,eAAC,GAAD,CAAkBqJ,OAAK,EAACC,KAAK,WAAWV,UAAWe,KACnD,eAAC,GAAD,CACEN,OAAK,EACLC,KAAK,mBACLV,UAAWgB,KAEb,eAAC,GAAD,CACEP,OAAK,EACLC,KAAK,iBACLV,UAAWiB,KAEb,eAAC,GAAD,CACER,OAAK,EACLC,KAAK,sBACLV,UAAWkB,KAEb,eAAC,GAAD,CACET,OAAK,EACLC,KAAK,uBACLV,UAAWmB,KAEb,eAAC,GAAD,CAAkBV,OAAK,EAACC,KAAK,UAAUV,UAAWoB,KAClD,eAAC,GAAD,CACEX,OAAK,EACLC,KAAK,oBACLV,UAAWqB,KAEb,eAAC,GAAD,CACEZ,OAAK,EACLC,KAAK,uBACLV,UAAWsB,KAEb,eAAC,GAAD,CAAkBb,OAAK,EAACC,KAAK,aAAaV,UAAWuB,KACrD,eAAC,GAAD,CACEd,OAAK,EACLC,KAAK,YACLV,UAAWwB,KAGb,eAAC,GAAD,CAAkBf,OAAK,EAACC,KAAK,cAAcV,UAAWyB,KACtD,eAAC,IAAD,CAAOhB,OAAK,EAACC,KAAK,SAASV,UAAWa,KACtC,eAAC,IAAD,CAAOJ,OAAK,EAACC,KAAK,mBAAmBV,UAAWa,KAChD,eAAC,IAAD,CAAOJ,OAAK,EAACC,KAAK,YAAYV,UAAWa,KAEzC,eAAC,IAAD,CAAOJ,OAAK,EAACC,KAAK,IAAIV,UAAW9H,UAGrC,eAAC,GAAD,IACA,eAAC,KAAD,MAGL,K,GAnEezG,aAsEH8O,MC5KAmB,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBhZ,MAAK,YAAkD,IAA/CiZ,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,EACT,GAEJ,E,kBCEKO,GAAe,CACnBC,eAAe,EACfrT,SAAS,EACTsT,YAAa,CAAC,EACdC,QAAS,GACTrW,KAAM,MCRFkW,GAAe,CACnBpT,SAAS,EACTb,OAAQ,KACRqU,aAAa,EACbC,QAAS,ICkBLL,GAAe,CACnBM,UAAW,GACXzM,UAAW,GACXC,UAAW,GACX2D,SAAU,GACVW,OAAQ,GACRc,MAAO,GACPqH,QAAS,GACTxP,cAAe,GACf4G,QAAS,GACTxK,aAAc,IChCVqT,GAAa,CAACC,MAEdC,GAAWC,aAAgB,CAC/B7W,KHSa,WAAyC,IAA/BD,EAA8B,uDAAtBmW,GAAcY,EAAQ,uCACrD,OAAQA,EAAOra,MACb,KAAKrD,EACH,OAAO,2BACF2G,GADL,IAEEoW,eAAe,IAEnB,KAAK9c,EACH,OAAO6c,GACT,KAAK5c,EACH,OAAO,2BACFyG,GADL,IAEEoW,eAAe,EACfrT,SAAS,GACNgU,EAAOha,SAEd,KAAKvD,EACH,OAAO,2BACFwG,GADL,IAEEoW,eAAe,EACfrT,SAAS,EACT9C,KAAM8W,EAAOha,UAGjB,KAAKlC,EACH,OAAO,2BACFmF,GADL,IAEEoW,eAAe,EACfrT,SAAS,EACTuT,QAASS,EAAOha,UAEpB,KAAKtD,EACH,OAAO,2BACFuG,GADL,IAEE+C,SAAS,IAEb,KAAKpJ,EACH,IAAM0V,EAAUrP,EAAVqP,MACF2H,EAAa,aAAI3H,GAAO4H,QAAO,SAAClT,GAClC,OAAOA,EAAKmT,MAAQH,EAAOha,OAC5B,IACD,OAAO,2BACFiD,GADL,IAEEqP,MAAO2H,IAEX,KAAKtd,EACG2V,EAAUrP,EAAVqP,MAEF2H,EAAa,aAAI3H,GAAOvL,KAAI,SAACC,GAI/B,OAHIA,EAAKmT,KAAOH,EAAOha,UACrBgH,EAAKoT,WAAapT,EAAKoT,WAElBpT,CACR,IAED,OAAO,eACF/D,GAEP,QACE,OAAOA,E,EGnEX8C,GFIa,WAAyC,IAA/B9C,EAA8B,uDAAtBmW,GAAcY,EAAQ,uCACrD,OAAQA,EAAOra,MACb,KAAK9C,EACH,OAAO,2BACFoG,GADL,IAEE+C,SAAS,EACTb,OAAQ6U,EAAOha,UAEnB,KAAKjD,EACH,OAAO,2BACFkG,GADL,IAEE+C,SAAS,EACTb,OAAQ,OAEZ,KAAKrI,EACH,OAAO,2BACFmG,GADL,IAEE+C,SAAS,IAEb,KAAKhJ,EACH,OAAO,2BACFiG,GADL,IAEE+C,SAAS,IAEb,KAAK/I,EACH,OAAO,2BACFgG,GADL,IAEEuW,YAAaQ,EAAOha,UAExB,KAAK9C,EACH,OAAO,2BACF+F,GADL,IAEEwW,QAASO,EAAOha,UAEpB,QACE,OAAOiD,E,EEtCXE,OD+Ba,WAAyC,IAA/BF,EAA8B,uDAAtBmW,GAAcY,EAAQ,uCACrD,OAAQA,EAAOra,MACb,KAAKxC,EACH,OAAO,2BACF8F,GADL,IAEEgK,UAAW+M,EAAOha,UAEtB,KAAK5C,EACH,OAAO,2BACF6F,GADL,IAEEiK,UAAW8M,EAAOha,UAEtB,KAAK3C,EACH,OAAO,2BACF4F,GADL,IAEEgK,UAAU,CAAE+M,EAAOha,QAAQC,MAAlB,oBAA2BgD,EAAMgK,cAE9C,KAAKrP,EACH,IAAMqP,EAAchK,EAAdgK,UACFoN,EAAiBpN,EAAUlG,KAAI,SAACC,GAClC,OAAIA,EAAK1G,IAAM0Z,EAAOha,QAAQM,GACrB0Z,EAAOha,QAETgH,CACR,IACD,OAAO,2BACF/D,GADL,IAEEgK,UAAWoN,IAEf,KAAK/c,EACH,IAAMgd,EAAarX,EAAbqX,SACFC,EAAiBD,EAASJ,QAC5B,SAAClT,GAAD,OAAUA,EAAKmT,MAAQH,EAAOha,OAA9B,IAEF,OAAO,2BACFiD,GADL,IAEEqX,SAAUC,IAGd,KAAK/c,EACH,OAAO,2BACFyF,GADL,IAEE4N,SAAUmJ,EAAOha,UAErB,KAAKvC,EACH,OAAO,2BACFwF,GADL,IAEEuX,aAAa,CAAER,EAAOha,SAAV,oBAAsBiD,EAAMuX,iBAG5C,KAAK3c,EACH,IACI4c,EADmBxX,EAAjBuX,aACiCzT,KAAI,SAACC,GAC1C,OAAIA,EAAKmT,KAAOH,EAAOha,QAAQma,IACtBH,EAAOha,QAETgH,CACR,IACD,OAAO,2BACF/D,GADL,IAEEuX,aAAcC,IAElB,KAAK/c,EAEC+c,EADmBxX,EAAjBuX,aACiCN,QACrC,SAAClT,GAAD,OAAUA,EAAKmT,MAAQH,EAAOha,OAA9B,IAEF,OAAO,2BACFiD,GADL,IAEEuX,aAAcC,IAGlB,KAAKld,EACH,IAAMmd,EAAkBzX,EAAlByX,cACFC,EAAuBD,EAAcR,QACvC,SAAClT,GAAD,OAAUA,EAAKmT,MAAQH,EAAOha,OAA9B,IAEF,OAAO,2BACFiD,GADL,IAEEyX,cAAeC,IAGnB,KAAKhd,EACH,OAAO,2BACFsF,GADL,IAEEqP,MAAO0H,EAAOha,UAElB,KAAKjC,EACH,OAAO,2BACFkF,GADL,IAEE+M,SAAUgK,EAAOha,UAErB,KAAKhC,EACH,IACc4c,EACV3X,EADF+M,SAAY4K,aAGd,OAAO,2BACF3X,GADL,IAEE+M,SAAU,CAAE4K,aAAa,CAAEZ,EAAOha,SAAV,oBAAsB4a,OAGlD,KAAK3c,EACH,IAGI4c,GAFUD,EACV3X,EADF+M,SAAY4K,cAEqB7T,KAAI,SAACC,GACtC,OAAIA,EAAK1G,IAAM0Z,EAAOha,QAAQM,GACrB0Z,EAAOha,QAETgH,CACR,IACD,OAAO,2BACF/D,GADL,IAEEyN,MAAO,CAAEkK,aAAcC,KAE3B,KAAKpc,GACH,OAAO,2BACFwE,GADL,IAEE8P,SAAUiH,EAAOha,UAErB,KAAKtB,GACH,IACcoc,EACV7X,EADF8P,SAAY+H,aAGd,OAAO,2BACF7X,GADL,IAEE8P,SAAU,CAAE+H,aAAa,CAAEd,EAAOha,SAAV,oBAAsB8a,OAGlD,KAAKnc,GAICkc,GAFUC,EACV7X,EADF8P,SAAY+H,cAEqB/T,KAAI,SAACC,GACtC,OAAIA,EAAK1G,IAAM0Z,EAAOha,QAAQM,GACrB0Z,EAAOha,QAETgH,CACR,IACD,OAAO,2BACF/D,GADL,IAEE8P,SAAU,CAAE+H,aAAcD,KAE9B,KAAK3c,EACH,OAAO,2BACF+E,GADL,IAEEyN,MAAOsJ,EAAOha,UAGlB,KAAK7B,EACH,IACW4c,EACP9X,EADFyN,MAASqK,SAGX,OAAO,2BACF9X,GADL,IAEEyN,MAAO,CAAEqK,SAAS,CAAEf,EAAOha,SAAV,oBAAsB+a,OAG3C,KAAK3c,EACH,IAGI4c,GAFOD,EACP9X,EADFyN,MAASqK,UAEiBhU,KAAI,SAACC,GAC/B,OAAIA,EAAK1G,IAAM0Z,EAAOha,QAAQM,GACrB0Z,EAAOha,QAETgH,CACR,IACD,OAAO,2BACF/D,GADL,IAEEyN,MAAO,CAAEqK,SAAUC,KAEvB,KAAK3c,EACH,OAAO,2BACF4E,GADL,IAEEiH,SAAU8P,EAAOha,UAErB,KAAK1B,EACH,IACc2c,EACVhY,EADFiH,SAAY+Q,aAGd,OAAO,2BACFhY,GADL,IAEEiH,SAAU,CAAE+Q,aAAa,CAAEjB,EAAOha,SAAV,oBAAsBib,OAGlD,KAAK1c,EAICyc,GAFUC,EACVhY,EADFiH,SAAY+Q,cAEkBlU,KAAI,SAACC,GACnC,OAAIA,EAAK1G,IAAM0Z,EAAOha,QAAQM,GACrB0Z,EAAOha,QAETgH,CACR,IACD,OAAO,2BACF/D,GADL,IAEEiH,SAAU,CAAE+Q,aAAcD,KAE9B,KAAKxc,EACH,OAAO,2BACFyE,GADL,IAEEkH,cAAe6P,EAAOha,UAE1B,KAAKpB,GACH,OAAO,2BACFqE,GADL,IAEEuO,OAAQwI,EAAOha,UAEnB,KAAKnB,GACH,IACYqc,EACRjY,EADFuO,OAAU0J,UAERC,EAAeD,EAAUnU,KAAI,SAACC,GAChC,OAAIA,EAAK1G,IAAM0Z,EAAOha,QAAQkS,SACrB,2BAAKlL,GAAZ,IAAkBpG,OAAQoZ,EAAOha,QAAQY,SAEpCoG,CACR,IACD,OAAO,2BACF/D,GADL,IAEEuO,OAAQ,CAAE0J,UAAWC,KAEzB,KAAKrc,GACH,OAAO,2BACFmE,GADL,IAEE8N,QAASiJ,EAAOha,UAEpB,KAAKjB,GACH,OAAO,2BACFkE,GADL,IAEEsD,aAAcyT,EAAOha,UAEzB,QACE,OAAOiD,E,ICtQPmY,IAJc,kBAAXnc,QAAuBA,OAAOoc,qCACjCpc,OAAOoc,qCAAqC,CAAC,GAC7CC,MAE4BC,KAAe,WAAf,EAAmB3B,KAGtC4B,GAFDC,aAAY3B,GAhBL,CAAC,EAgB4BsB,I,OCdlDM,IAAStE,OACP,eAAC,IAAD,CAAUoE,MAAOA,GAAjB,SACE,eAAC,GAAD,MAEF5V,SAAS+V,eAAe,SAK1B/C,I","file":"static/js/main.04f87259.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/hero_bg.86b595d4.jpg\";","// User reducer types\nexport const SET_AUTHENTICATED = \"SET_AUTHENTICATED\";\nexport const SET_UNAUTHENTICATED = \"SET_UNAUTHENTICATED\";\nexport const SET_USER = \"SET_USER\";\nexport const SET_USERS = \"SET_USERS\";\nexport const LOADING_USER = \"LOADING_USER\";\nexport const MARK_NOTIFICATIONS_READ = \"MARK_NOTIFICATIONS_READ\";\nexport const UPDATE_BLOCK = \"UPDATE_BLOCK\";\nexport const DELETE_USER = \"DELETE_USER\";\nexport const SET_SINGLE_USERS = \"SET_SINGLE_USERS\";\n\n// UI reducer types\nexport const SET_ERRORS = \"SET_ERRORS\";\nexport const LOADING_UI = \"LOADING_UI\";\nexport const CLEAR_ERRORS = \"CLEAR_ERRORS\";\nexport const LOADING_DATA = \"LOADING_DATA\";\nexport const STOP_LOADING_UI = \"STOP_LOADING_UI\";\nexport const TOGGLE_SIDEBAR = \"TOGGLE_SIDEBAR\";\nexport const SHOW_SUCCESS = \"SHOW_SUCCESS\";\n\n// Data reducer types\nexport const GET_COUNTRY = \"GET_COUNTRY\";\nexport const GET_LOCATIONS = \"GET_LOCATIONS\";\nexport const ADD_COUNTRY = \"ADD_COUNTRY\";\nexport const DELETE_PASSION = \"DELETE_PASSION\";\nexport const DELETE_SUBSCRIPTION = \"DELETE_SUBSCRIPTION\";\nexport const GET_CONTACT = \"GET_CONTACT\";\nexport const ADD_ADVERTISMENT = \"ADD_ADVERTISMENT\";\nexport const DELETE_ADVERTISMENT = \"DELETE_ADVERTISMENT\";\nexport const GET_USERS = \"GET_USERS\";\nexport const EDIT_COUNTRY = \"EDIT_COUNTRY\";\nexport const EDIT_ADVERTISMENT = \"EDIT_ADVERTISMENT\";\nexport const GET_MATCHES = \"GET_MATCHES\";\nexport const GET_DASHBOARD = \"GET_DASHBOARD\";\nexport const GET_REPORT = \"GET_REPORT\";\nexport const GET_CAPACITY = \"GET_CAPACITY\";\nexport const ADD_CAPACITY = \"ADD_CAPACITY\";\nexport const EDIT_CAPACITY = \"EDIT_CAPACITY\";\nexport const GET_TYPE = \"GET_TYPE\";\nexport const ADD_TYPE = \"ADD_TYPE\";\nexport const EDIT_TYPE = \"EDIT_TYPE\";\nexport const GET_CATEGORY = \"GET_CATEGORY\";\nexport const ADD_CATEGORY = \"ADD_CATEGORY\";\nexport const EDIT_CATEGORY = \"EDIT_CATEGORY\";\nexport const SELECT_IMAGE = \"SELECT_IMAGE\";\nexport const GET_MACHINES = \"GET_MACHINES\";\nexport const ADD_MACHINE = \"ADD_MACHINE\";\nexport const EDIT_MACHINE = \"EDIT_MACHINE\";\nexport const GET_ORDERS = \"GET_ORDERS\";\nexport const UPDATE_ORDERS_STATUS = \"UPDATE_ORDERS_STATUS\";\nexport const GET_INQUIRY = \"GET_INQUIRY\";\nexport const GET_NOTIFICATION = \"GET_NOTIFICATION\";\n","export const API_URL = window.location.href.includes(\"localhost\")\n  ? \"http://3.212.76.159:3000/api\"\n  : \"/api\";\nexport const ItemperPage = 20;\n\nexport const scopes = [\n  {\n    label: \"Sand\",\n    value: \"Sand\",\n  },\n  {\n    label: \"Rock\",\n    value: \"Rock\",\n  },\n  {\n    label: \"Sabkha\",\n    value: \"Sabkha\",\n  },\n];\n\nexport const priceType = [\n  {\n    label: \"Monthly\",\n    value: \"Monthly\",\n  },\n  {\n    label: \"Weekly\",\n    value: \"Weekly\",\n  },\n  {\n    label: \"Daily\",\n    value: \"Daily\",\n  },\n];\n","import {\n  GET_COUNTRY,\n  SET_ERRORS,\n  CLEAR_ERRORS,\n  GET_LOCATIONS,\n  ADD_COUNTRY,\n  LOADING_UI,\n  GET_CONTACT,\n  GET_USERS,\n  GET_CAPACITY,\n  EDIT_COUNTRY,\n  ADD_CAPACITY,\n  EDIT_CAPACITY,\n  GET_TYPE,\n  ADD_TYPE,\n  EDIT_TYPE,\n  GET_CATEGORY,\n  ADD_CATEGORY,\n  EDIT_CATEGORY,\n  SELECT_IMAGE,\n  GET_MACHINES,\n  ADD_MACHINE,\n  EDIT_MACHINE,\n  GET_ORDERS,\n  UPDATE_ORDERS_STATUS,\n  GET_INQUIRY,\n  GET_NOTIFICATION\n} from \"../types\";\n\nimport axios from \"axios\";\nimport { toast } from \"react-toastify\";\nimport { ItemperPage } from \"../../utils/constants\";\nexport const getCountries = () => (dispatch) => {\n  dispatch({ type: LOADING_UI });\n\n  axios\n    .get(\"/country/get-country\")\n    .then((res) => {\n      dispatch({\n        type: GET_COUNTRY,\n        payload: res.data.data,\n      });\n\n      dispatch({ type: CLEAR_ERRORS });\n    })\n\n    .catch((err) => {\n      dispatch({\n        type: SET_ERRORS,\n        payload: err.response ? err.response.data : err.response,\n      });\n    });\n};\n\nexport const addContact = (values) => (dispatch) => {\n  dispatch({ type: LOADING_UI });\n  axios\n    .post(\"/user/contactUs\", values)\n    .then((res) => {\n      dispatch({ type: CLEAR_ERRORS });\n      return true;\n    })\n\n    .catch((err) => {\n      dispatch({\n        type: SET_ERRORS,\n        payload: err.response ? err.response.data : err.response,\n      });\n      toast.error(`Someting Went Wrong`, {\n        position: toast.POSITION.TOP_RIGHT,\n      });\n      return false;\n    });\n};\n\nexport const getLocations = (id) => (dispatch) => {\n  dispatch({ type: LOADING_UI });\n\n  axios\n    .get(\"/country/get-location?search=\" + id)\n    .then((res) => {\n      dispatch({\n        type: GET_LOCATIONS,\n        payload: res.data.data,\n      });\n\n      dispatch({ type: CLEAR_ERRORS });\n    })\n\n    .catch((err) => {\n      dispatch({\n        type: SET_ERRORS,\n        payload: err.response ? err.response.data : err.response,\n      });\n    });\n};\n\nexport const addCountry = (values) => (dispatch) => {\n  dispatch({ type: LOADING_UI });\n\n  axios\n    .post(\"/country/save\", values)\n    .then((res) => {\n      toast.success(`${res.data.message}`, {\n        position: toast.POSITION.TOP_RIGHT,\n      });\n      dispatch({\n        type: ADD_COUNTRY,\n        payload: res.data.data,\n      });\n      dispatch({ type: CLEAR_ERRORS });\n    })\n\n    .catch((err) => {\n      dispatch({\n        type: SET_ERRORS,\n        payload: err.response ? err.response.data : err.response,\n      });\n    });\n};\n\nexport const editCountry = (values) => (dispatch) => {\n  dispatch({ type: LOADING_UI });\n\n  axios\n    .post(\"/country/update\", values)\n    .then((res) => {\n      toast.success(`${res.data.message}`, {\n        position: toast.POSITION.TOP_RIGHT,\n      });\n      dispatch({\n        type: EDIT_COUNTRY,\n        payload: res.data.data,\n      });\n      dispatch({ type: CLEAR_ERRORS });\n    })\n\n    .catch((err) => {\n      dispatch({\n        type: SET_ERRORS,\n        payload: err.response ? err.response.data : err.response,\n      });\n    });\n};\n\nexport const getContact =\n  (page = 0, search) =>\n  (dispatch) => {\n    dispatch({ type: LOADING_UI });\n\n    axios\n      .get(\n        \"/user/contactUsLists?page=\" +\n          page +\n          \"&size=\" +\n          ItemperPage +\n          \"&search=\" +\n          search\n      )\n      .then((res) => {\n        console.log(res);\n        dispatch({\n          type: GET_CONTACT,\n          payload: res.data.data,\n        });\n\n        dispatch({ type: CLEAR_ERRORS });\n      })\n\n      .catch((err) => {\n        dispatch({\n          type: SET_ERRORS,\n          payload: err.response ? err.response.data : err.response,\n        });\n      });\n  };\n\n\nexport const getUsers =\n  (page = 0, search) =>\n  (dispatch) => {\n    dispatch({ type: LOADING_UI });\n\n    axios\n      .get(\n        \"/user/usersLists?page=\" +\n          page +\n          \"&size=\" +\n          ItemperPage +\n          \"&search=\" +\n          search\n      )\n      .then((res) => {\n        dispatch({\n          type: GET_USERS,\n          payload: res.data.data,\n        });\n\n        dispatch({ type: CLEAR_ERRORS });\n      })\n\n      .catch((err) => {\n        dispatch({\n          type: SET_ERRORS,\n          payload: err.response ? err.response.data : err.response,\n        });\n      });\n  };\n\nexport const getCapacity =\n  (page = 0, search = \"\") =>\n  (dispatch) => {\n    dispatch({ type: LOADING_UI });\n\n    axios\n      .get(\n        \"/machine/get-capacity?page=\" +\n          page +\n          \"&size=\" +\n          ItemperPage +\n          \"&search=\" +\n          search\n      )\n      .then((res) => {\n        dispatch({\n          type: GET_CAPACITY,\n          payload: res.data.data,\n        });\n\n        dispatch({ type: CLEAR_ERRORS });\n      })\n\n      .catch((err) => {\n        dispatch({\n          type: SET_ERRORS,\n          payload: err.response ? err.response.data : err.response,\n        });\n      });\n  };\n\nexport const addCapcity = (values) => (dispatch) => {\n  dispatch({ type: LOADING_UI });\n\n  axios\n    .post(\"/machine/save-capacity\", values)\n    .then((res) => {\n      toast.success(`${res.data.message}`, {\n        position: toast.POSITION.TOP_RIGHT,\n      });\n      console.log(res.data.data);\n      dispatch({\n        type: ADD_CAPACITY,\n        payload: res.data.data,\n      });\n      dispatch({ type: CLEAR_ERRORS });\n    })\n\n    .catch((err) => {\n      dispatch({\n        type: SET_ERRORS,\n        payload: err.response ? err.response.data : err.response,\n      });\n    });\n};\n\nexport const editCapacity = (values) => (dispatch) => {\n  dispatch({ type: LOADING_UI });\n\n  axios\n    .post(\"/machine/update-capacity\", values)\n    .then((res) => {\n      toast.success(`${res.data.message}`, {\n        position: toast.POSITION.TOP_RIGHT,\n      });\n      dispatch({\n        type: EDIT_CAPACITY,\n        payload: values,\n      });\n      dispatch({ type: CLEAR_ERRORS });\n    })\n\n    .catch((err) => {\n      dispatch({\n        type: SET_ERRORS,\n        payload: err.response ? err.response.data : err.response,\n      });\n    });\n};\n\nexport const getType =\n  (page = 0, search = \"\") =>\n  (dispatch) => {\n    dispatch({ type: LOADING_UI });\n\n    axios\n      .get(\n        \"/machine/get-type?page=\" +\n          page +\n          \"&size=\" +\n          ItemperPage +\n          \"&search=\" +\n          search\n      )\n      .then((res) => {\n        dispatch({\n          type: GET_TYPE,\n          payload: res.data.data,\n        });\n\n        dispatch({ type: CLEAR_ERRORS });\n      })\n\n      .catch((err) => {\n        dispatch({\n          type: SET_ERRORS,\n          payload: err.response ? err.response.data : err.response,\n        });\n      });\n  };\n\nexport const addType = (values) => (dispatch) => {\n  dispatch({ type: LOADING_UI });\n\n  axios\n    .post(\"/machine/save-type\", values)\n    .then((res) => {\n      toast.success(`${res.data.message}`, {\n        position: toast.POSITION.TOP_RIGHT,\n      });\n      console.log(res.data.data);\n      dispatch({\n        type: ADD_TYPE,\n        payload: res.data.data,\n      });\n\n      dispatch({ type: CLEAR_ERRORS });\n    })\n\n    .catch((err) => {\n      dispatch({\n        type: SET_ERRORS,\n        payload: err.response ? err.response.data : err.response,\n      });\n    });\n};\n\nexport const editType = (values) => (dispatch) => {\n  dispatch({ type: LOADING_UI });\n\n  axios\n    .post(\"/machine/update-type\", values)\n    .then((res) => {\n      toast.success(`${res.data.message}`, {\n        position: toast.POSITION.TOP_RIGHT,\n      });\n      dispatch({\n        type: EDIT_TYPE,\n        payload: values,\n      });\n      dispatch({ type: CLEAR_ERRORS });\n    })\n\n    .catch((err) => {\n      dispatch({\n        type: SET_ERRORS,\n        payload: err.response ? err.response.data : err.response,\n      });\n    });\n};\n\nexport const getCategory =\n  (page = 0, search = \"\", status) =>\n  (dispatch) => {\n    dispatch({ type: LOADING_UI });\n    var url =\n      \"/machine/get-category?page=\" +\n      page +\n      \"&size=\" +\n      ItemperPage +\n      \"&search=\" +\n      search;\n    if (status) {\n      url = url + \"&status=\" + status;\n    }\n    axios\n      .get(url)\n      .then((res) => {\n        dispatch({\n          type: GET_CATEGORY,\n          payload: res.data.data,\n        });\n        dispatch({ type: CLEAR_ERRORS });\n        return res;\n      })\n\n      .catch((err) => {\n        dispatch({\n          type: SET_ERRORS,\n          payload: err.response ? err.response.data : err.response,\n        });\n      });\n  };\n\nexport const addCategory = (values) => (dispatch) => {\n  dispatch({ type: LOADING_UI });\n\n  axios\n    .post(\"/machine/save-category\", values)\n    .then((res) => {\n      toast.success(`${res.data.message}`, {\n        position: toast.POSITION.TOP_RIGHT,\n      });\n      console.log(res.data.data);\n      dispatch({\n        type: ADD_CATEGORY,\n        payload: res.data.data,\n      });\n      dispatch({ type: CLEAR_ERRORS });\n    })\n\n    .catch((err) => {\n      dispatch({\n        type: SET_ERRORS,\n        payload: err.response ? err.response.data : err.response,\n      });\n    });\n};\n\nexport const editCategory = (values) => (dispatch) => {\n  dispatch({ type: LOADING_UI });\n\n  axios\n    .post(\"/machine/update-category\", values)\n    .then((res) => {\n      toast.success(`${res.data.message}`, {\n        position: toast.POSITION.TOP_RIGHT,\n      });\n      dispatch({\n        type: EDIT_CATEGORY,\n        payload: values,\n      });\n      dispatch({ type: CLEAR_ERRORS });\n    })\n\n    .catch((err) => {\n      dispatch({\n        type: SET_ERRORS,\n        payload: err.response ? err.response.data : err.response,\n      });\n    });\n};\n\nexport const getMachines =\n  (page = 0, search = \"\", status) =>\n  (dispatch) => {\n    dispatch({ type: LOADING_UI });\n    var url =\n      \"/product/product-lists?page=\" +\n      page +\n      \"&size=\" +\n      ItemperPage +\n      \"&search=\" +\n      search +\n      \"&role=\" +\n      localStorage.getItem(\"role_id\") +\n      \"&user_id=\" +\n      JSON.parse(localStorage.getItem(\"user_data\"))?.id;\n    if (status) {\n      url = url + \"&status=\" + status;\n    }\n\n    axios\n      .get(url)\n      .then((res) => {\n        console.log(res.data);\n        dispatch({\n          type: GET_MACHINES,\n          payload: res.data.data,\n        });\n        dispatch({ type: CLEAR_ERRORS });\n      })\n\n      .catch((err) => {\n        dispatch({\n          type: SET_ERRORS,\n          payload: err.response ? err.response.data : err.response,\n        });\n      });\n  };\n\nexport const addMachine = (values) => (dispatch) => {\n  dispatch({ type: LOADING_UI });\n\n  axios\n    .post(\"/product/add-product\", values)\n    .then((res) => {\n      toast.success(`${res.data.message}`, {\n        position: toast.POSITION.TOP_RIGHT,\n      });\n      console.log(res.data.data);\n      dispatch({\n        type: ADD_MACHINE,\n        payload: res.data.data,\n      });\n      dispatch({ type: CLEAR_ERRORS });\n    })\n\n    .catch((err) => {\n      dispatch({\n        type: SET_ERRORS,\n        payload: err.response ? err.response.data : err.response,\n      });\n    });\n};\n\nexport const editMachine = (values) => (dispatch) => {\n  dispatch({ type: LOADING_UI });\n\n  axios\n    .post(\"/product/update-product\", values)\n    .then((res) => {\n      toast.success(`${res.data.message}`, {\n        position: toast.POSITION.TOP_RIGHT,\n      });\n      console.log(values);\n      dispatch({\n        type: EDIT_MACHINE,\n        payload: { ...res.data.data, machine_image: values.machine_image },\n      });\n      dispatch({ type: CLEAR_ERRORS });\n    })\n\n    .catch((err) => {\n      dispatch({\n        type: SET_ERRORS,\n        payload: err.response ? err.response.data : err.response,\n      });\n    });\n};\n\nexport const uploadImage = (file) => async (dispatch) => {\n  dispatch({ type: LOADING_UI });\n  var formData = new FormData();\n  formData.append(\"file\", file);\n  await axios\n    .post(\"/machine/upload-image\", formData)\n    .then((res) => {\n      toast.success(`${res.data.message}`, {\n        position: toast.POSITION.TOP_RIGHT,\n      });\n      dispatch({\n        type: SELECT_IMAGE,\n        payload: res.data.data.file,\n      });\n      dispatch({ type: CLEAR_ERRORS });\n      return res;\n    })\n\n    .catch((err) => {\n      dispatch({\n        type: SET_ERRORS,\n        payload: err.response ? err.response.data : err.response,\n      });\n    });\n};\n\nexport const selectImage = (data) => async (dispatch) => {\n  dispatch({\n    type: SELECT_IMAGE,\n    payload: data,\n  });\n};\n\nexport const saveOrders = (values, setShow) => (dispatch) => {\n  dispatch({ type: LOADING_UI });\n  const token = localStorage.getItem(\"access_token\");\n  const headers = {\n    \"Content-Type\": \"application/json\",\n    \"x-access-token\": token,\n  };\n  axios\n    .post(\"/machine/save-order\", values, {\n      headers: headers,\n    })\n    .then((res) => {\n      localStorage.removeItem(\"cart_items\");\n      dispatch({ type: CLEAR_ERRORS });\n      setShow(true);\n    })\n    .catch((err) => {\n      dispatch({\n        type: SET_ERRORS,\n        payload: err.response ? err.response.data : err.response,\n      });\n    });\n};\n\nexport const getOrders = (values) => (dispatch) => {\n  dispatch({ type: LOADING_UI });\n\n  axios\n    .post(\"/machine/orders\", values)\n    .then((res) => {\n      dispatch({\n        type: GET_ORDERS,\n        payload: res.data.data,\n      });\n\n      dispatch({ type: CLEAR_ERRORS });\n    })\n\n    .catch((err) => {\n      dispatch({\n        type: SET_ERRORS,\n        payload: err.response ? err.response.data : err.response,\n      });\n    });\n};\n\nexport const updateStatus = (values) => (dispatch) => {\n  dispatch({ type: LOADING_UI });\n\n  axios\n    .put(\"/machine/change-order-status\", values)\n    .then((res) => {\n      toast.success(`${res.data.message}`, {\n        position: toast.POSITION.TOP_RIGHT,\n      });\n      dispatch({\n        type: UPDATE_ORDERS_STATUS,\n        payload: values,\n      });\n      dispatch({ type: CLEAR_ERRORS });\n    })\n\n    .catch((err) => {\n      dispatch({\n        type: SET_ERRORS,\n        payload: err.response ? err.response.data : err.response,\n      });\n    });\n};\n\nexport const makeEnquiry = (values) => (dispatch) => {\n  dispatch({ type: LOADING_UI });\n  const token = localStorage.getItem(\"access_token\");\n  const headers = {\n    \"Content-Type\": \"application/json\",\n    \"x-access-token\": token,\n  };\n  axios\n    .post(\"/product/inquiry\", values, {\n      headers: headers,\n    })\n    .then((res) => {\n      toast.success(`${res.data.message}`, {\n        position: toast.POSITION.TOP_RIGHT,\n      });\n      localStorage.removeItem(\"cart_items\");\n      dispatch({ type: CLEAR_ERRORS });\n    })\n\n    .catch((err) => {\n      dispatch({\n        type: SET_ERRORS,\n        payload: err.response ? err.response.data : err.response,\n      });\n    });\n};\n\nexport const getInquiry = (values) => (dispatch) => {\n  dispatch({ type: LOADING_UI });\n\n  axios\n    .post(\"/product/inquiry/list\", values)\n    .then((res) => {\n      dispatch({\n        type: GET_INQUIRY,\n        payload: res.data.data,\n      });\n\n      dispatch({ type: CLEAR_ERRORS });\n    })\n\n    .catch((err) => {\n      dispatch({\n        type: SET_ERRORS,\n        payload: err.response ? err.response.data : err.response,\n      });\n    });\n};\n\n\nexport const getNotification =\n  () =>\n  (dispatch) => {\n    \n\n    axios\n      .get(\n        \"/notification/notification-list\"\n      )\n      .then((res) => {\n        dispatch({\n          type: GET_NOTIFICATION,\n          payload: res.data.data,\n        });\n\n        dispatch({ type: CLEAR_ERRORS });\n      })\n\n      .catch((err) => {\n        dispatch({\n          type: SET_ERRORS,\n          payload: err.response ? err.response.data : err.response,\n        });\n      });\n  };\n\n  export const updateNotification = (type,history) => (dispatch) => {\n    dispatch({ type: LOADING_UI });\n    const token = localStorage.getItem(\"access_token\");\n    const headers = {\n      \"Content-Type\": \"application/json\",\n      \"x-access-token\": token,\n    };\n    axios\n      .put(\"/notification/update-notification-status\", {\n        notification_type:type\n    }, {\n        headers: headers,\n      })\n      .then((res) => {\n        dispatch({ type: CLEAR_ERRORS });\n        if(type === 'Register'){\n          history.push('/users-list');\n        }\n        if(type === 'Order'){\n          history.push('/orders');\n        }\n        if(type === 'Register'){\n          history.push('/inquiries');\n        }\n        if(type === 'Machines'){\n          history.push('/machines');\n        }\n      })\n  \n      .catch((err) => {\n        dispatch({\n          type: SET_ERRORS,\n          payload: err.response ? err.response.data : err.response,\n        });\n      });\n  };","export default __webpack_public_path__ + \"static/media/logo.61f4974d.jpeg\";","import {\n  SET_USER,\n  SET_USERS,\n  SET_ERRORS,\n  CLEAR_ERRORS,\n  LOADING_UI,\n  SET_UNAUTHENTICATED,\n} from \"../types\";\n\nimport axios from \"axios\";\nimport { toast } from \"react-toastify\";\n\nexport const loginUser =\n  (userData, history, isPopup, handleClick) => (dispatch) => {\n    dispatch({ type: LOADING_UI });\n\n    axios\n      .post(\"/user/signIn\", userData)\n      .then((res) => {\n        setAuthorizationHeader({ ...res.data, role_id: res.data.data.role_id });\n\n        if (!isPopup) {\n          if (res.data.data.role_id == \"1\") {\n            history.push(\"/customer-orders\");\n          } else {\n            history.push(\"/orders\");\n          }\n        } else {\n          handleClick();\n        }\n        dispatch({ type: CLEAR_ERRORS });\n      })\n\n      .catch((err) => {\n        var errors = JSON.parse(err.response.data.error).errors;\n        dispatch({\n          type: SET_ERRORS,\n          payload: err.response ? err.response.data : err.response,\n        });\n        console.log(err);\n        toast.error(`${errors[0].msg}`, {\n          position: toast.POSITION.TOP_RIGHT,\n        });\n      });\n  };\n\nexport const updateProfile = (userData, history) => (dispatch) => {\n  dispatch({ type: LOADING_UI });\n\n  axios\n    .post(\"/user/updateProfile\", userData)\n    .then((res) => {\n      dispatch({\n        type: SET_USERS,\n        payload: res.data.data,\n      });\n      toast.success(`${res.data.message}`, {\n        position: toast.POSITION.TOP_RIGHT,\n      });\n      dispatch({ type: CLEAR_ERRORS });\n    })\n\n    .catch((err) => {\n      var errors = JSON.parse(err.response.data.error).errors;\n      dispatch({\n        type: SET_ERRORS,\n        payload: err.response ? err.response.data : err.response,\n      });\n      console.log(err);\n      toast.error(`${errors[0].msg}`, {\n        position: toast.POSITION.TOP_RIGHT,\n      });\n    });\n};\nexport const signinUser =\n  (userData, history, isPopup, handleClick) => (dispatch) => {\n    dispatch({ type: LOADING_UI });\n\n    axios\n      .post(\"/user/signup\", userData)\n      .then((res) => {\n        setAuthorizationHeader({ ...res.data, role_id: userData.role_id });\n        dispatch({\n          type: SET_USERS,\n          payload: res.data.data,\n        });\n        if (!isPopup) {\n          history.push(\"/login?signin=1\");\n        } else {\n          handleClick();\n        }\n        dispatch({ type: CLEAR_ERRORS });\n      })\n\n      .catch((err) => {\n        var errors = JSON.parse(err.response.data.error).errors;\n        dispatch({\n          type: SET_ERRORS,\n          payload: err.response ? err.response.data : err.response,\n        });\n        console.log(err);\n        toast.error(`${errors[0].msg}`, {\n          position: toast.POSITION.TOP_RIGHT,\n        });\n      });\n  };\n\nexport const logoutUser = (history) => (dispatch) => {\n  dispatch({ type: LOADING_UI });\n\n  axios\n    .post(\"/user/logout\")\n    .then((res) => {\n      localStorage.removeItem(\"access_token\");\n      localStorage.removeItem(\"role_id\");\n      history.push(\"/login\");\n      dispatch({ type: CLEAR_ERRORS });\n      dispatch({ type: SET_UNAUTHENTICATED });\n      dispatch({\n        type: SET_USERS,\n        payload: null,\n      });\n    })\n\n    .catch((err) => {\n      localStorage.removeItem(\"access_token\");\n      localStorage.removeItem(\"role_id\");\n      history.push(\"/login\");\n      dispatch({ type: CLEAR_ERRORS });\n      dispatch({ type: SET_UNAUTHENTICATED });\n      dispatch({\n        type: SET_USERS,\n        payload: null,\n      });\n    });\n};\n\nexport const getUser =\n  (name = \"1\", gender, paid) =>\n  (dispatch) => {\n    dispatch({ type: LOADING_UI });\n    if (localStorage.getItem(\"access_token\")) {\n      axios\n        .get(\"/user/getProfile\")\n        .then((res) => {\n          dispatch({\n            type: SET_USERS,\n            payload: res.data.data,\n          });\n          dispatch({ type: CLEAR_ERRORS });\n        })\n\n        .catch((err) => {\n          // var errors = JSON.parse(err.response.data.error).errors;\n          // dispatch({\n          //   type: SET_ERRORS,\n          //   payload: err.response ? err.response.data : err.response,\n          // });\n          // console.log(err);\n          // toast.error(`${errors[0].msg}`, {\n          //   position: toast.POSITION.TOP_RIGHT,\n          // });\n        });\n    }\n  };\n\nexport const handleChangePassword = (userData) => (dispatch) => {\n  dispatch({ type: LOADING_UI });\n\n  axios\n    .post(\"/user/changePassword\", userData)\n    .then((res) => {\n      dispatch({ type: CLEAR_ERRORS });\n      toast.success(`${res.data.message}`, {\n        position: toast.POSITION.TOP_RIGHT,\n      });\n    })\n\n    .catch((err) => {\n      dispatch({\n        type: SET_ERRORS,\n        payload: err.response ? err.response.data : err.response,\n      });\n    });\n};\n\nexport const forgetPassword = (userData) => (dispatch) => {\n  dispatch({ type: LOADING_UI });\n\n  axios\n    .post(\"/user/forgotPassword\", userData)\n    .then((res) => {\n      dispatch({ type: CLEAR_ERRORS });\n      toast.success(`${res.data.message}`, {\n        position: toast.POSITION.TOP_RIGHT,\n      });\n    })\n\n    .catch((err) => {\n      dispatch({\n        type: SET_ERRORS,\n        payload: err.response ? err.response.data : err.response,\n      });\n    });\n};\n\nconst setAuthorizationHeader = (data, role_id) => {\n  localStorage.setItem(\"access_token\", data.data.accessToken);\n  localStorage.setItem(\"role_id\", data.data.role_id);\n  localStorage.setItem(\"user_data\", JSON.stringify(data.data));\n};\n","import React, { useState } from \"react\";\nimport Logo from \"../assests/images/logo.jpeg\";\nimport { NavLink, Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { logoutUser, getUser } from \"../store/actions/users\";\nimport { withRouter } from \"react-router-dom\";\nfunction Header({ user: { user }, logoutUser, history }) {\n  const [toggleMenu, setToggleMenu] = useState(false);\n\n  const Menu = (\n    <>\n      <li className=\"active\">\n        <NavLink to=\"/\">Home</NavLink>\n      </li>\n      <li>\n        <NavLink to=\"/about\">About Us</NavLink>\n      </li>\n      <li>\n        <NavLink to=\"/products?query=Mobile%20Crane\">Marketplace</NavLink>\n      </li>\n\n      <li>\n        <NavLink to=\"/contact\">Contact</NavLink>\n      </li>\n      {!user ? (\n        <>\n          <li>\n            <Link\n              to=\"/register?role_id=1\"\n              target=\"_blank\"\n              className=\"btn btn-primary text-white\"\n            >\n              <i className=\"fa fa-sign-in\" aria-hidden=\"true\"></i>\n              Register as Customer\n            </Link>\n          </li>\n          <li>\n            <Link\n              to=\"/register?role_id=2\"\n              target=\"_blank\"\n              className=\"btn btn-primary text-white\"\n            >\n              <i className=\"fa fa-sign-in\" aria-hidden=\"true\"></i>\n              Register as Partner\n            </Link>\n          </li>\n        </>\n      ) : (\n        <>\n          <li className=\"nav-item\">\n            <a\n              className=\"nav-link\"\n              onClick={() => {\n                history.push(\"/profile\");\n              }}\n            >\n              <i className=\"fa fa-fw fa-user\" />\n              My Profile\n            </a>\n          </li>\n          <li className=\"nav-item\">\n            <a\n              className=\"nav-link\"\n              onClick={() => {\n                logoutUser(history);\n              }}\n            >\n              <i className=\"fa fa-fw fa-sign-out\" />\n              Logout\n            </a>\n          </li>\n        </>\n      )}\n    </>\n  );\n  return (\n    <div className=\"site-wrap\">\n      <div className=\"site-mobile-menu\">\n        <div className=\"site-mobile-menu-header\">\n          <div className=\"site-mobile-menu-close mt-3\">\n            <span className=\"icon-close2 js-menu-toggle\" />\n          </div>\n        </div>\n        <div className=\"site-mobile-menu-body\" />\n      </div>\n      <header className=\"site-navbar py-3\" role=\"banner\">\n        <div className=\"container\">\n          <div className=\"row align-items-center\">\n            <div className=\"col-11 col-xl-2\">\n              <h1 className=\"mb-0\">\n                <Link to=\"/\" className=\"text-white h2 mb-0\">\n                  <img src={Logo} width=\"200\" />\n                </Link>\n              </h1>\n            </div>\n            <div className=\"col-12 col-md-10 d-none d-xl-block\">\n              <nav\n                className=\"site-navigation position-relative text-right\"\n                role=\"navigation\"\n              >\n                <ul className=\"site-menu js-clone-nav mx-auto d-none d-lg-block\">\n                  {Menu}\n                </ul>\n              </nav>\n            </div>\n            <div\n              className=\"d-inline-block d-xl-none ml-md-0 mr-auto py-3\"\n              \n            >\n              <a\n                href=\"#\"\n                onClick={() => setToggleMenu(!toggleMenu)}\n                className=\"site-menu-toggle js-menu-toggle\"\n              >\n                <span className=\"icon-menu h3\" />\n              </a>\n            </div>\n          </div>\n        </div>\n      </header>\n      {toggleMenu && (\n        <div className=\"mobile-menu container\">\n          <ul>{Menu}</ul>\n        </div>\n      )}\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => ({\n  user: state.user,\n  allapi: state.allapi,\n});\n\nconst mapActionsToProps = {\n  getUser,\n  logoutUser,\n};\n\nexport default withRouter(connect(mapStateToProps, mapActionsToProps)(Header));\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nexport default function Footer() {\n  return (\n    <footer className=\"site-footer\">\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-md-12\">\n            <div className=\"row\">\n              <div className=\"col-md-6\">\n                <h2 className=\"footer-heading mb-4\">Quick Links</h2>\n                <ul className=\"list-unstyled\">\n                <li>\n                    <Link to=\"/\">Home</Link>\n                  </li>\n                  <li>\n                    <Link to=\"/about\">About Us</Link>\n                  </li>\n                  <li>\n                  <Link to=\"/service\">Services</Link>\n                  </li>\n                 \n                  <li>\n                  <Link to=\"/contact\">Contact Us</Link>\n                  </li>\n                </ul>\n              </div>\n              \n              <div className=\"col-md-6\">\n                <h2 className=\"footer-heading mb-4\">Follow Us</h2>\n                <a href=\"#\" className=\"pl-0 pr-3\">\n                  <span className=\"icon-facebook\" />\n                </a>\n                <a href=\"#\" className=\"pl-3 pr-3\">\n                  <span className=\"icon-twitter\" />\n                </a>\n                <a href=\"#\" className=\"pl-3 pr-3\">\n                  <span className=\"icon-instagram\" />\n                </a>\n                <a href=\"#\" className=\"pl-3 pr-3\">\n                  <span className=\"icon-linkedin\" />\n                </a>\n              </div>\n            </div>\n          </div>\n          \n        </div>\n        <div className=\"row  text-center\">\n          <div className=\"col-md-12\">\n            <div className=\"border-top pt-5\">\n              <p>\n                © 2021 <Link to=\"/\">Lokator</Link> All rights reserved\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </footer>\n  );\n}\n","import React from \"react\";\nimport Logo from \"../assests/images/logo.jpeg\";\nimport { NavLink, Link } from \"react-router-dom\";\n\nexport default function Modal({content,header,width=400,show,onClose}) {\n  return (\n      <>\n      {show && (\n    <div  className={`modal ${show && \"fade show\"}`} tabIndex={-1} role=\"dialog\" >\n    <div  onClick={onClose} className={`modal-backdrop fade ${show && \" show\"}`}></div>\n        <div className=\"modal-dialog modal-dialog-centered\" role=\"document\" style={{maxWidth:width}}>\n          <div className=\"modal-content\">\n              \n              {header && (\n            <div className=\"modal-header\">\n                <h3>{header}</h3>\n              <button type=\"button\" onClick={onClose} className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                <span aria-hidden=\"true\">×</span>\n              </button>\n            </div>)}\n            <div className=\"modal-body\">\n              {content}\n            </div>\n            \n          </div>\n        </div>\n        \n      </div>\n      )}\n     \n      </>\n      \n  );\n}\n\n\n","import React,{useState} from 'react'\n\nexport default function Input(props) {\n    const {error,type} = props;\n    const [showPassword,setShowPassword] = useState(false)\n    return (\n      <>\n        <div  className=\"input_box\">\n        <input {...props} type={type ? (showPassword ? \"text\" : type) : \"text\"} />\n        {type === \"password\"  ? (\n          <i onClick={() => setShowPassword(!showPassword)} className={`fa ${!showPassword?\"fa-eye\":\"fa-eye-slash\"}`}>\n            \n          </i>\n        ) : (\n          \"\"\n        )}\n        </div>\n        {error ? (\n          <p  \n          style={{ paddingTop: 5,\n          fontSize:13,\n          color:\"red\" }}>\n            {error}\n          </p>\n        ) : null}\n      </>\n    );\n}\n","import React, { useEffect } from \"react\";\nimport { useFormikContext } from \"formik\";\n\nconst FocusError = () => {\n  const { errors, isSubmitting, isValidating } = useFormikContext();\n\n  useEffect(() => {\n    if (isSubmitting && !isValidating) {\n      let keys = Object.keys(errors);\n      if (keys.length > 0) {\n        const selector = `[name=${keys[0]}]`;\n        const errorElement = document.querySelector(selector);\n        if (errorElement) {\n          errorElement.focus();\n        }\n      }\n    }\n  }, [errors, isSubmitting, isValidating]);\n\n  return null;\n};\n\nexport default FocusError;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nfunction Loader(props) {\n  const { UI } = props;\n  return UI.loading ? (\n    <div className=\"css-loader\">\n      <div className=\"lds-roller\"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div>\n    </div>\n  ) : null;\n}\n\nconst mapStateToProps = (state) => ({\n  UI: state.UI,\n});\n\nexport default connect(mapStateToProps)(Loader);\n","import React, { Component, useState, useEffect } from \"react\";\nimport \"../assests/scss/admin.scss\";\nimport { withRouter } from \"react-router\";\nimport { logoutUser, getUser } from \"../store/actions/users\";\nimport { getNotification,updateNotification } from \"../store/actions/allapi\";\nimport { Link, NavLink } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport Logo from \"../assests/images/logo.jpeg\";\nimport { get } from \"lodash\";\nconst AdminLayout = ({\n  children,\n  history,\n  logoutUser,\n  getUser,\n  getNotification,\n  updateNotification,\n  user: { user },\n  allapi:{notification}\n}) => {\n  const [showNote, setShowNote] = useState(false);\n  console.log(notification)\n  const [toggleChild, setToogleChild] = useState(false);\n\n  const handleNotificationClick =  (type)=>{\n    \n    updateNotification(type,history)\n    setShowNote(false)\n  }\n\n  useEffect(() => {\n    getUser();\n    getNotification()\n    setInterval(()=>{\n      getNotification()\n    },3000)\n    \n  }, []);\n  return (\n    <div>\n      {/* Navigation*/}\n      <nav\n        className=\"navbar navbar-expand-lg navbar-dark bg-dark fixed-top no-padding\"\n        id=\"mainNav\"\n      >\n        <Link className=\"navbar-brand\" to=\"/\">\n        <img width=\"200\" src={Logo} />\n        </Link>\n\n        <div className=\"collapse navbar-collapse\" id=\"navbarResponsive\">\n          <ul className=\"navbar-nav navbar-sidenav\" id=\"exampleAccordion\">\n            <li\n              className=\"nav-item\"\n              data-toggle=\"tooltip\"\n              data-placement=\"right\"\n            >\n              {/* {user?.role_id != 1 && (\n                <NavLink className=\"nav-link\" to=\"/dashboard\">\n                  <i className=\"fa fa-fw fa-dashboard\" />\n                  <span className=\"nav-link-text\">Dashboard</span>\n                </NavLink>\n              )} */}\n              {user?.role_id != 1 && (\n                <>\n                  <NavLink className=\"nav-link\" to=\"/orders\">\n                    <i className=\"fa fa-cart-arrow-down\" />\n                    <span className=\"nav-link-text\">Orders</span>\n                  </NavLink>\n                  {user?.role_id != 2 && (\n                    <>\n                      <NavLink className=\"nav-link\" to=\"/contact-leads\">\n                        <i className=\"fa fa-fw fa-address-card\" />\n                        <span className=\"nav-link-text\">Contact Leads</span>\n                      </NavLink>\n                      <NavLink className=\"nav-link\" to=\"/inquiries\">\n                        <i className=\"fa fa-fw fa-info-circle\" />\n                        <span className=\"nav-link-text\">Inquiries</span>\n                      </NavLink>\n                      <NavLink className=\"nav-link\" to=\"/users-list\">\n                        <i className=\"fa fa-fw fa-users\" />\n                        <span className=\"nav-link-text\">User List</span>\n                      </NavLink>\n                    </>\n                  )}\n\n                  <button\n                    className=\"nav-link\"\n                    onClick={() => setToogleChild(!toggleChild)}\n                  >\n                    <i className=\"fa fa-industry\"></i>\n                    <span className=\"nav-link-text\">Machine Management</span>\n                    <i\n                      className={`fa  ${\n                        toggleChild ? \"fa-caret-down\" : \"fa-caret-right\"\n                      } btn-arrow`}\n                    ></i>\n                  </button>\n                  {toggleChild && (\n                    <ul className=\"btn-toggle-nav list-unstyled fw-normal pb-1 child-menu\">\n                      {user?.role_id != 2 && (\n                        <>\n                          <li>\n                            <NavLink to=\"/capacity-management\">\n                              Capacity\n                            </NavLink>\n                          </li>\n                          <li>\n                            <NavLink to=\"/types-management\">Types</NavLink>\n                          </li>\n                          <li>\n                            <NavLink to=\"/category-management\">\n                              Category\n                            </NavLink>\n                          </li>\n                        </>\n                      )}\n                      <li>\n                        <NavLink to=\"/machines\">Machines</NavLink>\n                      </li>\n                    </ul>\n                  )}\n                </>\n              )}\n            </li>\n            {user?.role_id == 1 && (\n              <>\n                <li\n                  className=\"nav-item\"\n                  data-toggle=\"tooltip\"\n                  data-placement=\"right\"\n                >\n                  <NavLink className=\"nav-link\" to=\"/customer-orders\">\n                    <i className=\"fa fa-cart-arrow-down\" />\n                    <span className=\"nav-link-text\">Orders</span>\n                  </NavLink>\n                </li>\n              </>\n            )}\n          </ul>\n\n          <ul className=\"navbar-nav ml-auto\">\n            <li className=\"nav-item\">\n              <span className=\"user_name\">\n                {get(user, \"first_name\", \"\")} {get(user, \"last_name\", \"\")}\n              </span>\n            </li>\n            <li className=\"nav-item\">\n              <a\n                className=\"nav-link\"\n                onClick={() => {\n                  history.push(\"/profile\");\n                }}\n              >\n                <i className=\"fa fa-fw fa-user\" />\n                My Profile\n              </a>\n            </li>\n            <li className=\"nav-item\">\n              <a\n                className=\"nav-link\"\n                onClick={() => {\n                  logoutUser(history);\n                }}\n              >\n                <i className=\"fa fa-fw fa-sign-out\" />\n                Logout\n              </a>\n            </li>\n          </ul>\n          {Boolean(notification?.total_notification) && (\n          <ul className=\"nav navbar-nav navbar-right\">\n        <li className=\"dropdown\">\n          <a  className=\"nav-link notify\" onClick={()=> setShowNote(!showNote)} data-toggle=\"dropdown\" role=\"button\" aria-haspopup=\"true\" aria-expanded=\"false\"><i className=\"fa fa-bell\" aria-hidden=\"true\"></i>\n (<b>{notification?.total_notification}</b>)</a>\n          {showNote && (\n          <ul className=\"dropdown-menu notify-drop\">\n            <div className=\"notify-drop-title\">\n              <div className=\"row\">\n                <div className=\"col-md-12\">Notifications (<b>{notification?.total_notification}</b>)</div>\n              </div>\n            </div>\n            \n            <div className=\"drop-content\">\n\n              {notification?.notification?.map(item=>{\n                let type = item.hasOwnProperty(\"Register\")? 'Register':item.hasOwnProperty(\"Product\") ? 'Product':item.hasOwnProperty(\"Machine\")?'Machine':item.hasOwnProperty(\"Order\")?'Order' :'Inquiries';\n               return (<li>\n               <button onClick={()=> handleNotificationClick(type)}>\n               <div className=\"col-md-3 col-sm-3 col-xs-3\"><div className=\"notify-img\"><i className={`fa  ${type== 'Register'?'fa-user-plus':type == 'Product'?'fa-cart-arrow-down':type=='Machine'?'fa-industry':type == 'Order'?'fa-cart-arrow-down':'fa-envelope' }`}></i></div></div>\n               <div className=\"col-md-9 col-sm-9 col-xs-9 pd-l0\"><p className=\"title\" >{type} ({item[type].total})</p> \n                 <hr />\n                 {item[type]?.details?.map(pitem=>{\n                  return <p className=\"time\">{pitem.detail}</p>\n                 })}\n                 </div>\n                 </button>\n             </li>)}\n                )}\n             \n            </div>\n          </ul>\n          )}\n        </li>\n      </ul>\n      )}\n        </div>\n      </nav>\n      <div className=\"content-wrapper\">\n        <div className=\"container-fluid\">{children}</div>\n        {/* /.container-fluid*/}\n        {/* /.content-wrapper*/}\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  user: state.user,\n  allapi: state.allapi,\n});\n\nconst mapActionsToProps = {\n  getUser,\n  logoutUser,\n  getNotification,\n  updateNotification\n};\n\nexport default withRouter(\n  connect(mapStateToProps, mapActionsToProps)(AdminLayout)\n);\n\n\n\n","import React, { Component, useState, useEffect } from \"react\";\nimport \"../assests/scss/admin.scss\";\nimport { withRouter } from \"react-router\";\nimport { logoutUser, getUser } from \"../store/actions/users\";\nimport { Link, NavLink } from \"react-router-dom\";\nimport Logo from \"../assests/images/logo.jpeg\";\nimport { connect } from \"react-redux\";\nimport { get } from \"lodash\";\nconst CustomerLayout = ({\n  children,\n  history,\n  logoutUser,\n  getUser,\n  user: { user },\n}) => {\n\n  const [show,setShow] = useState(false)\n  \n\n  useEffect(() => {\n    getUser();\n  }, []);\n  return (\n    <div>\n      {/* Navigation*/}\n      <nav\n        className=\"navbar navbar-expand-lg navbar-dark bg-dark fixed-top customer-layout\"\n        id=\"mainNav\"\n      >\n        <Link to=\"/\">\n          <img className=\"cs-logo\" width=\"200\" src={Logo} />\n        </Link>\n        <div\n              className=\"d-inline-block d-xl-none ml-md-0 mr-auto py-3\"\n              \n            >\n              <a\n                href=\"#\"\n                onClick={() => setShow(!show)}\n                className=\"site-menu-toggle js-menu-toggle\"\n              >\n                <span className=\"icon-menu h3\" />\n              </a>\n            </div>\n        <div className={`collapse navbar-collapse ${show?\"active\":\"\"}`} id=\"navbarResponsive\">\n          <ul className=\"navbar-nav navbar-sidenav\" id=\"exampleAccordion\">\n            <li>\n              <div className=\"logo_group\"></div>\n            </li>\n            {/* <li className=\"nav-item\">\n              <NavLink className=\"nav-link\" to=\"/customer-dashboard\">\n                <i className=\"fa fa-fw fa-dashboard\" />\n                <span className=\"nav-link-text\">Dashboard</span>\n              </NavLink>\n            </li> */}\n            <li className=\"nav-item\">\n              <NavLink className=\"nav-link\" to=\"/products\">\n                <i className=\"fa  fa-truck\" />\n                <span className=\"nav-link-text\">Products</span>\n              </NavLink>\n            </li>\n          </ul>\n\n          <ul className=\"navbar-nav ml-auto\">\n            {Boolean(user) ? (\n              <>\n                <li className=\"nav-item\">\n                  <span className=\"user_name\">\n                    {get(user, \"user.first_name\", \"\")}{\" \"}\n                    {get(user, \"user.last_name\", \"\")}\n                  </span>\n                </li>\n                <li className=\"nav-item\">\n                  <a\n                    className=\"nav-link\"\n                    onClick={() => {\n                      history.push(\"/profile\");\n                    }}\n                  >\n                    <i className=\"fa fa-fw fa-user\" />\n                    My Profile\n                  </a>\n                </li>\n                <li className=\"nav-item\">\n                  <a\n                    className=\"nav-link\"\n                    onClick={() => {\n                      history.push(\"/customer-orders\");\n                    }}\n                  >\n                    <i className=\"fa fa-fw fa-user\" />\n                    My Orders\n                  </a>\n                </li>\n                <li className=\"nav-item\">\n                  <a\n                    className=\"nav-link\"\n                    onClick={() => {\n                      logoutUser(history);\n                    }}\n                  >\n                    <i className=\"fa fa-fw fa-sign-out\" />\n                    Logout\n                  </a>\n                </li>\n              </>\n            ) : (\n              <>\n                <li className=\"nav-item\">\n                  <a\n                    className=\"nav-link\"\n                    onClick={() => {\n                      history.push(\"/login?role_id=1\");\n                    }}\n                  >\n                    <i className=\"fa fa-user\" />\n                    Login\n                  </a>\n                </li>\n                <li className=\"nav-item\">\n                  <a\n                    className=\"nav-link\"\n                    onClick={() => {\n                      history.push(\"/register?role_id=1\");\n                    }}\n                  >\n                    <i className=\"fa fa-sign-in\" />\n                    Register\n                  </a>\n                </li>\n              </>\n            )}\n          </ul>\n        </div>\n      </nav>\n      <div className=\"content-wrapper customer-layout\">\n        <div className=\"container-fluid\">{children}</div>\n        {/* /.container-fluid*/}\n        {/* /.content-wrapper*/}\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  user: state.user,\n  allapi: state.allapi,\n});\n\nconst mapActionsToProps = {\n  getUser,\n  logoutUser,\n};\n\nexport default withRouter(\n  connect(mapStateToProps, mapActionsToProps)(CustomerLayout)\n);\n","import React from \"react\";\nimport Select from \"react-select\";\n\nfunction SelectInput(props) {\n  const { error } = props;\n  return (\n    <div>\n      <Select\n        isClearable\n        \n        {...props}\n      />\n      {error ? (\n        <p style={{ paddingTop: 5, fontSize: 13, color: \"red\" }}>{error}</p>\n      ) : null}\n    </div>\n  );\n}\n\nexport default SelectInput;\n","import React from 'react'\n\nexport default function Textarea(props) {\n    const {error} = props;\n    return (\n      <>\n        <textarea {...props} />\n        {error ? (\n          <p  \n          style={{ paddingTop: 5,\n          fontSize:13,\n          color:\"red\" }}>\n            {error}\n          </p>\n        ) : null}\n      </>\n    );\n}\n","export default __webpack_public_path__ + \"static/media/client1.6f1e107d.png\";","export default __webpack_public_path__ + \"static/media/client2.270c7b91.png\";","export default __webpack_public_path__ + \"static/media/client3.da5484ce.png\";","export default __webpack_public_path__ + \"static/media/client4.113f988d.png\";","export default __webpack_public_path__ + \"static/media/client5.ada3fbe2.png\";","\nimport React, { Component } from \"react\";\nimport Slider from \"react-slick\";\nimport client1 from '../assests/images/client1.png'\nimport client2 from '../assests/images/client2.png'\nimport client3 from '../assests/images/client3.png'\nimport client4 from '../assests/images/client4.png'\nimport client5 from '../assests/images/client5.png'\n\nexport default class LogoSlider extends Component {\n  render() {\n    const settings = {\n        dots: true,\n        infinite: true,\n        speed: 300,\n        autoplay:true,\n        slidesToShow: 4,\n        slidesToScroll: 4,\n        responsive: [\n          {\n            breakpoint: 1024,\n            settings: {\n              slidesToShow: 3,\n              slidesToScroll: 3,\n              infinite: true,\n              dots: true\n            }\n          },\n          {\n            breakpoint: 600,\n            settings: {\n              slidesToShow: 2,\n              slidesToScroll: 2\n            }\n          },\n          {\n            breakpoint: 480,\n            settings: {\n              slidesToShow: 1,\n              slidesToScroll: 1\n            }\n          }\n          // You can unslick at a given breakpoint now by adding:\n          // settings: \"unslick\"\n          // instead of a settings object\n        ]\n    };\n    return (\n      <div>\n        <div class=\"pb-1 border-primary mb-4 text-center\"><h2 class=\"text-primary\">Our Partners</h2></div>\n        <Slider {...settings}>\n          <div>\n            <img src={client1}/>\n          </div>\n          <div>\n          <img src={client2}/>\n          </div>\n          <div>\n          <img src={client3}/>\n          </div>\n          <div>\n          <img src={client4}/>\n          </div>\n          <div>\n          <img src={client5}/>\n          </div>\n          \n        </Slider>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nfunction Pagination(props) {\n  const { totalPage,activePage,updateActivePage } = props;\n  return (\n    <ul class=\"pagination align-center\">\n    {activePage> 0 && (\n    <li class=\"page-item\"><a  onClick={()=>updateActivePage(activePage-1)} class={`page-link`} href=\"#\" aria-label=\"Previous\">&laquo;</a></li>\n    )}    \n    {Array.apply(null, {length: totalPage})\n.map((item,index)=>{\n        return (<li key={index} class={`page-item ${activePage==index && 'active'}`}><a \n        onClick={()=>updateActivePage(index)}\n        \n        class=\"page-link\" href=\"#\">1</a></li>)\n    })}\n    \n    \n    {activePage<(totalPage-1) && (\n    <li class=\"page-item\"><a onClick={()=>updateActivePage(activePage+1)}  class=\"page-link\" class={`page-link ${activePage==(totalPage-1) && 'disabled'}`}  href=\"#\" aria-label=\"Next\">&raquo;</a></li>\n    )}    \n  </ul>\n  )\n}\n\n\nexport default Pagination\n","import React,{useState} from \"react\";\nimport Select from \"react-select\";\n\nfunction Search(props) {\n  const { error,searchValue,setSearchValue,handleClick,handleClear } = props;\n  const [isClicked,setIsClicked] = useState(false)\n  return (\n    <div>\n      <form class=\"form-inline search-form\">\n      <div class=\"form-group mb-2\">\n            <input\n              type=\"text\"\n              class=\"form-control\"\n              onChange={(e) => {\n                setIsClicked(false)\n                setSearchValue(e.target.value)}}\n              value={searchValue}\n              placeholder=\"Search...\"\n            />\n          </div>\n          {isClicked ?(\n             <button\n             type=\"button\"\n             \n             onClick={()=>{\n              setIsClicked(false)\n              handleClear()}}\n             class=\"btn btn-primary text-white mb-2 text-low\"\n           >\n             Clear\n             \n           </button>\n          ):( <button\n            type=\"button\"\n            onClick={()=>{\n              setIsClicked(true)\n              handleClick()}}\n            class=\"btn btn-primary text-white mb-2 text-low\"\n          >\n            <i className=\"fa fa-search\"></i>\n            \n          </button>)}\n         \n        </form>\n       \n    </div>\n  );\n}\n\nexport default Search;\n","import React from \"react\";\n\nfunction NoData(props) {\n  return (\n    <div className=\"no-data\">\n      <i class=\"fa fa-ban\" aria-hidden=\"true\"></i>\n\n      <h3>No Data Found!</h3>\n    </div>\n  );\n}\n\nexport default NoData;\n","import React from \"react\";\nimport Modal from \"./Modal\";\nexport default function ConfirmModal({\n  content,\n  show,\n  handleModal,\n  handleClose,\n}) {\n  return (\n    <Modal\n      show={show}\n      content={\n        <div className=\"confirm_box\">\n          <h3> {content}</h3>\n          <div className=\"btn-group\">\n            <button\n              type=\"button\"\n              onClick={() => handleClose()}\n              className=\"btn-transprent  btn text-white\"\n            >\n              Cancel\n            </button>\n            <button\n              type=\"button\"\n              onClick={() => handleModal()}\n              className=\"btn-primary  btn text-white\"\n            >\n              Continue\n            </button>\n          </div>\n        </div>\n      }\n    />\n  );\n}\n","import React from \"react\";\nimport Modal from \"./Modal\";\nexport default function SucesssModal({\n  content,\n  show,\n  handleModal,\n  handleClose,\n}) {\n  return (\n    <Modal\n      show={show}\n      content={\n        <div className=\"confirm_box sucess\">\n          <h3> {content}</h3>\n          <div className=\"btn-group center\">\n            <button\n              type=\"button\"\n              onClick={() => handleModal()}\n              className=\"btn-primary  btn text-white\"\n            >\n              Continue\n            </button>\n          </div>\n        </div>\n      }\n    />\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport BannerBg from \"../../assests/images/hero_bg.jpg\";\nimport { connect } from \"react-redux\";\nimport { getCategory } from \"../../store/actions/allapi\";\nimport { get } from \"lodash\";\nimport { Link } from \"react-router-dom\";\n\nimport { Modal, Input, FocusError } from \"../../components/.\";\nimport { Formik, Field, Form } from \"formik\";\nconst Home = ({\n  getCategory,\n  allapi: { category, selectedImage },\n  location: { search },\n  history,\n}) => {\n  const [searchVal, setSearchValue] = useState(\"\");\n  useEffect(() => {\n    getCategory(0, \"\", 1);\n  }, []);\n  const [showLogins, setLogins] = useState(false);\n  const [showSignup, setShowSignup] = useState(false);\n  return (\n    <div>\n      <div\n        className=\"site-blocks-cover overlay\"\n        style={{ backgroundImage: `url(${BannerBg})` }}\n        data-aos=\"fade\"\n        data-stellar-background-ratio=\"0.5\"\n      >\n        <div className=\"container\">\n          <div className=\"row align-items-center justify-content-center\">\n            <div className=\"col-md-12\" data-aos=\"fade-up\" data-aos-delay={400}>\n              <h3 className=\"text-white font-weight-light mb-5 text-uppercase font-weight-bold\">\n                Search for the equipment you want to rent and\n                <br /> book it in a few clicks\n              </h3>\n              <div className=\"home-search bg-dark\">\n                <h3 className=\"heading\">Rent Equipment</h3>\n                <form\n                  className=\"search_form \"\n                  onSubmit={(e) => {\n                    e.preventDefault();\n                    history.push(\"/products?query=\" + searchVal);\n                  }}\n                >\n                  <div className=\"form-group\">\n                    <input\n                      className=\"form-control\"\n                      type=\"text\"\n                      onChange={(e) => setSearchValue(e.target.value)}\n                      placeholder=\"Search for machine, brand, model\"\n                    />\n                    <button\n                      className=\"btn btn-primary text-white\"\n                      type=\"submit\"\n                    >\n                      Search\n                    </button>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"site-section bg-light \">\n        <div className=\"container\">\n          <div className=\"row justify-content-center mb-5 \">\n            <div className=\"col-md-7 text-center border-primary\">\n              <h2 className=\"font-weight-light text-primary\">Rent Machines</h2>\n            </div>\n          </div>\n          <div className=\"row align-items-stretch\">\n            {get(category, \"categoryList\", []).map((item) => {\n              return (\n                <div className=\"col-md-6 col-lg-3 mb-3 mb-lg-3\">\n                  <Link to={\"/products?query=\" + item.category_name}>\n                    <div className=\"unit-4 d-flex feature-item\" key={item.id}>\n                      <div>\n                        <h3>{item.category_name}</h3>\n                        <img src={item.category_image} />\n                      </div>\n                    </div>\n                  </Link>\n                </div>\n              );\n            })}\n          </div>\n        </div>\n      </div>\n\n      {/* Login Modal buttons */}\n      <Modal\n        show={showLogins}\n        onClose={() => setLogins(false)}\n        content={\n          <div className=\"btn_wrapper\">\n            <a\n              href=\"/login?role_id=1\"\n              target=\"_blank\"\n              className=\"btn btn-success btn-block   text-white\"\n            >\n              Sign in as Customer\n            </a>\n            <a\n              href=\"/login?role_id=2\"\n              target=\"_blank\"\n              className=\"btn btn-success btn-block   text-white\"\n            >\n              Sign in as Partner\n            </a>\n          </div>\n        }\n      />\n\n      <Modal\n        show={showSignup}\n        onClose={() => setShowSignup(false)}\n        content={\n          <div className=\"btn_wrapper\">\n            <a\n              href=\"/register?role_id=1\"\n              target=\"_blank\"\n              className=\"btn btn-success btn-block   text-white\"\n            >\n              Register in as Customer\n            </a>\n            <a\n              href=\"/register?role_id=2\"\n              target=\"_blank\"\n              className=\"btn btn-success btn-block   text-white\"\n            >\n              Register in as Partner\n            </a>\n          </div>\n        }\n      />\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  user: state.user,\n  allapi: state.allapi,\n});\n\nconst mapActionsToProps = {\n  getCategory,\n};\n\nexport default connect(mapStateToProps, mapActionsToProps)(Home);\n","export default __webpack_public_path__ + \"static/media/jcb.db77b81b.jpeg\";","export default __webpack_public_path__ + \"static/media/truck_image.47ca8427.png\";","import React, { Component } from \"react\";\nimport BannerBg from \"../../assests/images/jcb.jpeg\";\nimport BannerBg2 from \"../../assests/images/truck_image.png\";\nimport { Link } from \"react-router-dom\";\nimport { LogoSlider } from \"../../components\";\n\nconst About = () => {\n  return (\n    <div>\n      <div\n        className=\"site-blocks-cover inner-page-cover overlay aos-init aos-animate\"\n        style={{\n          backgroundImage:\n            'url('+BannerBg+')',\n          \n        }}\n        data-aos=\"fade\"\n        data-stellar-background-ratio=\"0.5\"\n      >\n        <div className=\"container\">\n          <div className=\"row align-items-center justify-content-center text-center\">\n            <div\n              className=\"col-md-8 aos-init aos-animate\"\n              data-aos=\"fade-up\"\n              data-aos-delay={400}\n            >\n              <h1 className=\"text-white font-weight-light text-uppercase font-weight-bold\">\n                About Us\n              </h1>\n              <p className=\"breadcrumb-custom\">\n                <Link to=\"/\">Home</Link> <span className=\"mx-2\">&gt;</span>{\" \"}\n                <span>About Us</span>\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"site-section\">\n        <div className=\"container\">\n          <div className=\"row mb-5\">\n            <div\n              className=\"col-md-5 ml-auto mb-5 order-md-2 aos-init aos-animate\"\n              data-aos=\"fade\"\n            >\n              <img\n                src={BannerBg2}\n                alt=\"Image\"\n                className=\"img-fluid rounded\"\n                \n                onload=\"pagespeed.CriticalImages.checkImageForCriticality(this);\"\n              />\n            </div>\n            <div\n              className=\"col-md-6 order-md-1 aos-init aos-animate\"\n              data-aos=\"fade\"\n            >\n              <div className=\"text-left pb-1 border-primary mb-4\">\n                <h2 className=\"text-primary\">LOKATOR SAS</h2>\n              </div>\n              <p><strong>Lokator</strong> is a Malian company specializing in the rental and sale of machinery for earthworks and 4X4 off-road, industrial and public works materials in Africa. The range of Lokator also extends to supporting equipment for mining works.</p>\n<p>Our rental services and sales concern the following materials:</p>\n<p>Machinery: Dozers, Graders, Hydraulic excavators, Compactors, Articulated trucks, Tippers, Tanks, Generators, Pump sets, Container 20 feet and 40 feet etc.</p>\n<p>Vehicles: Toyota, Land Cruiser, Toyota V8, Toyota Prado, 4x4 Pick up, Land Cruiser Pick up.</p>\n<p>All machines offered are inspected, verified and guaranteed.</p>\n              \n            </div>\n          </div>\n        </div>\n      </div>\n      <div\n        className=\"site-section \"\n        \n      >\n        <div className=\"container\">\n          <div className=\"row justify-content-center mb-5\">\n            <div className=\"col-md-12 \">\n              <h2\n                className=\"text-primary aos-init aos-animate\"\n                data-aos=\"fade\"\n              >\n                Advantage of our activity\n              </h2>\n              <p>Machine in good working condition.</p>\n<p>Guarantee of interventions.</p>\n<p>Machine safety.</p>\n<p>Priority of troubleshooting on phone call.</p>\n<p>Professional Conduct</p>\n<p>The LSR (Local Service Representative) and all project personnel will ensure the highest levels of competence, conduct, cleanliness and integrity of the employees. Tasks will be performed according to workplace safety rules and practices. Each visit will be recorded on an intervention sheet targeted by the client and the provider with precision.</p>\n<p>These cards will include the following information: date and names of the technicians, reason for the visit with details of the work carried out and any comments made.</p>\n            </div>\n          </div>\n          <LogoSlider/>  \n        </div>\n        \n      </div>\n      \n      \n    </div>\n  );\n};\n\nexport default About;\n","const APLHA_SPEICAL = \"Name can contain alphabets & special characters only\";\nconst APLHA_NUM_SPEICAL =\n  \"Name can be alphanumberic with special characters only\";\nconst REQUIRED = \"Field is required\";\nconst phoneRegex = /^([1-9])(\\d{7})$/;\n\nexport const addSubAdminValidator = (values) => {\n  let errors = {};\n  if (!values.email) {\n    errors.email = REQUIRED;\n  } else if (\n    !/^([a-zA-Z0-9_.-])+@(([a-zA-Z0-9-])+\\.)+([a-zA-Z0-9]{2,4})+$/.test(\n      values.email\n    )\n  ) {\n    errors.email = \"Enter a valid email address\";\n  }\n\n  if (!values.mobile_number) {\n    errors.mobile_number = \"Phone number is required.\";\n  }\n  if (!values.password) {\n    errors.password = REQUIRED;\n  }\n  if (!values.name) {\n    errors.name = REQUIRED;\n  }\n  console.log(errors);\n\n  return errors;\n};\n\nconst checkEmail = (value) => {\n  if (\n    !/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(\n      value\n    )\n  ) {\n    return true;\n  } else if (\n    value.includes('\"') ||\n    value.includes(\"'\") ||\n    value.includes(\",\") ||\n    value.includes(\" \")\n  ) {\n    return true;\n  } else {\n    return false;\n  }\n};\n\nexport const loginValidator = (values) => {\n  let errors = {};\n  if (!values.phone) {\n    errors.phone = REQUIRED;\n  }\n\n  if (!values.password) {\n    errors.password = REQUIRED;\n  }\n\n  return errors;\n};\n\nexport const capacityValidator = (values) => {\n  let errors = {};\n  if (!values.capacity) {\n    errors.capacity = REQUIRED;\n  }\n\n  return errors;\n};\nexport const typesValidator = (values) => {\n  let errors = {};\n  if (!values.type) {\n    errors.type = REQUIRED;\n  }\n\n  return errors;\n};\n\nexport const categoryValidator = (values, image) => {\n  let errors = {};\n  if (!values.category_name) {\n    errors.category_name = REQUIRED;\n  }\n  if (!image) {\n    errors.category_image = REQUIRED;\n  }\n\n  return errors;\n};\n\nexport const machineValidator = (values, image) => {\n  let errors = {};\n  if (!values.machine_name) {\n    errors.machine_name = REQUIRED;\n  }\n  if (!values.machine_number) {\n    errors.machine_number = REQUIRED;\n  }\n  if (!values.category_id) {\n    errors.category_id = REQUIRED;\n  }\n  if (!values.capacity_id) {\n    errors.capacity_id = REQUIRED;\n  }\n  if (!values.machine_type_id) {\n    errors.machine_type_id = REQUIRED;\n  }\n  if (!values.description) {\n    errors.description = REQUIRED;\n  }\n\n  if (!image) {\n    errors.category_image = REQUIRED;\n  }\n\n  return errors;\n};\n\nexport const signUPValidator = (values) => {\n  let errors = {};\n  if (!values.first_name) {\n    errors.first_name = REQUIRED;\n  }\n  if (!values.last_name) {\n    errors.last_name = REQUIRED;\n  }\n\n  if (!values.phone) {\n    errors.phone = REQUIRED;\n  }\n  if (!values.company_name) {\n    errors.company_name = REQUIRED;\n  }\n\n  if (!values.company_name) {\n    errors.company_name = REQUIRED;\n  }\n  if (values.email) {\n    if (\n      !/^([a-zA-Z0-9_.-])+@(([a-zA-Z0-9-])+\\.)+([a-zA-Z0-9]{2,4})+$/.test(\n        values.email\n      )\n    ) {\n      errors.email = \"Enter a valid email address\";\n    }\n  }\n\n  if (!values.password) {\n    errors.password = REQUIRED;\n  }\n  if (!values.confirm_password) {\n    errors.confirm_password = REQUIRED;\n  } else if (values.password !== values.confirm_password) {\n    errors.confirm_password = \"Password does not match\";\n  }\n  console.log(errors);\n  return errors;\n};\n\nexport const changePasswordValidator = (values) => {\n  let errors = {};\n  if (!values.old_password) {\n    errors.old_password = REQUIRED;\n  }\n  if (!values.password) {\n    errors.password = REQUIRED;\n  }\n  if (!values.confirm_password) {\n    errors.confirm_password = REQUIRED;\n  } else if (values.password !== values.confirm_password) {\n    errors.confirm_password = \"Password does not match\";\n  }\n  console.log(errors);\n  return errors;\n};\n\nexport const contactvalidator = (values) => {\n  let errors = {};\n  if (!values.name) {\n    errors.name = REQUIRED;\n  }\n  if (!values.email) {\n    errors.email = REQUIRED;\n  } else if (\n    !/^([a-zA-Z0-9_.-])+@(([a-zA-Z0-9-])+\\.)+([a-zA-Z0-9]{2,4})+$/.test(\n      values.email\n    )\n  ) {\n    errors.email = \"Enter a valid email address\";\n  }\n  if (!values.phone) {\n    errors.phone = \"Phone number is required.\";\n  }\n\n  if (!values.business_name) {\n    errors.business_name = REQUIRED;\n  }\n\n  if (!values.message) {\n    errors.message = REQUIRED;\n  }\n\n  return errors;\n};\n\nexport const profileValidator = (values) => {\n  let errors = {};\n  if (!values.first_name) {\n    errors.first_name = REQUIRED;\n  }\n  if (!values.last_name) {\n    errors.last_name = REQUIRED;\n  }\n  if (!values.company_name) {\n    errors.company_name = REQUIRED;\n  }\n\n  console.log(errors);\n  return errors;\n};\n\nexport const countryValidator = (values) => {\n  let errors = {};\n  if (!values.name) {\n    errors.name = REQUIRED;\n  }\n  if (!values.country_code) {\n    errors.country_code = REQUIRED;\n  }\n\n  return errors;\n};\n\nexport const orderValidator = (values) => {\n  let errors = {};\n  if (!values.order_scope) {\n    errors.order_scope = REQUIRED;\n  }\n  if (!values.delivery_location) {\n    errors.delivery_location = REQUIRED;\n  }\n  if (!values.comments_remarks) {\n    errors.comments_remarks = REQUIRED;\n  }\n  if (!values.order_scope) {\n    errors.order_scope = REQUIRED;\n  }\n\n  return errors;\n};\n\nexport const inquiryValidator = (values) => {\n  console.log(values);\n  let errors = {};\n  if (values.user !== \"\") {\n  }\n  if (!values.price_type) {\n    errors.price_type = REQUIRED;\n  }\n  if (!values.delivery_date) {\n    errors.delivery_date = REQUIRED;\n  }\n  if (!values.location) {\n    errors.location = REQUIRED;\n  }\n  if (!values.requirment) {\n    errors.requirment = REQUIRED;\n  }\n\n  return errors;\n};\n","export default __webpack_public_path__ + \"static/media/customer.e1aeee3e.png\";","import React, { useState } from \"react\";\nimport { Formik, Field, Form } from \"formik\";\nimport { Modal, Input, FocusError, Select, Textarea } from \"../../components\";\nimport { contactvalidator } from \"../../utils/validation\";\nimport { addContact } from \"../../store/actions/allapi\";\nimport ContactIcon from \"../../assests/images/customer.png\";\n\nimport { connect } from \"react-redux\";\n\nconst Contact = ({ addContact }) => {\n  const [hasSubmitted, setHasSubmitted] = useState(false);\n  const handleContact = async (values) => {\n    await addContact(values);\n    setHasSubmitted(true);\n  };\n\n  return (\n    <div>\n      <div className=\"site-section contact-wrapper\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-7 mb-5\">\n              <h3>Contact Us</h3>\n              <div className=\"card head\">\n                Fill in your details and we will call you back\n              </div>\n              <div className=\"card\">\n                <div className=\"card-body\">\n                  {hasSubmitted ? (\n                    <div className=\"text-center\">\n                      <h1 className=\"display-3\">Thank You!</h1>\n                      <p className=\"lead\">\n                        We will get in touch with you very soon.\n                      </p>\n                      <hr />\n                    </div>\n                  ) : (\n                    <Formik\n                      enableReinitialize\n                      initialValues={{\n                        name: \"\",\n                        email: \"\",\n                        business_name: \"\",\n                        phone: \"\",\n                        message: \"\",\n                      }}\n                      validate={(values) => contactvalidator(values)}\n                      validateOnChange\n                      onSubmit={handleContact}\n                    >\n                      {(formikBag) => {\n                        return (\n                          <Form>\n                            <div className=\"row\">\n                              <div className=\"col-lg-12\">\n                                <label>Name *</label>\n                                <Field name=\"name\">\n                                  {({ field }) => (\n                                    <Input\n                                      {...field}\n                                      type=\"text\"\n                                      error={\n                                        formikBag.touched.name &&\n                                        formikBag.errors.name\n                                          ? formikBag.errors.name\n                                          : null\n                                      }\n                                      className=\"form-control\"\n                                      placeholder={\"Enter Your Name\"}\n                                    />\n                                  )}\n                                </Field>\n                              </div>\n                            </div>\n                            <div className=\"row\">\n                              <div className=\"col-lg-12\">\n                                <label>Email *</label>\n                                <Field name=\"email\">\n                                  {({ field }) => (\n                                    <Input\n                                      {...field}\n                                      type=\"email\"\n                                      className=\"form-control\"\n                                      error={\n                                        formikBag.touched.email &&\n                                        formikBag.errors.email\n                                          ? formikBag.errors.email\n                                          : null\n                                      }\n                                      placeholder={\"Email Address\"}\n                                    />\n                                  )}\n                                </Field>\n                              </div>\n                            </div>\n\n                            <div className=\"row\">\n                              <div className=\"col-lg-12\">\n                                <label>Business Name </label>\n                                <Field name=\"business_name\">\n                                  {({ field }) => (\n                                    <Input\n                                      {...field}\n                                      type=\"text\"\n                                      className=\"form-control\"\n                                      error={\n                                        formikBag.touched.business_name &&\n                                        formikBag.errors.business_name\n                                          ? formikBag.errors.business_name\n                                          : null\n                                      }\n                                      placeholder=\"Business Name\"\n                                    />\n                                  )}\n                                </Field>\n                              </div>\n                            </div>\n\n                            <div className=\"row\">\n                              <div className=\"col-lg-12\">\n                                <label>Phone</label>\n\n                                <Field name=\"phone\">\n                                  {({ field }) => (\n                                    <Input\n                                      {...field}\n                                      type=\"text\"\n                                      className=\"form-control\"\n                                      placeholder={\"Phone Number\"}\n                                      error={\n                                        formikBag.touched.phone &&\n                                        formikBag.errors.phone\n                                          ? formikBag.errors.phone\n                                          : null\n                                      }\n                                    />\n                                  )}\n                                </Field>\n                              </div>\n                            </div>\n                            <div className=\"row\">\n                              <div className=\"col-lg-12\">\n                                <label>Your Message</label>\n                                <Field name=\"message\">\n                                  {({ field }) => (\n                                    <Textarea\n                                      {...field}\n                                      type=\"text\"\n                                      error={\n                                        formikBag.touched.message &&\n                                        formikBag.errors.message\n                                          ? formikBag.errors.message\n                                          : null\n                                      }\n                                      className=\"form-control\"\n                                      placeholder={\"Your Message\"}\n                                    />\n                                  )}\n                                </Field>\n                              </div>\n                            </div>\n\n                            <div className=\"py-3 text-center\">\n                              <button\n                                type=\"submit\"\n                                className=\"btn-primary btn-block btn text-white\"\n                              >\n                                Send\n                              </button>\n                            </div>\n\n                            <FocusError />\n                          </Form>\n                        );\n                      }}\n                    </Formik>\n                  )}\n                </div>\n              </div>\n            </div>\n\n            <div className=\"col-md-5\">\n              <img src={ContactIcon} />\n              {/* <div className=\"p-4 mb-3 bg-white\">\n                <p className=\"mb-0 font-weight-bold\">Address</p>\n                <p className=\"mb-4\">\n                  203 Fake St. Mountain View, San Francisco, California, USA\n                </p>\n                <p className=\"mb-0 font-weight-bold\">Phone</p>\n                <p className=\"mb-4\">\n                  <a href=\"#\">+1 232 3235 324</a>\n                </p>\n                <p className=\"mb-0 font-weight-bold\">Email Address</p>\n                <p className=\"mb-0\">\n                  <a href=\"#\">youremail@domain.com</a>\n                </p>\n              </div> */}\n              {/* <div className=\"p-4 mb-3 bg-white\">\n                <h3 className=\"h5 text-black mb-3\">More Info</h3>\n                <p>\n                  Lorem ipsum dolor sit amet, consectetur adipisicing elit. Ipsa\n                  ad iure porro mollitia architecto hic consequuntur. Distinctio\n                  nisi perferendis dolore, ipsa consectetur? Fugiat quaerat eos\n                  qui, libero neque sed nulla.\n                </p>\n                <p>\n                  <a href=\"#\" className=\"btn btn-primary px-4 py-2 text-white\">\n                    Learn More\n                  </a>\n                </p>\n              </div> */}\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"map-wrapper\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-lg-8\">\n              <iframe\n                src=\"https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d31144.504072194395!2d-8.028514235384366!3d12.643871185700009!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0xe51cc8a9561831d%3A0xb13a535acb607d08!2sHamdallaye%20ACI%202000!5e0!3m2!1sen!2sin!4v1632585979480!5m2!1sen!2sin\"\n                width=\"100%\"\n                height=\"450\"\n                style={{ border: 0 }}\n                allowfullscreen=\"\"\n                loading=\"lazy\"\n              ></iframe>\n            </div>\n            <div className=\"col-lg-4\">\n              <h3>Contact Us</h3>\n\n              <p className=\"mb-0 font-weight-bold\">Address</p>\n              <p className=\"mb-2\">\n                Immeuble Abdoulaye BAH, Bureau N°9 <br />\n                Hamdallaye ACI 2000 Rue 331 , BPE 1846 Bamako Mali\n              </p>\n              <p className=\"mb-0 font-weight-bold\">\n                Appel , SMS , WhatsApp, WeChat{\" \"}\n              </p>\n              <p className=\"mb-2\">\n                <a href=\"tel:+223 20 23 26 05\">+223 20 23 26 05 /</a>{\" \"}\n                <a href=\"tel:+223 66 75 48 11\">+223 66 75 48 11 </a>\n              </p>\n              <p className=\"mb-0 font-weight-bold\">Email Address</p>\n              <p className=\"mb-0\">\n                <a href=\"#\">info@Lokator.com</a>\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  user: state.user,\n  allapi: state.allapi,\n});\n\nconst mapActionsToProps = {\n  addContact,\n};\n\nexport default connect(mapStateToProps, mapActionsToProps)(Contact);\n","export default __webpack_public_path__ + \"static/media/Red-truck.6d6ee908.png\";","export default __webpack_public_path__ + \"static/media/hero_bg_2.9bc49a87.jpg\";","import React, { Component, useState, useEffect } from \"react\";\nimport BannerBg from \"../../assests/images/hero_bg.jpg\";\nimport BannerBg2 from \"../../assests/images/hero_bg_2.jpg\";\nimport Logo from \"../../assests/images/logo.jpeg\";\nimport Truck from \"../../assests/images/Red-truck.png\";\nimport { Link } from \"react-router-dom\";\nimport { Modal, Input, FocusError, Select } from \"../../components\";\nimport { Formik, Field, Form } from \"formik\";\nimport { loginValidator, signUPValidator } from \"../../utils/validation\";\nimport {\n  loginUser,\n  signinUser,\n  forgetPassword,\n} from \"../../store/actions/users\";\nimport { getCountries, getLocations } from \"../../store/actions/allapi\";\nimport { connect } from \"react-redux\";\nimport PhoneInput from \"react-phone-input-2\";\nimport \"react-phone-input-2/lib/style.css\";\nconst Login = ({\n  location: { pathname, search },\n  loginUser,\n  signinUser,\n  getCountries,\n  getLocations,\n  forgetPassword,\n  history,\n  isPopup,\n  handleClick,\n  allapi: { countries, locations },\n}) => {\n  const query = new URLSearchParams(search);\n  const role_id = pathname == \"/admin/login\" ? 0 : query.get(\"role_id\") || 1;\n\n  const [showLogin, setShowLogin] = useState(true);\n  const [showSignUp, setShowSignUp] = useState(false);\n\n  useEffect(() => {\n    //getCountries()\n  }, []);\n\n  const handleSubmit = (values) => {\n    loginUser(values, history, isPopup, handleClick);\n  };\n  const handleSignIn = (values) => {\n    var formValues = { ...values };\n    formValues.role_id = isPopup ? 1 : role_id;\n    if (formValues.email == \"\") {\n      delete formValues.email;\n    }\n    delete formValues.whole_number;\n\n    signinUser(formValues, history, isPopup, handleClick);\n    //loginUser(values, history);\n  };\n\n  return (\n    <div className={`login_page ${isPopup && \"popup\"}`}>\n      {!isPopup && (\n        <div className=\"banner_box\">\n          <h3> Machine in good working condition.</h3>\n          <h1>Lokator Truck</h1>\n          <img src={Truck} />\n        </div>\n      )}\n      <div className=\"main_section\">\n        {!isPopup && (\n          <div className=\"login-header\">\n            <Link to=\"/\">\n              <img src={Logo} width=\"200\" />\n            </Link>\n            <div>\n              <Link\n                to=\"/register?role_id=2\"\n                className=\"btn btn-primary text-white btn-sm\"\n              >\n                Register as Partner\n              </Link>{\" \"}\n              &nbsp;&nbsp;\n              <Link to=\"/\" className=\"btn btn-primary text-white btn-sm\">\n                Home\n              </Link>\n            </div>\n          </div>\n        )}\n        <div className=\"login-form\">\n          <div className=\"login-content\">\n            {pathname == \"/forgot-password\" ? (\n              <>\n                <h3>Forgot Password</h3>\n                <Formik\n                  enableReinitialize\n                  initialValues={{\n                    email: \"\",\n                  }}\n                  //validate={(values) => resetOutValidator(values)}\n                  validateOnChange\n                  onSubmit={forgetPassword}\n                >\n                  {(formikBag) => {\n                    return (\n                      <Form className=\"small-form\">\n                        <div className=\"row\">\n                          <div className=\"col-lg-12\">\n                            <Field name=\"email\">\n                              {({ field }) => (\n                                <Input\n                                  {...field}\n                                  type=\"email\"\n                                  value={formikBag.values.email}\n                                  onChange={(e) => {\n                                    formikBag.setFieldValue(\n                                      \"email\",\n                                      e.target.value\n                                    );\n                                  }}\n                                  className=\"form-control\"\n                                  placeholder={\"Email Address\"}\n                                />\n                              )}\n                            </Field>\n                          </div>\n                        </div>\n\n                        <div className=\" text-center\">\n                          <button\n                            type=\"submit\"\n                            className=\"btn-primary btn-block btn text-white\"\n                          >\n                            Forgot Password\n                          </button>\n                        </div>\n                        <br />\n                        <p>\n                          {role_id != 0 ? (\n                            <p>\n                              Already have an account?{\" \"}\n                              <Link to={\"/login?role_id=\" + role_id}>\n                                SIGN IN\n                              </Link>\n                            </p>\n                          ) : (\n                            <Link to={\"/admin/login\"}>Back to Login</Link>\n                          )}\n                        </p>\n\n                        <FocusError />\n                      </Form>\n                    );\n                  }}\n                </Formik>\n              </>\n            ) : pathname == \"/register\" || showSignUp ? (\n              <>\n                <h3>Register as {role_id == 1 ? \"Customer\" : \"Partner\"}</h3>\n                <Formik\n                  enableReinitialize\n                  initialValues={{\n                    first_name: \"\",\n                    last_name: \"\",\n                    email: \"\",\n                    password: \"\",\n                    confirm_password: \"\",\n                    company_name: \"\",\n                    phone: \"\",\n                    whole_number: \"\",\n                    user_type: role_id,\n                  }}\n                  validate={(values) => signUPValidator(values)}\n                  validateOnChange\n                  onSubmit={handleSignIn}\n                >\n                  {(formikBag) => {\n                    return (\n                      <Form>\n                        <div className=\"row\">\n                          <div className=\"col-lg-6\">\n                            <Field name=\"first_name\">\n                              {({ field }) => (\n                                <Input\n                                  {...field}\n                                  type=\"text\"\n                                  error={\n                                    formikBag.touched.first_name &&\n                                    formikBag.errors.first_name\n                                      ? formikBag.errors.first_name\n                                      : null\n                                  }\n                                  className=\"form-control\"\n                                  placeholder={\"First Name *\"}\n                                />\n                              )}\n                            </Field>\n                          </div>\n                          <div className=\"col-lg-6\">\n                            <Field name=\"last_name\">\n                              {({ field }) => (\n                                <Input\n                                  {...field}\n                                  type=\"text\"\n                                  error={\n                                    formikBag.touched.last_name &&\n                                    formikBag.errors.last_name\n                                      ? formikBag.errors.last_name\n                                      : null\n                                  }\n                                  className=\"form-control\"\n                                  placeholder={\"Last Name *\"}\n                                />\n                              )}\n                            </Field>\n                          </div>\n                        </div>\n                        <div className=\"row\">\n                          <div className=\"col-lg-6\">\n                            <Field name=\"phone\">\n                              {({ field }) => (\n                                <div>\n                                  <PhoneInput\n                                    {...field}\n                                    country=\"in\"\n                                    type=\"phone\"\n                                    value={formikBag.values.whole_number}\n                                    onChange={(phone, data) => {\n                                      formikBag.setFieldValue(\n                                        \"whole_number\",\n                                        phone\n                                      );\n                                      formikBag.setFieldValue(\n                                        \"country_code\",\n                                        data.dialCode\n                                      );\n                                      formikBag.setFieldValue(\n                                        \"phone\",\n                                        phone.slice(data.dialCode.length)\n                                      );\n                                    }}\n                                    error={\n                                      formikBag.touched.phone &&\n                                      formikBag.errors.phone\n                                        ? formikBag.errors.phone\n                                        : null\n                                    }\n                                    className=\"form-control\"\n                                    placeholder=\"Phone Number\"\n                                  />\n                                  {formikBag.errors.phone && (\n                                    <p\n                                      style={{\n                                        paddingTop: 5,\n                                        fontSize: 13,\n                                        color: \"red\",\n                                      }}\n                                    >\n                                      {formikBag.errors.phone}\n                                    </p>\n                                  )}\n                                </div>\n                              )}\n                            </Field>\n                          </div>\n                          <div className=\"col-lg-6\">\n                            <Field name=\"email\">\n                              {({ field }) => (\n                                <Input\n                                  {...field}\n                                  type=\"email\"\n                                  className=\"form-control\"\n                                  error={\n                                    formikBag.touched.email &&\n                                    formikBag.errors.email\n                                      ? formikBag.errors.email\n                                      : null\n                                  }\n                                  placeholder={\"Email Address\"}\n                                />\n                              )}\n                            </Field>\n                          </div>\n                        </div>\n                        <div className=\"row\">\n                          <div className=\"col-lg-12\">\n                            <Field name=\"company_name\">\n                              {({ field }) => (\n                                <Input\n                                  {...field}\n                                  type=\"text\"\n                                  error={\n                                    formikBag.touched.company_name &&\n                                    formikBag.errors.company_name\n                                      ? formikBag.errors.company_name\n                                      : null\n                                  }\n                                  className=\"form-control\"\n                                  placeholder={\"Company Name\"}\n                                />\n                              )}\n                            </Field>\n                          </div>\n                        </div>\n\n                        <div className=\"row\">\n                          <div className=\"col-lg-6\">\n                            <Field name=\"password\">\n                              {({ field }) => (\n                                <Input\n                                  {...field}\n                                  type=\"password\"\n                                  className=\"form-control\"\n                                  error={\n                                    formikBag.touched.password &&\n                                    formikBag.errors.password\n                                      ? formikBag.errors.password\n                                      : null\n                                  }\n                                  placeholder={\"Password *\"}\n                                />\n                              )}\n                            </Field>\n                          </div>\n\n                          <div className=\"col-lg-6\">\n                            <Field name=\"confirm_password\">\n                              {({ field }) => (\n                                <Input\n                                  {...field}\n                                  type=\"password\"\n                                  className=\"form-control\"\n                                  error={\n                                    formikBag.touched.confirm_password &&\n                                    formikBag.errors.confirm_password\n                                      ? formikBag.errors.confirm_password\n                                      : null\n                                  }\n                                  placeholder={\"Confirm Password *\"}\n                                />\n                              )}\n                            </Field>\n                          </div>\n                        </div>\n\n                        <p className=\"terms\">\n                          <input type=\"checkbox\" />\n                          Agree with our{\" \"}\n                          <Link target=\"_blank\" to=\"/terms\">\n                            Terms of Service\n                          </Link>{\" \"}\n                          and <a href=\"#\">Privacy Policy.</a>\n                        </p>\n\n                        <div className=\"py-3 text-center\">\n                          <button\n                            type=\"submit\"\n                            className=\"btn-primary btn-block btn text-white\"\n                          >\n                            REGISTER\n                          </button>\n                        </div>\n                        <p>\n                          Already have an account?{\" \"}\n                          {!isPopup ? (\n                            <Link to={\"/login?role_id=\" + role_id}>\n                              SIGN IN\n                            </Link>\n                          ) : (\n                            <a\n                              href=\"javascript:void()\"\n                              onClick={() => {\n                                setShowSignUp(false);\n                              }}\n                            >\n                              SIGN IN\n                            </a>\n                          )}\n                        </p>\n                        <FocusError />\n                      </Form>\n                    );\n                  }}\n                </Formik>\n              </>\n            ) : (\n              <>\n                {query.get(\"signin\") && (\n                  <span class=\"badge badge-success\">\n                    Your are Registed Succesfully enter your login details to\n                    get started.\n                  </span>\n                )}\n                <h3>Login</h3>\n                <Formik\n                  enableReinitialize\n                  initialValues={{\n                    phone: \"\",\n                    password: \"\",\n                  }}\n                  validate={(values) => loginValidator(values)}\n                  validateOnChange\n                  onSubmit={handleSubmit}\n                >\n                  {(formikBag) => {\n                    return (\n                      <Form className=\"small-form\">\n                        <div className=\"row\">\n                          <div className=\"col-lg-12\">\n                            <Field name=\"phone\">\n                              {({ field }) => (\n                                <Input\n                                  {...field}\n                                  type=\"text\"\n                                  className=\"form-control\"\n                                  placeholder={\"Mobile Number/Email\"}\n                                  error={\n                                    formikBag.touched.phone &&\n                                    formikBag.errors.phone\n                                      ? formikBag.errors.phone\n                                      : null\n                                  }\n                                />\n                              )}\n                            </Field>\n                          </div>\n                        </div>\n                        <div className=\"row\">\n                          <div className=\"col-lg-12\">\n                            <Field name=\"password\">\n                              {({ field }) => (\n                                <Input\n                                  {...field}\n                                  type=\"password\"\n                                  error={\n                                    formikBag.touched.password &&\n                                    formikBag.errors.password\n                                      ? formikBag.errors.password\n                                      : null\n                                  }\n                                  className=\"form-control\"\n                                  placeholder={\"Password\"}\n                                />\n                              )}\n                            </Field>\n                          </div>\n                        </div>\n                        <p className=\"text-right\" style={{ margin: 0 }}>\n                          <Link to={\"/forgot-password?role_id=\" + role_id}>\n                            Forgot Password\n                          </Link>\n                        </p>\n                        <div className=\" text-center\">\n                          <button\n                            type=\"submit\"\n                            className=\"btn-primary btn-block btn text-white\"\n                          >\n                            Login\n                          </button>\n                        </div>\n\n                        {role_id != 0 && (\n                          <p>\n                            Don't have an account?{\" \"}\n                            {!isPopup ? (\n                              <Link to={\"/register?role_id=\" + role_id}>\n                                REGISTER\n                              </Link>\n                            ) : (\n                              <a\n                                href=\"javascript:void()\"\n                                onClick={() => {\n                                  setShowSignUp(true);\n                                }}\n                              >\n                                REGISTER\n                              </a>\n                            )}\n                          </p>\n                        )}\n                        <FocusError />\n                      </Form>\n                    );\n                  }}\n                </Formik>\n              </>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  user: state.user,\n  allapi: state.allapi,\n});\n\nconst mapActionsToProps = {\n  loginUser,\n  signinUser,\n  getCountries,\n  getLocations,\n  forgetPassword,\n};\n\nexport default connect(mapStateToProps, mapActionsToProps)(Login);\n","import React, { Component,useState } from \"react\";\n\nconst Dashboard = () => {\n  const [showLogins,setLogins] = useState(false)\n  const [showSignup,setShowSignup] = useState(false)\n  return (\n    <div className=\"container-fluid\">\n        {/* Breadcrumbs*/}\n        <ol className=\"breadcrumb\">\n          <li className=\"breadcrumb-item\">\n            <a href=\"#\">Dashboard</a>\n          </li>\n          <li className=\"breadcrumb-item active\">My Dashboard</li>\n        </ol>\n        {/* Icon Cards*/}\n        <div className=\"row\">\n          <div className=\"col-xl-3 col-sm-6 mb-3\">\n            <div className=\"card text-white bg-primary o-hidden h-100\">\n              <div className=\"card-body\">\n                <div className=\"card-body-icon\">\n                  <i className=\"fa fa-fw fa-comments\" />\n                </div>\n                <div className=\"mr-5\">26 New Messages!</div>\n              </div>\n              <a className=\"card-footer text-white clearfix small z-1\" href=\"#\">\n                <span className=\"float-left\">View Details</span>\n                <span className=\"float-right\">\n                  <i className=\"fa fa-angle-right\" />\n                </span>\n              </a>\n            </div>\n          </div>\n          <div className=\"col-xl-3 col-sm-6 mb-3\">\n            <div className=\"card text-white bg-warning o-hidden h-100\">\n              <div className=\"card-body\">\n                <div className=\"card-body-icon\">\n                  <i className=\"fa fa-fw fa-list\" />\n                </div>\n                <div className=\"mr-5\">11 New Tasks!</div>\n              </div>\n              <a className=\"card-footer text-white clearfix small z-1\" href=\"#\">\n                <span className=\"float-left\">View Details</span>\n                <span className=\"float-right\">\n                  <i className=\"fa fa-angle-right\" />\n                </span>\n              </a>\n            </div>\n          </div>\n          <div className=\"col-xl-3 col-sm-6 mb-3\">\n            <div className=\"card text-white bg-success o-hidden h-100\">\n              <div className=\"card-body\">\n                <div className=\"card-body-icon\">\n                  <i className=\"fa fa-fw fa-shopping-cart\" />\n                </div>\n                <div className=\"mr-5\">123 New Orders!</div>\n              </div>\n              <a className=\"card-footer text-white clearfix small z-1\" href=\"#\">\n                <span className=\"float-left\">View Details</span>\n                <span className=\"float-right\">\n                  <i className=\"fa fa-angle-right\" />\n                </span>\n              </a>\n            </div>\n          </div>\n          <div className=\"col-xl-3 col-sm-6 mb-3\">\n            <div className=\"card text-white bg-danger o-hidden h-100\">\n              <div className=\"card-body\">\n                <div className=\"card-body-icon\">\n                  <i className=\"fa fa-fw fa-support\" />\n                </div>\n                <div className=\"mr-5\">13 New Tickets!</div>\n              </div>\n              <a className=\"card-footer text-white clearfix small z-1\" href=\"#\">\n                <span className=\"float-left\">View Details</span>\n                <span className=\"float-right\">\n                  <i className=\"fa fa-angle-right\" />\n                </span>\n              </a>\n            </div>\n          </div>\n        </div>\n        {/* Area Chart Example*/}\n        <div className=\"card mb-3\">\n          <div className=\"card-header\">\n            <i className=\"fa fa-area-chart\" /> Area Chart Example</div>\n          <div className=\"card-body\">\n            <canvas id=\"myAreaChart\" width=\"100%\" height={30} />\n          </div>\n          <div className=\"card-footer small text-muted\">Updated yesterday at 11:59 PM</div>\n        </div>\n      </div>\n      \n      \n      \n    \n  );\n};\n\nexport default Dashboard;\n","import React, { Component } from \"react\";\nimport BannerBg from \"../../assests/images/hero_bg.jpg\";\nimport BannerBg2 from \"../../assests/images/hero_bg_2.jpg\";\n\nconst Services = () => {\n  return (\n    <div>\n      <div\n        className=\"site-blocks-cover inner-page-cover overlay aos-init aos-animate\"\n        style={{\n          backgroundImage:\n            'url(\"images/xhero_bg_1.jpg.pagespeed.ic.tLtLHKGWU8.webp\")',\n          backgroundPosition: \"50% 1324.5px\",\n        }}\n        data-aos=\"fade\"\n        data-stellar-background-ratio=\"0.5\"\n      >\n        <div className=\"container\">\n          <div className=\"row align-items-center justify-content-center text-center\">\n            <div\n              className=\"col-md-8 aos-init aos-animate\"\n              data-aos=\"fade-up\"\n              data-aos-delay={400}\n            >\n              <h1 className=\"text-white font-weight-light text-uppercase font-weight-bold\">\n                Services\n              </h1>\n              <p className=\"breadcrumb-custom\">\n                <a href=\"index.html\">Home</a> <span className=\"mx-2\">&gt;</span>{\" \"}\n                <span>About Us</span>\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"site-section\">\n        <div className=\"container\">\n          <div className=\"row mb-5\">\n            <div\n              className=\"col-md-5 ml-auto mb-5 order-md-2 aos-init aos-animate\"\n              data-aos=\"fade\"\n            >\n              <img\n                src={BannerBg}\n                alt=\"Image\"\n                className=\"img-fluid rounded\"\n                data-pagespeed-url-hash={3249581224}\n                onload=\"pagespeed.CriticalImages.checkImageForCriticality(this);\"\n              />\n            </div>\n            <div\n              className=\"col-md-6 order-md-1 aos-init aos-animate\"\n              data-aos=\"fade\"\n            >\n              <div className=\"text-left pb-1 border-primary mb-4\">\n                <h2 className=\"text-primary\">Our History</h2>\n              </div>\n              <p>\n                Lorem ipsum dolor sit amet, consectetur adipisicing elit.\n                Blanditiis deleniti reprehenderit animi est eaque corporis!\n                Nisi, asperiores nam amet doloribus, soluta ut reiciendis.\n                Consequatur modi rem, vero eos ipsam voluptas.\n              </p>\n              <p className=\"mb-5\">\n                Error minus sint nobis dolor laborum architecto, quaerat.\n                Voluptatum porro expedita labore esse velit veniam laborum quo\n                obcaecati similique iusto delectus quasi!\n              </p>\n              <div className=\"row\">\n                <div className=\"col-md-12 mb-md-5 mb-0 col-lg-6\">\n                  <div className=\"unit-4\">\n                    <div className=\"unit-4-icon mb-3 mr-4\">\n                      <span className=\"text-primary flaticon-frontal-truck\" />\n                    </div>\n                    <div>\n                      <h3>Ground Shipping</h3>\n                      <p>\n                        Lorem ipsum dolor sit amet consectetur adipisicing elit.\n                        Perferendis quis.\n                      </p>\n                      <p className=\"mb-0\">\n                        <a href=\"#\">Learn More</a>\n                      </p>\n                    </div>\n                  </div>\n                </div>\n                <div className=\"col-md-12 mb-md-5 mb-0 col-lg-6\">\n                  <div className=\"unit-4\">\n                    <div className=\"unit-4-icon mb-3 mr-4\">\n                      <span className=\"text-primary flaticon-travel\" />\n                    </div>\n                    <div>\n                      <h3>Air Freight</h3>\n                      <p>\n                        Lorem ipsum dolor sit amet consectetur adipisicing elit.\n                        Perferendis quis.\n                      </p>\n                      <p className=\"mb-0\">\n                        <a href=\"#\">Learn More</a>\n                      </p>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div\n        className=\"site-section \"\n        \n      >\n        <div className=\"container\">\n          <div className=\"row justify-content-center mb-5\">\n            <div className=\"col-md-7 text-center border-primary\">\n              <h2\n                className=\"font-weight-light text-primary aos-init aos-animate\"\n                data-aos=\"fade\"\n              >\n                How It Works\n              </h2>\n            </div>\n          </div>\n          <div className=\"row\">\n            <div\n              className=\"col-md-6 col-lg-4 mb-5 mb-lg-0 aos-init aos-animate\"\n              data-aos=\"fade\"\n              data-aos-delay={100}\n            >\n              <div className=\"how-it-work-item\">\n                <span className=\"number\">1</span>\n                <div className=\"how-it-work-body\">\n                  <h2>Choose Your Service</h2>\n                  <p className=\"mb-5\">\n                    Lorem ipsum dolor sit amet consectetur adipisicing elit.\n                    Incidunt praesentium dicta consectetur fuga neque fugit a\n                    at. Cum quod vero assumenda iusto.\n                  </p>\n                  <ul className=\"ul-check list-unstyled\">\n                    <li >Error minus sint nobis dolor</li>\n                    <li >\n                      Voluptatum porro expedita labore esse\n                    </li>\n                    <li >\n                      Voluptas unde sit pariatur earum\n                    </li>\n                  </ul>\n                </div>\n              </div>\n            </div>\n            <div\n              className=\"col-md-6 col-lg-4 mb-5 mb-lg-0 aos-init aos-animate\"\n              data-aos=\"fade\"\n              data-aos-delay={200}\n            >\n              <div className=\"how-it-work-item\">\n                <span className=\"number\">2</span>\n                <div className=\"how-it-work-body\">\n                  <h2>Select Your Payment</h2>\n                  <p className=\"mb-5\">\n                    Lorem ipsum dolor sit amet consectetur adipisicing elit.\n                    Incidunt praesentium dicta consectetur fuga neque fugit a\n                    at. Cum quod vero assumenda iusto.\n                  </p>\n                  <ul className=\"ul-check list-unstyled\">\n                    <li >Error minus sint nobis dolor</li>\n                    <li >\n                      Voluptatum porro expedita labore esse\n                    </li>\n                    <li >\n                      Voluptas unde sit pariatur earum\n                    </li>\n                  </ul>\n                </div>\n              </div>\n            </div>\n            <div\n              className=\"col-md-6 col-lg-4 mb-5 mb-lg-0 aos-init aos-animate\"\n              data-aos=\"fade\"\n              data-aos-delay={300}\n            >\n              <div className=\"how-it-work-item\">\n                <span className=\"number\">3</span>\n                <div className=\"how-it-work-body\">\n                  <h2>Tracking Your Order</h2>\n                  <p className=\"mb-5\">\n                    Lorem ipsum dolor sit amet consectetur adipisicing elit.\n                    Incidunt praesentium dicta consectetur fuga neque fugit a\n                    at. Cum quod vero assumenda iusto.\n                  </p>\n                  <ul className=\"ul-check list-unstyled\">\n                    <li >Error minus sint nobis dolor</li>\n                    <li >\n                      Voluptatum porro expedita labore esse\n                    </li>\n                    <li >\n                      Voluptas unde sit pariatur earum\n                    </li>\n                  </ul>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      \n      \n    </div>\n  );\n};\n\nexport default Services;\n","import React, { Component } from \"react\";\nimport BannerBg from \"../../assests/images/jcb.jpeg\";\nimport BannerBg2 from \"../../assests/images/truck_image.png\";\nimport { Link } from \"react-router-dom\";\n\nconst Terms = () => {\n  return (\n    <div className=\"container main-content\">\n      <h1><strong>Terms of use of machines</strong></h1>\n<p>Each machine is rented for a period of 45 days renewable except for occasional work with drivers and a technical team to keep the machines in normal working order.</p>\n<p>In order to allow a better assistance of the brigade, the number of days worked per month cannot exceed 26 days of 16 hours maximum.</p>\n<p>Due to the diversity of work the count can be done by machine which case the period of availability will be case by case.<br/>The machines will be in Temporary Admission (AT) during the duration of the lease and the customer will be able to support LOKATOR to obtain this regime.</p>\n<h3>Price and delivery time</h3>\n<p>The prices are exclusive of VAT per day of 8 hours:<br/>Fuel, Mobilization and Demobilization at the expense of the customer;<br/>The delivery time is Forty-five (45) days for a machine and Seventy-five (75) days for a<br/>brigade of at least 3 machines.</p>\n<h3>Terms of use of Vehicles</h3>\n<p>Each vehicle is rented for a period of 45 days renewable with conductors.</p>\n<p>We are able to guarantee that you will be delivered a safe vehicle, well maintained</p>\n<p>Prices exclude VAT per day of 8 hours Fuel to the customer;</p>\n<p>The tenant must return the vehicle with the same level of fuel delivery; unlimited mileage is included in our rates.</p>\n<p>In case of the unfortunate event of a breakdown / accident is not due to violation of the law of traffic, your car will be replaced by another identical or greater.</p>\n    </div>\n  );\n};\n\nexport default Terms;\n","import React, { Component, useState, useEffect } from \"react\";\nimport { Formik, Field, Form } from \"formik\";\nimport { Modal, Input, FocusError, Select } from \"../../../components\";\nimport {\n  profileValidator,\n  changePasswordValidator,\n} from \"../../../utils/validation\";\nimport { getCountries, getLocations } from \"../../../store/actions/allapi\";\nimport {\n  handleChangePassword,\n  updateProfile,\n} from \"../../../store/actions/users\";\nimport { connect } from \"react-redux\";\nimport { get } from \"lodash\";\nimport { Link } from \"react-router-dom\";\nimport PhoneInput from \"react-phone-input-2\";\n\nconst Profile = ({\n  location: { pathname, search },\n  loginUser,\n  signinUser,\n  handleChangePassword,\n  updateProfile,\n  getCountries,\n  getLocations,\n  history,\n  allapi: { countries, locations },\n  user: { user },\n}) => {\n  const [changePassword, setChangePassword] = useState(false);\n\n  console.log(user);\n  useEffect(() => {\n    getCountries();\n  }, []);\n\n  useEffect(() => {\n    if (Boolean(user)) {\n      if (user.country_id) {\n        getLocations(user.country_id);\n      }\n    }\n  }, [user]);\n\n  const updatePassword = async (values) => {\n    handleChangePassword(values);\n  };\n  const [showSignup, setShowSignup] = useState(false);\n  return (\n    <div className=\"container-fluid profle-page\">\n        \n      <div className=\"col-lg-6 offset-3 mt-5\">\n        {changePassword ? (\n          <Formik\n            enableReinitialize\n            initialValues={{\n              old_password: \"\",\n              password: \"\",\n              confirm_password: \"\",\n            }}\n            validate={(values) => changePasswordValidator(values)}\n            validateOnChange\n            onSubmit={updatePassword}\n          >\n            {(formikBag) => {\n              return (\n                <Form>\n                  <div className=\"row\">\n                    <div className=\"col-lg-12\">\n                      <label>Old Password *</label>\n                      <Field name=\"old_password\">\n                        {({ field }) => (\n                          <Input\n                            {...field}\n                            type=\"password\"\n                            error={\n                              formikBag.touched.old_password &&\n                              formikBag.errors.old_password\n                                ? formikBag.errors.old_password\n                                : null\n                            }\n                            className=\"form-control\"\n                            placeholder={\"Old Password\"}\n                          />\n                        )}\n                      </Field>\n                    </div>\n                  </div>\n                  <div className=\"row\">\n                    <div className=\"col-lg-12\">\n                      <label>New Password *</label>\n                      <Field name=\"password\">\n                        {({ field }) => (\n                          <Input\n                            {...field}\n                            type=\"password\"\n                            error={\n                              formikBag.touched.password &&\n                              formikBag.errors.password\n                                ? formikBag.errors.password\n                                : null\n                            }\n                            className=\"form-control\"\n                            placeholder={\"Current Password\"}\n                          />\n                        )}\n                      </Field>\n                    </div>\n                  </div>\n\n                  <div className=\"row\">\n                    <div className=\"col-lg-12\">\n                      <label>Confirm Password *</label>\n                      <Field name=\"confirm_password\">\n                        {({ field }) => (\n                          <Input\n                            {...field}\n                            type=\"password\"\n                            error={\n                              formikBag.touched.confirm_password &&\n                              formikBag.errors.confirm_password\n                                ? formikBag.errors.confirm_password\n                                : null\n                            }\n                            className=\"form-control\"\n                            placeholder={\"Confirm Password\"}\n                          />\n                        )}\n                      </Field>\n                    </div>\n                  </div>\n\n                  <div className=\"py-3 text-center\">\n                    <button\n                      type=\"button\"\n                      onClick={() => setChangePassword(false)}\n                      className=\"btn-transprent btn change-password \"\n                    >\n                      Cancel\n                    </button>\n                    <button\n                      type=\"submit\"\n                      className=\"btn-primary btn text-white\"\n                    >\n                      Update\n                    </button>\n                  </div>\n\n                  <FocusError />\n                </Form>\n              );\n            }}\n          </Formik>\n        ) : (\n          <Formik\n            enableReinitialize\n            initialValues={{\n              first_name: get(user, \"first_name\", \"\"),\n              last_name: get(user, \"last_name\", \"\"),\n              company_name: get(user, \"company_name\", \"\"),\n              email: get(user, \"email\", \"\"),\n              phone: get(user, \"phone\", \"\"),\n            }}\n            validate={(values) => profileValidator(values)}\n            validateOnChange\n            onSubmit={updateProfile}\n          >\n            {(formikBag) => {\n              return (\n                <Form>\n                  <div className=\"row\">\n                    <div className=\"col-lg-6\">\n                      <Field name=\"first_name\">\n                        {({ field }) => (\n                          <Input\n                            {...field}\n                            type=\"text\"\n                            error={\n                              formikBag.touched.first_name &&\n                              formikBag.errors.first_name\n                                ? formikBag.errors.first_name\n                                : null\n                            }\n                            className=\"form-control\"\n                            placeholder={\"First Name *\"}\n                          />\n                        )}\n                      </Field>\n                    </div>\n                    <div className=\"col-lg-6\">\n                      <Field name=\"last_name\">\n                        {({ field }) => (\n                          <Input\n                            {...field}\n                            type=\"text\"\n                            error={\n                              formikBag.touched.last_name &&\n                              formikBag.errors.last_name\n                                ? formikBag.errors.last_name\n                                : null\n                            }\n                            className=\"form-control\"\n                            placeholder={\"Last Name *\"}\n                          />\n                        )}\n                      </Field>\n                    </div>\n                  </div>\n                  <div className=\"row\">\n                    <div className=\"col-lg-6\">\n                      <Field name=\"phone\">\n                        {({ field }) => (\n                          <div>\n                            <PhoneInput\n                              {...field}\n                              country=\"in\"\n                              type=\"phone\"\n                              disabled\n                              value={formikBag.values.phone}\n                              error={\n                                formikBag.touched.phone &&\n                                formikBag.errors.phone\n                                  ? formikBag.errors.phone\n                                  : null\n                              }\n                              \n                              placeholder=\"Phone Number\"\n                            />\n                            {formikBag.errors.phone && (\n                              <p\n                                style={{\n                                  paddingTop: 5,\n                                  fontSize: 13,\n                                  color: \"red\",\n                                }}\n                              >\n                                {formikBag.errors.phone}\n                              </p>\n                            )}\n                          </div>\n                        )}\n                      </Field>\n                    </div>\n                    <div className=\"col-lg-6\">\n                      <Field name=\"email\">\n                        {({ field }) => (\n                          <Input\n                            {...field}\n                            type=\"email\"\n                            disabled\n                            className=\"form-control\"\n                            error={\n                              formikBag.touched.email && formikBag.errors.email\n                                ? formikBag.errors.email\n                                : null\n                            }\n                            placeholder={\"Email Address\"}\n                          />\n                        )}\n                      </Field>\n                    </div>\n                  </div>\n                  <div className=\"row\">\n                    <div className=\"col-lg-12\">\n                      <Field name=\"company_name\">\n                        {({ field }) => (\n                          <Input\n                            {...field}\n                            type=\"text\"\n                            error={\n                              formikBag.touched.company_name &&\n                              formikBag.errors.company_name\n                                ? formikBag.errors.company_name\n                                : null\n                            }\n                            className=\"form-control\"\n                            placeholder={\"Company Name\"}\n                          />\n                        )}\n                      </Field>\n                    </div>\n                  </div>\n\n                  <div className=\"row\">\n                    <div className=\"col-lg-6\">\n                      <Field name=\"password\">\n                        {({ field }) => (\n                          <Input\n                            {...field}\n                            type=\"password\"\n                            className=\"form-control\"\n                            error={\n                              formikBag.touched.password &&\n                              formikBag.errors.password\n                                ? formikBag.errors.password\n                                : null\n                            }\n                            placeholder={\"Password *\"}\n                          />\n                        )}\n                      </Field>\n                    </div>\n\n                    <div className=\"col-lg-6\">\n                      <Field name=\"confirm_password\">\n                        {({ field }) => (\n                          <Input\n                            {...field}\n                            type=\"password\"\n                            className=\"form-control\"\n                            error={\n                              formikBag.touched.confirm_password &&\n                              formikBag.errors.confirm_password\n                                ? formikBag.errors.confirm_password\n                                : null\n                            }\n                            placeholder={\"Confirm Password *\"}\n                          />\n                        )}\n                      </Field>\n                    </div>\n                  </div>\n\n                  <div className=\"py-3 text-center\">\n                    <button\n                      type=\"submit\"\n                      className=\"btn-primary btn-block btn text-white\"\n                    >\n                      Save Profile\n                    </button>\n                  </div>\n\n                  <FocusError />\n                </Form>\n              );\n            }}\n          </Formik>\n        )}{\" \"}\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  user: state.user,\n  allapi: state.allapi,\n});\n\nconst mapActionsToProps = {\n  getCountries,\n  getLocations,\n  handleChangePassword,\n  updateProfile,\n};\n\nexport default connect(mapStateToProps, mapActionsToProps)(Profile);\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport BannerBg from \"../../assests/images/hero_bg.jpg\";\nimport BannerBg2 from \"../../assests/images/hero_bg_2.jpg\";\n\nconst NotFound = () => {\n  return (\n    <div>\n      <div className=\"page-wrap d-flex flex-row align-items-center\">\n        <div className=\"container\">\n          <div className=\"row justify-content-center\">\n            <div className=\"col-md-12 text-center\">\n              <span className=\"display-1 d-block\">404</span>\n              <div className=\"mb-4 lead\">The page you are looking for was not found.</div>\n              \n              <Link to=\"/\">Back to Home</Link>\n            </div>\n          </div>\n        </div>\n      </div>\n      \n    </div>\n  );\n};\n\nexport default NotFound;\n","import React, { Component,useState,useEffect } from \"react\";\nimport { addCountry,getCountries,editCountry } from \"../../../store/actions/allapi\";\nimport { connect } from \"react-redux\";\nimport { Modal,Input,FocusError } from \"../../../components\";\nimport { Formik, Field, Form } from \"formik\";\nimport { countryValidator } from \"../../../utils/validation\";\nimport { get } from \"lodash\";\nconst CountryManagement = ({getCountries,addCountry,editCountry,allapi:{countries=[]}}) => {\n\n\n  useEffect(()=>{\n    getCountries()\n  },[])\n  const [showModal,setShowModal] = useState(false)\n  const [editValue,setEditValue] = useState(null)\n  const handleSubmit = (values) => {\n    setShowModal(false);\n\n    if(editValue!==null){\n      editCountry({...values,id:get(editValue,'id','')})\n    }\n    else{\n      addCountry(values)\n    }\n    setEditValue(null)\n    \n  }\n\n  \n  \n  return (\n    <div className=\"container-fluid\">\n        {/* Breadcrumbs*/}\n        <ol className=\"breadcrumb\">\n          <li className=\"breadcrumb-item\">\n            <a href=\"#\">Dashboard</a>\n          </li>\n          <li className=\"breadcrumb-item active\">Country Management</li>\n        </ol>\n        <div className=\"d-flex btn_box\">\n        <button onClick={()=> {\n          setEditValue(null)\n          setShowModal(true)}}  className=\"btn btn-primary text-white\">Add Country</button>\n\n        </div>\n\n        {/* Area Chart Example*/}\n        <div className=\"card mb-3\">\n          \n          <table class=\"table table-striped\">\n  <thead>\n    <tr>\n      \n      <th scope=\"col\">Name</th>\n      <th scope=\"col\">Country Code</th>\n      <th scope=\"col\">Actions</th>\n      \n    </tr>\n  </thead>\n  <tbody>\n    {countries.map((item)=>{\n        return (\n          <tr>\n      <td>{item.name}</td>\n      <td>{item.country_code}</td>\n      <td><button \n      onClick={()=> {\n        setShowModal(true)\n        setEditValue(item)\n      }}\n      className=\"btn btn-primary text-white\"><i className=\"fa fa-edit\"></i></button></td>\n      \n      \n      \n    </tr>\n      )\n    })}\n    \n  </tbody>\n</table>\n  {/* <ul class=\"pagination align-center\">\n    <li class=\"page-item\"><a class=\"page-link\" href=\"#\" aria-label=\"Previous\">&laquo;</a></li>\n    <li class=\"page-item\"><a class=\"page-link\" href=\"#\">1</a></li>\n    <li class=\"page-item active\"><a class=\"page-link \" href=\"#\">2</a></li>\n    <li class=\"page-item\"><a class=\"page-link\" href=\"#\">3</a></li>\n    <li class=\"page-item\"><a class=\"page-link\" href=\"#\">4</a></li>\n    <li class=\"page-item\"><a class=\"page-link\" href=\"#\">5</a></li>\n    <li class=\"page-item\"><a class=\"page-link\" href=\"#\">6</a></li>\n    <li class=\"page-item\"><a class=\"page-link\" href=\"#\">7</a></li>\n    <li class=\"page-item\"><a class=\"page-link\" href=\"#\">8</a></li>\n    <li class=\"page-item\"><a class=\"page-link\" href=\"#\">9</a></li>\n    <li class=\"page-item\"><a class=\"page-link\" href=\"#\" aria-label=\"Next\">&raquo;</a></li>\n  </ul> */}\n\n          </div>\n         \n          <Modal show={showModal}\n       onClose={()=> {\n        setEditValue(null)\n         setShowModal(false)}} content={<div className=\"modal_form\">\n\n<Formik\n                enableReinitialize\n                initialValues={{\n                  name:get(editValue,'name',''),\n                  country_code:get(editValue,'country_code','')\n                }}\n                validate={(values) => countryValidator(values)}\n                validateOnChange\n                onSubmit={handleSubmit}\n              >\n                {(formikBag) => {\n                  return (\n                    <Form>\n                      <h4>{editValue!==null?\"Update\":\"Add\"} Country</h4>\n                        \n                    <Field name=\"name\">\n                        {({ field }) => (\n                          <Input\n                            {...field}\n                            type=\"text\"\n                            className=\"form-control\"\n                            placeholder={\"Country Name\"}\n                            error={\n                              formikBag.touched.name &&\n                              formikBag.errors.name\n                                ? formikBag.errors.name\n                                : null\n                            }\n                          />\n                        )}\n                      </Field>\n\n                      <Field name=\"country_code\">\n                        {({ field }) => (\n                          <Input\n                            {...field}\n                            type=\"text\"\n                           className=\"form-control\"\n                            placeholder={\"Country Code\"}\n                            error={\n                              formikBag.touched.country_code &&\n                              formikBag.errors.country_code\n                                ? formikBag.errors.country_code\n                                : null\n                            }\n                          />\n                        )}\n                      </Field>\n                      \n                        \n                      \n                      \n                      <div className=\"btn-group\">\n                      <button type=\"button\" onClick={()=> setShowModal(false)}  className=\"btn-transprent  btn text-white\">\n                        Cancel\n                        </button>\n                        <button type=\"submit\" className=\"btn-primary  btn text-white\">\n                      {editValue!==null?\"Update\":\"Add\"}\n                        </button>\n                      </div>\n                    \n                      <FocusError />\n                    </Form>\n                  );\n                }}\n              </Formik>\n                </div>} />    \n      </div>\n      \n      \n      \n    \n  );\n};\n\n\n\nconst mapStateToProps = (state) => ({\n  user: state.user,\n  allapi:state.allapi\n});\n\nconst mapActionsToProps = {\n  addCountry,\n  getCountries,\n  editCountry\n    \n};\n\nexport default connect(mapStateToProps, mapActionsToProps)(CountryManagement);\n\n\n","import React, { Component,useState,useEffect } from \"react\";\nimport { getCapacity,addCapcity,editCapacity } from \"../../../store/actions/allapi\";\nimport {Pagination,Modal,Input,FocusError,Search,ConfirmModal} from '../../../components';\nimport { Formik, Field, Form } from \"formik\";\nimport {capacityValidator }from '../../../utils/validation'\nimport { connect } from \"react-redux\";\nimport {get} from 'lodash';\nconst CapacityManagement = ({getCapacity,editCapacity,addCapcity,allapi:{capacity}}) => {\n  const [activePage,setActivePage] = useState(0)\n  const [showModal,setShowModal] = useState(\"\")\n  const [searchValue,setSearchValue] = useState(\"\")\n  const [changeStatus, setChangeStatus] = useState(\"\");\n\n  useEffect(()=>{\n    getCapacity(activePage,searchValue)\n  },[activePage])\n\n  const handleSubmit = (values)=>{\n    setActivePage(0)\n    if(showModal == 'true'){\n      addCapcity(values);  \n    }\n    else{\n      editCapacity({...values,id:showModal.id})\n    }\n    \n    setShowModal(false)\n  }\n  \n  \n  return (\n    <div className=\"container-fluid\">\n        {/* Breadcrumbs*/}\n        <ol className=\"breadcrumb\">\n          <li className=\"breadcrumb-item\">\n            <a href=\"#\">Dashboard</a>\n          </li>\n          <li className=\"breadcrumb-item active\">Capacity</li>\n        </ol>\n        <div className=\"header-with-search mb-20\">\n        <Search setSearchValue={setSearchValue}\n              searchValue={searchValue} handleClick={() => getCapacity(0, searchValue)} handleClear={()=> {getCapacity(activePage,\"\")\n              setSearchValue(\"\")}\n              } /> \n        <button  onClick={()=> setShowModal(\"true\")} className=\"btn btn-primary text-white\">\n          Add Capacity\n          </button>\n        </div>\n        <div className=\"card mb-3\">\n          \n          <table class=\"table table-striped\">\n  <thead>\n    <tr>\n      \n      <th scope=\"col\">Name</th>\n      <th scope=\"col\">Status</th>\n      \n      <th style={{width:100}}scope=\"col\">Actions</th>\n      \n      \n    </tr>\n  </thead>\n  <tbody>\n    {get(capacity,'capacityList',[]).map((item)=>{\n        return (\n          <tr>\n      <td>{item.capacity}</td>\n      <td>\n                    <input\n                      type=\"checkbox\"\n                      checked={item.status}\n                      onChange={() => {\n                        \n                        setChangeStatus({\n                          ...item,\n                          id: item.id,\n                          status: item.status == 1 ? 0 : 1,\n                        })\n                      }}\n                      id={\"id\" + item.id}\n                    />\n                    <label htmlFor={\"id\" + item.id}>Label</label>\n                  </td>\n      <td><button \n      onClick={()=> setShowModal(item)}\n      className=\"btn btn-primary text-white\"><i className=\"fa fa-pencil\"></i></button></td>\n    </tr>\n      )\n    })}\n    \n  </tbody>\n</table>\n<Pagination totalPage={get(capacity,\"totalPage\",1)} activePage={activePage} updateActivePage={(pageNo)=> {\n   setActivePage(pageNo)\n }}/> \n  \n\n          </div>\n         \n        <Modal\n        header={showModal == 'true'  ? \"Add Capacity\":\"Edit Capacity\"}\n        show={showModal} onClose={()=> setShowModal(false)} content={<div className=\"popup-form\">\n        \n          <Formik\n\n                enableReinitialize\n                initialValues={{\n                  capacity:get(showModal,'capacity',''),\n                }}\n                validate={(values) => capacityValidator(values)}\n                validateOnChange\n                onSubmit={handleSubmit}\n              >\n                {(formikBag) => {\n                  return (\n                    <Form className=\"small-form\">\n                      <div className=\"row\">\n                        <div  className=\"col-lg-12\">\n                        \n                        \n                    <Field name=\"capacity\">\n                        {({ field }) => (\n                          <Input\n                            {...field}\n                            type=\"text\"\n                            className=\"form-control\"\n                            placeholder={\"Capacity Name\"}\n                            error={\n                              formikBag.touched.capacity &&\n                              formikBag.errors.capacity\n                                ? formikBag.errors.capacity\n                                : null\n                            }\n                          />\n                        )}\n                      </Field>\n                      </div>\n                      </div>\n                        \n                      \n                      \n                      \n                        <button type=\"submit\" className=\"btn-primary btn-block btn text-white\">\n                        Submit\n                        </button>\n                      \n                      \n    \n                      <FocusError />\n                    </Form>\n                  );\n                }}\n              </Formik>\n        </div>}/>\n        <ConfirmModal show={changeStatus!==\"\"}  handleClose={()=> { setChangeStatus(\"\")}} handleModal={()=> { \n        editCapacity(changeStatus)\n        setChangeStatus(\"\")\n        }} content={\"Sure you want to change the status of Capcity !\"}/>\n      </div>\n      \n      \n      \n    \n  );\n};\n\n\n\nconst mapStateToProps = (state) => ({\n  user: state.user,\n  allapi:state.allapi\n});\n\nconst mapActionsToProps = {\n  getCapacity,\n  addCapcity,\n  editCapacity\n  \n};\n\nexport default connect(mapStateToProps, mapActionsToProps)(CapacityManagement);\n\n\n","import React, { Component, useState, useEffect } from \"react\";\nimport { getType, addType, editType } from \"../../../store/actions/allapi\";\nimport { Pagination, Modal, Input, FocusError,Search,ConfirmModal } from \"../../../components\";\nimport { Formik, Field, Form } from \"formik\";\nimport { typesValidator } from \"../../../utils/validation\";\nimport { connect } from \"react-redux\";\nimport { get } from \"lodash\";\nconst TypesManagment = ({ getType, editType, addType, allapi: { types } }) => {\n  const [activePage, setActivePage] = useState(0);\n  const [showModal, setShowModal] = useState(\"\");\n  const [searchValue, setSearchValue] = useState(\"\");\n  const [changeStatus, setChangeStatus] = useState(\"\");\n\n  useEffect(() => {\n    getType(activePage, searchValue);\n  }, [activePage]);\n\n  const handleSubmit = (values) => {\n    setActivePage(0);\n    if (showModal == \"true\") {\n      addType(values);\n    } else {\n      editType({ ...values, id: showModal.id });\n    }\n\n    setShowModal(false);\n  };\n\n  return (\n    <div className=\"container-fluid\">\n      {/* Breadcrumbs*/}\n      <ol className=\"breadcrumb\">\n        <li className=\"breadcrumb-item\">\n          <a href=\"#\">Dashboard</a>\n        </li>\n        <li className=\"breadcrumb-item active\">Type</li>\n      </ol>\n      <div className=\"header-with-search mb-20\">\n      <Search setSearchValue={setSearchValue}\n              searchValue={searchValue} handleClick={() => getType(0, searchValue)} handleClear={()=> {getType(activePage,\"\")\n              setSearchValue(\"\")}\n              } /> \n        <button\n          onClick={() => setShowModal(\"true\")}\n          className=\"btn btn-primary text-white\"\n        >\n          Add Type\n        </button>\n      </div>\n      <div className=\"card mb-3\">\n        <table class=\"table table-striped\">\n          <thead>\n            <tr>\n              <th scope=\"col\">Name</th>\n              <th scope=\"col\">Status</th>\n\n              <th style={{ width: 100 }} scope=\"col\">\n                Actions\n              </th>\n            </tr>\n          </thead>\n          <tbody>\n            {get(types, \"typeList\", []).map((item) => {\n              return (\n                <tr>\n                  <td>{item.type}</td>\n                  <td>\n                    <input\n                      type=\"checkbox\"\n                      checked={item.status}\n                      onChange={() => {\n                        \n                        setChangeStatus({\n                          ...item,\n                          id: item.id,\n                          status: item.status == 1 ? 0 : 1,\n                        })\n                      }}\n                      id={\"id\" + item.id}\n                    />\n                    <label htmlFor={\"id\" + item.id}>Label</label>\n                  </td>\n                  <td>\n                    <button\n                      onClick={() => setShowModal(item)}\n                      className=\"btn btn-primary text-white\"\n                    >\n                      <i className=\"fa fa-pencil\"></i>\n                    </button>\n                  </td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n        <Pagination\n          totalPage={get(types, \"totalPage\", 1)}\n          activePage={activePage}\n          updateActivePage={(pageNo) => {\n            setActivePage(pageNo);\n          }}\n        />\n      </div>\n\n      <Modal\n        header={showModal == \"true\" ? \"Add Type\" : \"Edit Type\"}\n        show={showModal}\n        onClose={() => setShowModal(false)}\n        content={\n          <div className=\"popup-form\">\n            <Formik\n              enableReinitialize\n              initialValues={{\n                type: get(showModal, \"type\", \"\"),\n              }}\n              validate={(values) => typesValidator(values)}\n              validateOnChange\n              onSubmit={handleSubmit}\n            >\n              {(formikBag) => {\n                return (\n                  <Form className=\"small-form\">\n                    <div className=\"row\">\n                      <div className=\"col-lg-12\">\n                        <Field name=\"type\">\n                          {({ field }) => (\n                            <Input\n                              {...field}\n                              type=\"text\"\n                              className=\"form-control\"\n                              placeholder={\"Type Name\"}\n                              error={\n                                formikBag.touched.type && formikBag.errors.type\n                                  ? formikBag.errors.type\n                                  : null\n                              }\n                            />\n                          )}\n                        </Field>\n                      </div>\n                    </div>\n\n                    <button\n                      type=\"submit\"\n                      className=\"btn-primary btn-block btn text-white\"\n                    >\n                      Submit\n                    </button>\n\n                    <FocusError />\n                  </Form>\n                );\n              }}\n            </Formik>\n          </div>\n        }\n      />\n      <ConfirmModal show={changeStatus!==\"\"}  handleClose={()=> { setChangeStatus(\"\")}} handleModal={()=> { \n        editType(changeStatus)\n        setChangeStatus(\"\")\n        }} content={\"Sure you want to change the status of Type !\"}/>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  user: state.user,\n  allapi: state.allapi,\n});\n\nconst mapActionsToProps = {\n  getType,\n  addType,\n  editType,\n};\n\nexport default connect(mapStateToProps, mapActionsToProps)(TypesManagment);\n","import React, { Component, useState, useEffect } from \"react\";\nimport { getContact } from \"../../../store/actions/allapi\";\nimport {\n  handleChangePassword,\n  updateProfile,\n} from \"../../../store/actions/users\";\nimport { connect } from \"react-redux\";\nimport { Pagination, Search } from \"../../../components/.\";\nimport { get } from \"lodash\";\nconst ContactLeads = ({ getContact, allapi: { contacts = [] } }) => {\n  const [activePage, setActivePage] = useState(0);\n  const [searchValue, setSearchValue] = useState(\"\");\n\n  useEffect(() => {\n    getContact(activePage, \"\");\n  }, [activePage]);\n\n  return (\n    <div className=\"container-fluid\">\n      {/* Breadcrumbs*/}\n      <ol className=\"breadcrumb\">\n        <li className=\"breadcrumb-item\">\n          <a href=\"#\">Dashboard</a>\n        </li>\n        <li className=\"breadcrumb-item active\">Contact Leads</li>\n      </ol>\n\n      <div className=\"header-with-search mb-20\">\n        <Search\n          setSearchValue={setSearchValue}\n          searchValue={searchValue}\n          handleClick={() => getContact(0, searchValue)}\n          handleClear={() => {\n            getContact(activePage, \"\");\n            setSearchValue(\"\");\n          }}\n        />\n      </div>\n      <div className=\"card mb-3\">\n        <table class=\"table table-striped\">\n          <thead>\n            <tr>\n              <th scope=\"col\">Name</th>\n              <th scope=\"col\">Email</th>\n              <th scope=\"col\">Business Name</th>\n              <th scope=\"col\">Phone</th>\n              <th scope=\"col\">Message</th>\n            </tr>\n          </thead>\n          <tbody>\n            {get(contacts, \"contactUsData\", []).map((item) => {\n              return (\n                <tr>\n                  <td>{item.name}</td>\n                  <td>{item.email}</td>\n                  <td>{item.company_name}</td>\n                  <td>{item.phone}</td>\n                  <td>{item.message}</td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n        <Pagination\n          totalPage={get(contacts, \"totalPage\", 1)}\n          activePage={activePage}\n          updateActivePage={(pageNo) => {\n            setActivePage(pageNo);\n          }}\n        />\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  user: state.user,\n  allapi: state.allapi,\n});\n\nconst mapActionsToProps = {\n  getContact,\n};\n\nexport default connect(mapStateToProps, mapActionsToProps)(ContactLeads);\n","import React, { Component, useState, useEffect } from \"react\";\nimport { getInquiry } from \"../../../store/actions/allapi\";\nimport { Pagination, Search } from \"../../../components\";\nimport { Formik, Field, Form } from \"formik\";\nimport { capacityValidator } from \"../../../utils/validation\";\nimport { connect } from \"react-redux\";\nimport { get } from \"lodash\";\nimport moment from \"moment\";\nconst CapacityManagement = ({ getInquiry, allapi: { inquiry } }) => {\n  const [activePage, setActivePage] = useState(0);\n  const [showModal, setShowModal] = useState(\"\");\n  const [searchValue, setSearchValue] = useState(\"\");\n  const [changeStatus, setChangeStatus] = useState(\"\");\n\n  useEffect(() => {\n    getInquiry();\n  }, []);\n\n  return (\n    <div className=\"container-fluid\">\n      {/* Breadcrumbs*/}\n      <ol className=\"breadcrumb\">\n        <li className=\"breadcrumb-item\">\n          <a href=\"#\">Dashboard</a>\n        </li>\n        <li className=\"breadcrumb-item active\">Capacity</li>\n      </ol>\n      <div className=\"header-with-search mb-20\">\n        <Search\n          setSearchValue={setSearchValue}\n          searchValue={searchValue}\n          handleClick={() => getInquiry({ search: searchValue })}\n          handleClear={() => {\n            getInquiry({ search: \"\" });\n            setSearchValue(\"\");\n          }}\n        />\n      </div>\n      <div className=\"card mb-3\">\n        <table class=\"table table-striped\">\n          <thead>\n            <tr>\n              <th scope=\"col\">Name</th>\n              <th scope=\"col\">Email</th>\n              <th scope=\"col\">Phone </th>\n              <th style={{ width: 180 }} scope=\"col\">\n                Compnay Name\n              </th>\n              <th style={{ width: 120 }} scope=\"col\">\n                Price Type\n              </th>\n              <th scope=\"col\">Delivery Date</th>\n              <th scope=\"col\">Location</th>\n              <th scope=\"col\">Requirement</th>\n              <th scope=\"col\">Created At</th>\n            </tr>\n          </thead>\n          <tbody>\n            {get(inquiry, \"inquiryData\", []).map((item) => {\n              return (\n                <tr>\n                  <td>{item.name}</td>\n                  <td>{item.email}</td>\n                  <td>{item.phone_no}</td>\n                  <td>{item.company_name}</td>\n                  <td>{item.price_type}</td>\n                  <td>{moment(item.delivery_date).format(\"MMMM Do YYYY \")}</td>\n                  <td>{item.location}</td>\n                  <td>{item.requirment}</td>\n                  <td>{moment(item.created_at).format(\"MMMM Do YYYY \")}</td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n        <Pagination\n          totalPage={get(inquiry, \"totalPage\", 1)}\n          activePage={activePage}\n          updateActivePage={(pageNo) => {\n            setActivePage(pageNo);\n          }}\n        />\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  user: state.user,\n  allapi: state.allapi,\n});\n\nconst mapActionsToProps = {\n  getInquiry,\n};\n\nexport default connect(mapStateToProps, mapActionsToProps)(CapacityManagement);\n","import React, { Component, useState, useEffect } from \"react\";\nimport { getOrders, updateStatus } from \"../../../store/actions/allapi\";\nimport { connect } from \"react-redux\";\nimport moment from \"moment\";\nimport { ConfirmModal } from \"../../../components\";\n\nimport { get } from \"lodash\";\nconst Orders = ({\n  getOrders,\n  allapi: { countries = [], orders = [] },\n  updateStatus,\n  user: { user },\n  location: { search },\n}) => {\n  const query = new URLSearchParams(search);\n  const [searchVal, setSearch] = useState(query.get(\"query\"));\n  const [status, setStatus] = useState(0);\n  const [selectedOrder, setSelectedOrder] = useState(\"\");\n  let bodyData = {\n    role: localStorage.getItem(\"role_id\"),\n    page: 0,\n    search: searchVal,\n    user_id: JSON.parse(localStorage.getItem(\"user_data\")).id,\n    status: status,\n  };\n  useEffect(() => {\n    getOrders(bodyData);\n  }, [searchVal, status]);\n\n  return (\n    <div className=\"container-fluid\">\n      {/* Breadcrumbs*/}\n      <ol className=\"breadcrumb\">\n        <li className=\"breadcrumb-item\">\n          <a href=\"#\">Dashboard</a>\n        </li>\n        <li className=\"breadcrumb-item active\">Orders</li>\n      </ol>\n      <div className=\"search_form  with-select\">\n        <div className=\"form-group\">\n          <input\n            className=\"form-control\"\n            value={searchVal}\n            onChange={(e) => setSearch(e.target.value)}\n            type=\"text\"\n            placeholder=\"Search for orderId or location\"\n          />\n          <button className=\"btn btn-primary text-white\" type=\"submit\">\n            Search\n          </button>\n        </div>\n        <select\n          value={status}\n          onChange={(e) => {\n            setStatus(e.target.value);\n          }}\n        >\n          <option value=\"1\">Approved</option>\n          <option value=\"0\">Proccesing</option>\n        </select>\n      </div>\n\n      <div className=\"order-listing\">\n        {get(orders, \"orderData\", []).map((order) => {\n          return (\n            <div className=\"card\">\n              <div className=\"card-header\">\n                <div className=\"row\">\n                  <div className=\"col-lg-6\">\n                    <p>\n                      <strong>Order Placed</strong>:{\" \"}\n                      {moment(order.order_date).format(\"MMMM Do YYYY \")}\n                    </p>\n                    <p>\n                      <strong>Delivery Location</strong>:{\" \"}\n                      {order.delivery_location}\n                    </p>\n                  </div>\n                  <div className=\"col-lg-6\">\n                    <p>\n                      <strong>Order ID</strong>: {order.order_id}\n                    </p>\n                  </div>\n                </div>\n              </div>\n              <div className=\"card-body\">\n                <h3>Customer Details</h3>\n\n                <div className=\"bg-success cm-details\">\n                  <p>\n                    <strong>Name:</strong>{\" \"}\n                    {get(order, \"user_detail.first_name\", \"\")}{\" \"}\n                    {get(order, \"user_detail.last_name\", \"\")}\n                  </p>\n                  <p>\n                    <strong>Email:</strong>{\" \"}\n                    {get(order, \"user_detail.email\", \"\")}{\" \"}\n                  </p>\n                  <p>\n                    <strong>Phone No:</strong>{\" \"}\n                    {get(order, \"user_detail.phone\", \"\")}\n                  </p>\n                  <p>\n                    <strong>Work Start Date:</strong>{\" \"}\n                    {moment(order.work_start_date).format(\"MMMM Do YYYY \")}\n                  </p>\n                  <p>\n                    <strong>Work End Date :</strong>{\" \"}\n                    {moment(order.work_end_date).format(\"MMMM Do YYYY \")}\n                  </p>\n                </div>\n\n                <span\n                  className={`badge text-white ${\n                    order.status == 0 ? \"bg-warning\" : \"bg-success\"\n                  } `}\n                >\n                  {order.status == 0 ? \"Processing\" : \"Approved\"}\n                </span>\n                <button\n                  onClick={() => {\n                    setSelectedOrder({\n                      status: order.status == 0 ? 1 : 0,\n                      order_id: order.id,\n                    });\n                  }}\n                  className=\"btn btn-warning btn-sm text-white status_btn\"\n                >\n                  {order.status == 1\n                    ? \"Update Status to Processing\"\n                    : \"Update Status to Approved\"}\n                </button>\n                <table class=\"table table-striped\">\n                  <thead>\n                    <tr>\n                      <th scope=\"col\">Name</th>\n                      <th scope=\"col\">Image</th>\n                      <th scope=\"col\">Category</th>\n\n                      <th scope=\"col\">Quantity</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {get(order, \"order_detail\", []).map((item) => {\n                      return (\n                        <tr>\n                          <td>\n                            {get(item, \"machine_products.machine_name\", \"N/A\")}\n                          </td>\n                          <td>\n                            {\" \"}\n                            <img\n                              src={get(\n                                item,\n                                \"machine_products.machine_image\",\n                                \"\"\n                              )}\n                            />\n                          </td>\n                          <td>\n                            {get(\n                              item,\n                              \"machine_categories.category_name\",\n                              \"N/A\"\n                            )}\n                          </td>\n                          <td>{get(item, \"quantity\", \"N/A\")}</td>\n                        </tr>\n                      );\n                    })}\n                  </tbody>\n                </table>\n              </div>\n            </div>\n          );\n        })}\n      </div>\n      <ConfirmModal\n        show={selectedOrder !== \"\"}\n        content={\n          <>\n            Are you sure!\n            <br /> you want to change the current status{\" \"}\n            {selectedOrder.status != 0 ? \"Processing\" : \"Approved\"} to{\" \"}\n            {selectedOrder.status == 0 ? \"Processing\" : \"Approved\"}\n          </>\n        }\n        handleClose={() => {\n          setSelectedOrder(\"\");\n        }}\n        handleModal={() => {\n          updateStatus(selectedOrder);\n        }}\n      />\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  user: state.user,\n  allapi: state.allapi,\n});\n\nconst mapActionsToProps = {\n  getOrders,\n  updateStatus,\n};\n\nexport default connect(mapStateToProps, mapActionsToProps)(Orders);\n","import React, { Component, useState, useEffect } from \"react\";\nimport { getUsers } from \"../../../store/actions/allapi\";\nimport { Pagination, Search } from \"../../../components/.\";\n\nimport { connect } from \"react-redux\";\nimport { get } from \"lodash\";\nconst ContactLeads = ({ getUsers, allapi: { users } }) => {\n  const [activePage, setActivePage] = useState(0);\n  const [searchValue, setSearchValue] = useState(\"\");\n\n  useEffect(() => {\n    getUsers(activePage, \"\");\n  }, [activePage]);\n  const [showLogins, setLogins] = useState(false);\n  const [showSignup, setShowSignup] = useState(false);\n  return (\n    <div className=\"container-fluid\">\n      {/* Breadcrumbs*/}\n      <ol className=\"breadcrumb\">\n        <li className=\"breadcrumb-item\">\n          <a href=\"#\">Dashboard</a>\n        </li>\n        <li className=\"breadcrumb-item active\">User List</li>\n      </ol>\n\n      <div className=\"header-with-search mb-20\">\n        <Search\n          setSearchValue={setSearchValue}\n          searchValue={searchValue}\n          handleClick={() => getUsers(0, searchValue)}\n          handleClear={() => {\n            getUsers(activePage, \"\");\n            setSearchValue(\"\");\n          }}\n        />\n      </div>\n      <div className=\"card mb-3\">\n        <table class=\"table table-striped\">\n          <thead>\n            <tr>\n              <th scope=\"col\">Name</th>\n              <th scope=\"col\">Email</th>\n              <th scope=\"col\">Company Name</th>\n              <th scope=\"col\">Phone</th>\n              <th scope=\"col\">User Type</th>\n\n              <th scope=\"col\">Status</th>\n            </tr>\n          </thead>\n          <tbody>\n            {get(users, \"usersData\", []).map((item) => {\n              return (\n                <tr>\n                  <td>\n                    {item.first_name} {item.last_name}\n                  </td>\n                  <td>{item.email}</td>\n                  <td>{item.company_name}</td>\n                  <td>{item.phone}</td>\n                  <td>\n                    {item.user_type == 1\n                      ? \"Customer\"\n                      : item.role_id == 0\n                      ? \"Admin\"\n                      : \"Partner\"}\n                  </td>\n\n                  <td>{item.status == 1 ? \"Verifed\" : \"Not Verfied\"}</td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n        <Pagination\n          totalPage={get(users, \"totalPage\", 1)}\n          activePage={activePage}\n          updateActivePage={(pageNo) => {\n            setActivePage(pageNo);\n          }}\n        />\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  user: state.user,\n  allapi: state.allapi,\n});\n\nconst mapActionsToProps = {\n  getUsers,\n};\n\nexport default connect(mapStateToProps, mapActionsToProps)(ContactLeads);\n","import React, { Component, useState, useEffect } from \"react\";\nimport {\n  getCategory,\n  addCategory,\n  editCategory,\n  uploadImage,\n  selectImage,\n  getCapacity,\n} from \"../../../store/actions/allapi\";\nimport {\n  Pagination,\n  Modal,\n  Input,\n  ConfirmModal,\n  FocusError,\n  Search,\n} from \"../../../components\";\nimport { Formik, Field, Form } from \"formik\";\nimport { categoryValidator } from \"../../../utils/validation\";\nimport { connect } from \"react-redux\";\nimport { get } from \"lodash\";\nconst CategoryManagment = ({\n  getCategory,\n  editCategory,\n  uploadImage,\n  selectImage,\n  addCategory,\n  allapi: { category, selectedImage },\n}) => {\n  const [activePage, setActivePage] = useState(0);\n  const [showModal, setShowModal] = useState(\"\");\n  const [searchValue, setSearchValue] = useState(\"\");\n  const [changeStatus, setChangeStatus] = useState(\"\");\n  \n  useEffect(() => {\n    getCategory(activePage, searchValue);\n  }, [activePage]);\n\n  const handleSubmit = (values) => {\n    setActivePage(0);\n    if (showModal == \"true\") {\n      addCategory({ ...values, category_image: selectedImage });\n    } else {\n      editCategory({\n        ...values,\n        id: showModal.id,\n        category_image: selectedImage,\n      });\n    }\n    setShowModal(false);\n    selectedImage(\"\");\n  };\n\n  return (\n    <div className=\"container-fluid\">\n      {/* Breadcrumbs*/}\n      <ol className=\"breadcrumb\">\n        <li className=\"breadcrumb-item\">\n          <a href=\"#\">Dashboard</a>\n        </li>\n        <li className=\"breadcrumb-item active\">Category</li>\n      </ol>\n      <div className=\"header-with-search mb-20\">\n      <Search setSearchValue={setSearchValue}\n              searchValue={searchValue} handleClick={() => getCategory(0, searchValue)} handleClear={()=> {getCategory(activePage,\"\")\n              setSearchValue(\"\")}\n              } />\n        <button\n          onClick={() => {\n            selectImage(\"\");\n            setShowModal(\"true\");\n          }}\n          className=\"btn btn-primary text-white\"\n        >\n          Add Category\n        </button>\n      </div>\n      <div className=\"card mb-3\">\n        <table class=\"table table-striped\">\n          <thead>\n            <tr>\n              <th scope=\"col\">Name</th>\n              <th scope=\"col\">Image</th>\n              <th scope=\"col\">Status</th>\n\n              <th style={{ width: 100 }} scope=\"col\">\n                Actions\n              </th>\n            </tr>\n          </thead>\n          <tbody>\n            {get(category, \"categoryList\", []).map((item) => {\n              return (\n                <tr>\n                  <td>{item.category_name}</td>\n                  <td>\n                    <img width={100} src={item.category_image} />\n                  </td>\n                  <td>\n                    <input\n                      type=\"checkbox\"\n                      checked={item.status}\n                      onChange={() => {\n                        \n                        setChangeStatus({\n                          ...item,\n                          id: item.id,\n                          status: item.status == 1 ? 0 : 1,\n                        })\n                      }}\n                      id={\"id\" + item.id}\n                    />\n                    <label htmlFor={\"id\" + item.id}>Label</label>\n                  </td>\n                  <td>\n                    <button\n                      onClick={() => {\n                        setShowModal(item);\n                        selectImage(item.category_image);\n                        \n                      }}\n                      className=\"btn btn-primary text-white\"\n                    >\n                      <i className=\"fa fa-pencil\"></i>\n                    </button>\n                  </td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n        <Pagination\n          totalPage={get(category, \"totalPage\", 1)}\n          activePage={activePage}\n          updateActivePage={(pageNo) => {\n            setActivePage(pageNo);\n          }}\n        />\n      </div>\n\n      <Modal\n        header={showModal == \"true\" ? \"Add Category\" : \"Edit Category\"}\n        show={showModal}\n        onClose={() => setShowModal(false)}\n        content={\n          <div className=\"popup-form\">\n            <Formik\n              enableReinitialize\n              initialValues={{\n                category_name: get(showModal, \"category_name\", \"\"),\n              }}\n              validate={(values) => categoryValidator(values, selectedImage)}\n              validateOnChange\n              onSubmit={handleSubmit}\n            >\n              {(formikBag) => {\n                return (\n                  <Form className=\"small-form\">\n                    <div className=\"row\">\n                      <div className=\"col-lg-12\">\n                        <Field name=\"category_name\">\n                          {({ field }) => (\n                            <Input\n                              {...field}\n                              type=\"text\"\n                              className=\"form-control\"\n                              placeholder={\"Category Name\"}\n                              error={\n                                formikBag.touched.category_name &&\n                                formikBag.errors.category_name\n                                  ? formikBag.errors.category_name\n                                  : null\n                              }\n                            />\n                          )}\n                        </Field>\n                      </div>\n                    </div>\n                    <br />\n                    <div className=\"row\">\n                      <div className=\"col-lg-12\">\n                        {Boolean(selectImage) && (\n                          <img width={100} src={selectedImage} />\n                        )}\n                        <br />\n\n                        <label>Select Category Image</label>\n                        <Field name=\"category_image\">\n                          {({ field }) => (\n                            <Input\n                              {...field}\n                              type=\"file\"\n                              onChange={async (e) => {\n                                var image = await uploadImage(\n                                  e.target.files[0]\n                                );\n                                console.log(\"image\", image);\n                              }}\n                              error={\n                                formikBag.touched.category_image &&\n                                formikBag.errors.category_image\n                                  ? formikBag.errors.category_image\n                                  : null\n                              }\n                            />\n                          )}\n                        </Field>\n                      </div>\n                    </div>\n\n                    <button\n                      type=\"submit\"\n                      className=\"btn-primary btn-block btn text-white\"\n                    >\n                      Submit\n                    </button>\n\n                    <FocusError />\n                  </Form>\n                );\n              }}\n            </Formik>\n            \n          </div>\n        }\n      />\n      <ConfirmModal show={changeStatus!==\"\"}  handleClose={()=> { setChangeStatus(\"\")}} handleModal={()=> { \n        editCategory(changeStatus)\n        setChangeStatus(\"\")\n        }} content={\"Sure you want to change the status of category !\"}/>\n      \n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  user: state.user,\n  allapi: state.allapi,\n});\n\nconst mapActionsToProps = {\n  getCategory,\n  addCategory,\n  editCategory,\n  uploadImage,\n  selectImage,\n};\n\nexport default connect(mapStateToProps, mapActionsToProps)(CategoryManagment);\n","import React, { Component, useState, useEffect } from \"react\";\nimport {\n  getCategory,\n  addMachine,\n  editMachine,\n  uploadImage,\n  selectImage,\n  getMachines,\n  getType,\n  getCapacity\n} from \"../../../store/actions/allapi\";\nimport {\n  Pagination,\n  Modal,\n  Input,\n  FocusError,\n  Select,\n  Textarea,\n  ConfirmModal,\n  Search\n} from \"../../../components\";\nimport { Formik, Field, Form } from \"formik\";\nimport { machineValidator } from \"../../../utils/validation\";\nimport { connect } from \"react-redux\";\nimport { get } from \"lodash\";\nconst MachineManagement = ({\n  getMachines,\n  getCategory,\n  editMachine,\n  uploadImage,\n  selectImage,\n  addMachine,\n  getCapacity,\n  user:{user},\n  getType,\n  allapi: { category, selectedImage, machines,types,capacity },\n}) => {\n  const [activePage, setActivePage] = useState(0);\n  const [showModal, setShowModal] = useState(\"\");\n  const [searchValue, setSearchValue] = useState(\"\");\n  const [changeStatus, setChangeStatus] = useState(\"\");\n  console.log(user,'user')\n\n  useEffect(() => {\n    getMachines(activePage, searchValue);\n    getCategory();\n    getType()\n    getCapacity()\n    \n  }, [activePage]);\n\n  const handleSubmit = (values) => {\n    console.log(values)\n    setActivePage(0);\n    if (showModal == \"true\") {\n      addMachine({ ...values, machine_image: selectedImage });\n    } else {\n      editMachine({\n        ...values,\n        product_id: showModal.id,\n        machine_image: selectedImage,\n      });\n    }\n    setShowModal(false);\n    selectedImage(\"\");\n  };\n\n  return (\n    <div className=\"container-fluid\">\n      {/* Breadcrumbs*/}\n      <ol className=\"breadcrumb\">\n        <li className=\"breadcrumb-item\">\n          <a href=\"#\">Dashboard</a>\n        </li>\n        <li className=\"breadcrumb-item active\">Machines</li>\n      </ol>\n      <div className=\"header-with-search mb-20\">\n      <Search setSearchValue={setSearchValue}\n              searchValue={searchValue} handleClick={() => getMachines(0, searchValue)} handleClear={()=> {getMachines(activePage,\"\")\n              setSearchValue(\"\")}\n              } />\n        \n        <button\n          onClick={() => {\n            selectImage(\"\");\n            setShowModal(\"true\");\n          }}\n          className=\"btn btn-primary text-white\"\n        >\n          Add Machine\n        </button>\n      </div>\n      <div className=\"card mb-3\">\n        <table class=\"table table-striped\">\n          <thead>\n            <tr>\n            <th scope=\"col\">Machine Number</th>\n              <th scope=\"col\">Name</th>\n              <th scope=\"col\">Image</th>\n              <th scope=\"col\">Description</th>\n              <th scope=\"col\">Machine Categories</th>\n              <th scope=\"col\">Machine Type</th>\n              <th scope=\"col\">Status</th>\n\n              <th style={{ width: 100 }} scope=\"col\">\n                Actions\n              </th>\n            </tr>\n          </thead>\n          <tbody>\n            {get(machines, \"productsData\", []).map((item) => {\n              return (\n                <tr>\n                  <td>{item.machine_number}</td>\n                  <td>{item.machine_name}</td>\n                  <td>\n                    <img width={100} src={item.machine_image} />\n                  </td>\n                  <td>{item.description}</td>\n                  <td>{get(item, \"machine_categories.name\", \"N/A\")}</td>\n                  <td>{get(item, \"machine_types.type\", \"N/A\")}</td>\n                  <td>\n                    <input\n                      type=\"checkbox\"\n                      checked={item.status}\n                      onChange={() => {\n\n\n                       setChangeStatus({\n                        ...item,\n                        id: item.id,\n                        product_id: item.id,\n                        status: item.status == 1 ? 0 : 1,\n                      })\n                      }}\n                      id={\"id\" + item.id}\n                    />\n                    <label htmlFor={\"id\" + item.id}>Label</label>\n                  </td>\n                  <td>\n                    <button\n                      onClick={() => {\n                        setShowModal(item);\n                        selectImage(item.machine_image);\n                      }}\n                      className=\"btn btn-primary text-white\"\n                    >\n                      <i className=\"fa fa-pencil\"></i>\n                    </button>\n                  </td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n        <Pagination\n          totalPage={get(category, \"totalPage\", 1)}\n          activePage={activePage}\n          updateActivePage={(pageNo) => {\n            setActivePage(pageNo);\n          }}\n        />\n      </div>\n\n      <Modal\n        header={showModal == \"true\" ? \"Add Machine\" : \"Edit Machine\"}\n        show={showModal}\n        onClose={() => setShowModal(false)}\n        content={\n          <div className=\"popup-form\">\n            <Formik\n              enableReinitialize\n              initialValues={{\n                machine_number: get(showModal, \"machine_number\", \"\"),\n                machine_name: get(showModal, \"machine_name\", \"\"),\n                machine_type_id: get(showModal, \"machine_type_id\", \"\"),\n                category_id: get(showModal, \"category_id\", \"\"),\n                capacity_id: get(showModal, \"capacity_id\", \"\"),\n                description: get(showModal, \"description\", \"\"),\n                user_id:get(user,'id')\n                \n\n              }}\n              validate={(values) => machineValidator(values, selectedImage)}\n              validateOnChange\n              onSubmit={handleSubmit}\n            >\n              {(formikBag) => {\n                return (\n                  <Form className=\"small-form\">\n                    <div className=\"row\">\n                      <div className=\"col-lg-12\">\n                        <Field name=\"machine_name\">\n                          {({ field }) => (\n                            <Input\n                              {...field}\n                              type=\"text\"\n                              className=\"form-control\"\n                              placeholder={\"Machine Name\"}\n                              error={\n                                formikBag.touched.machine_name &&\n                                formikBag.errors.machine_name\n                                  ? formikBag.errors.machine_name\n                                  : null\n                              }\n                            />\n                          )}\n                        </Field>\n                      </div>\n                    </div>\n                    <br/>\n                    <div className=\"row\">\n                      <div className=\"col-lg-12\">\n                        <Field name=\"machine_number\">\n                          {({ field }) => (\n                            <Input\n                              {...field}\n                              type=\"text\"\n                              className=\"form-control\"\n                              placeholder={\"Machine Number\"}\n                              error={\n                                formikBag.touched.machine_number &&\n                                formikBag.errors.machine_number\n                                  ? formikBag.errors.machine_number\n                                  : null\n                              }\n                            />\n                          )}\n                        </Field>\n                      </div>\n                    </div>\n                  <br/>\n                    <div className=\"row\">\n                      <div className=\"col-lg-12\">\n                        <Field name=\"category_id\">\n                          {({ field }) => (\n                            <Select\n                              {...field}\n                              type=\"text\"\n                              \n                              options={get(category,'categoryList',[]).map(item=> {\n                                return {label:item.category_name,value:item.id}\n                              })}\n                              value={get(category,'categoryList',[]).map(item=> {\n                                return {label:item.category_name,value:item.id}\n                              }).find(item => item.value == formikBag.values.category_id)}\n                              onChange={(option)=> formikBag.setFieldValue('category_id',option.value)}\n                              placeholder={\"Select Category\"}\n                              error={\n                                formikBag.touched.category_id &&\n                                formikBag.errors.category_id\n                                  ? formikBag.errors.category_id\n                                  : null\n                              }\n                            />\n                          )}\n                        </Field>\n                      </div>\n                    </div>\n                    <br/>\n                    <div className=\"row\">\n                      <div className=\"col-lg-12\">\n                        <Field name=\"machine_type_id\">\n                          {({ field }) => (\n                            <Select\n                              {...field}\n                              type=\"text\"\n                              value={get(types,'typeList',[]).map(item=> {\n                                return {label:item.type,value:item.id}\n                              }).find(item => item.value == formikBag.values.machine_type_id)}\n                              options={get(types,'typeList',[]).map(item=> {\n                                return {label:item.type,value:item.id}\n                              })}\n                              onChange={(option)=> formikBag.setFieldValue('machine_type_id',option.value)}\n                              placeholder={\"Select Type\"}\n                              error={\n                                formikBag.touched.machine_type_id &&\n                                formikBag.errors.machine_type_id\n                                  ? formikBag.errors.machine_type_id\n                                  : null\n                              }\n                            />\n                          )}\n                        </Field>\n                      </div>\n                    </div>\n                    <br />\n                    <div className=\"row\">\n                      <div className=\"col-lg-12\">\n                        <Field name=\"capacity_id\">\n                          {({ field }) => (\n                            <Select\n                              {...field}\n                              type=\"text\"\n                              value={get(capacity,'capacityList',[]).map(item=> {\n                                return {label:item.capacity,value:item.id}\n                              }).find(item => item.value == formikBag.values.capacity_id)}\n                              options={get(capacity,'capacityList',[]).map(item=> {\n                                return {label:item.capacity,value:item.id}\n                              })}\n                              onChange={(option)=> formikBag.setFieldValue('capacity_id',option.value)}\n                              placeholder={\"Select Capacity\"}\n                              error={\n                                formikBag.touched.capacity_id &&\n                                formikBag.errors.capacity_id\n                                  ? formikBag.errors.capacity_id\n                                  : null\n                              }\n                            />\n                          )}\n                        </Field>\n                      </div>\n                    </div>\n                    <br />\n                    <div className=\"row\">\n                      <div className=\"col-lg-12\">\n                        <Field name=\"description\">\n                          {({ field }) => (\n                            <Textarea\n                              {...field}\n                              type=\"text\"\n                              className=\"form-control\"\n                              placeholder={\"Description\"}\n                              error={\n                                formikBag.touched.description &&\n                                formikBag.errors.description\n                                  ? formikBag.errors.description\n                                  : null\n                              }\n                            />\n                          )}\n                        </Field>\n                      </div>\n                    </div>\n                    \n                    <div className=\"row\">\n                      <div className=\"col-lg-12\">\n                        {Boolean(selectImage) && (\n                          <img width={100} src={selectedImage} />\n                        )}\n                        <br />\n\n                        <label>Select Machine Image</label>\n                        <Field name=\"machine_image\">\n                          {({ field }) => (\n                            <Input\n                              {...field}\n                              type=\"file\"\n                              onChange={async (e) => {\n                                var image = await uploadImage(\n                                  e.target.files[0]\n                                );\n                                \n                              }}\n                              error={\n                                formikBag.touched.machine_image &&\n                                formikBag.errors.machine_image\n                                  ? formikBag.errors.machine_image\n                                  : null\n                              }\n                            />\n                          )}\n                        </Field>\n                      </div>\n                    </div>\n                    \n\n\n                    <button\n                      type=\"submit\"\n                      className=\"btn-primary btn-block btn text-white\"\n                    >\n                      Submit\n                    </button>\n\n                    <FocusError />\n                  </Form>\n                );\n              }}\n            </Formik>\n          </div>\n        }\n      />\n      <ConfirmModal show={changeStatus!==\"\"}  handleClose={()=> { setChangeStatus(\"\")}} handleModal={()=> { \n        editMachine(changeStatus)\n        setChangeStatus(\"\")\n        }} content={\"Sure you want to change the status of machine!\"}/>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  user: state.user,\n  allapi: state.allapi,\n});\n\nconst mapActionsToProps = {\n  getCategory,\n  uploadImage,\n  selectImage,\n  addMachine,\n  editMachine,\n  getMachines,\n  getCapacity,\n  getType\n};\n\nexport default connect(mapStateToProps, mapActionsToProps)(MachineManagement);\n","import React, { Component, useState, useEffect } from \"react\";\nimport { getOrders } from \"../../../store/actions/allapi\";\nimport { connect } from \"react-redux\";\nimport moment from \"moment\";\n\nimport { get } from \"lodash\";\nconst Orders = ({\n  getOrders,\n  allapi: { countries = [], orders = [] },\n  location: { search },\n  user: { user },\n}) => {\n  const query = new URLSearchParams(search);\n  const [searchVal, setSearch] = useState(query.get(\"query\"));\n  let bodyData = {\n    role: localStorage.getItem(\"role_id\"),\n    page: 0,\n    search: searchVal,\n    user_id: JSON.parse(localStorage.getItem(\"user_data\")).id,\n  };\n\n  useEffect(() => {\n    getOrders(bodyData);\n  }, [searchVal]);\n\n  return (\n    <div className=\"container-fluid\">\n      {/* Breadcrumbs*/}\n      <ol className=\"breadcrumb\">\n        <li className=\"breadcrumb-item\">\n          <a href=\"#\">Dashboard</a>\n        </li>\n        <li className=\"breadcrumb-item active\">Customer Orders</li>\n      </ol>\n      <div className=\"search_form \">\n        <div className=\"form-group\">\n          <input\n            className=\"form-control\"\n            value={searchVal}\n            onChange={(e) => setSearch(e.target.value)}\n            type=\"text\"\n            placeholder=\"Search for orderId or location\"\n          />\n          <button className=\"btn btn-primary text-white\" type=\"submit\">\n            Search\n          </button>\n        </div>\n      </div>\n      <div className=\"order-listing\">\n        {get(orders, \"orderData\", []).map((order) => {\n          return (\n            <div className=\"card\">\n              <div className=\"card-header\">\n                <div className=\"row\">\n                  <div className=\"col-lg-6\">\n                    <p>\n                      <strong>Order Placed</strong>:{\" \"}\n                      {moment(order.order_date).format(\"MMMM Do YYYY \")}\n                    </p>\n                    <p>\n                      <strong>Work Start Date:</strong>{\" \"}\n                      {moment(order.work_start_date).format(\"MMMM Do YYYY \")}\n                    </p>\n                    <p>\n                      <strong>Delivery Location</strong>:{\" \"}\n                      {order.delivery_location}\n                    </p>\n                  </div>\n                  <div className=\"col-lg-6\">\n                    <p>\n                      <strong>Order ID</strong>: {order.order_id}\n                    </p>\n                    <p>\n                      <strong>Work End Date :</strong>{\" \"}\n                      {moment(order.work_end_date).format(\"MMMM Do YYYY \")}\n                    </p>\n                  </div>\n                </div>\n              </div>\n              <div className=\"card-body\">\n                <h3>Order Placed</h3>\n                <p>Lokator is currently processing your order</p>\n                <span\n                  className={`badge text-white ${\n                    order.status == 0 ? \"bg-warning\" : \"bg-success\"\n                  } `}\n                >\n                  {order.status == 0 ? \"Processing\" : \"Approved\"}\n                </span>\n                <table class=\"table table-striped\">\n                  <thead>\n                    <tr>\n                      <th scope=\"col\">Name</th>\n                      <th scope=\"col\">Image</th>\n                      <th scope=\"col\">Category</th>\n\n                      <th scope=\"col\">Quantity</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {get(order, \"order_detail\", []).map((item) => {\n                      return (\n                        <tr>\n                          <td>\n                            {get(item, \"machine_products.machine_name\", \"N/A\")}\n                          </td>\n                          <td>\n                            {\" \"}\n                            <img\n                              src={get(\n                                item,\n                                \"machine_products.machine_image\",\n                                \"\"\n                              )}\n                            />\n                          </td>\n                          <td>\n                            {get(\n                              item,\n                              \"machine_categories.category_name\",\n                              \"N/A\"\n                            )}\n                          </td>\n                          <td>{get(item, \"quantity\", \"N/A\")}</td>\n                        </tr>\n                      );\n                    })}\n                  </tbody>\n                </table>\n              </div>\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  user: state.user,\n  allapi: state.allapi,\n});\n\nconst mapActionsToProps = {\n  getOrders,\n};\n\nexport default connect(mapStateToProps, mapActionsToProps)(Orders);\n","import React, { Component, useState, useEffect, useRef } from \"react\";\nimport BannerBg from \"../../assests/images/hero_bg.jpg\";\nimport { connect } from \"react-redux\";\nimport {\n  getCategory,\n  getMachines,\n  makeEnquiry,\n  saveOrders,\n} from \"../../store/actions/allapi\";\nimport DatePicker from \"react-date-picker\";\n\nimport { get } from \"lodash\";\nimport { Link } from \"react-router-dom\";\n\nimport {\n  NoData,\n  Modal,\n  FocusError,\n  Input,\n  Select,\n  Textarea,\n  SucesssModal,\n} from \"../../components/.\";\nimport { scopes, priceType } from \"../../utils/constants\";\nimport { Formik, Field, Form } from \"formik\";\nimport PhoneInput from \"react-phone-input-2\";\nimport Login from \"../Login\";\nimport { orderValidator, inquiryValidator } from \"../../utils/validation\";\n\nconst scrollToRef = (ref) => window.scrollTo(0, ref.current.offsetTop);\nconst Product = (props) => {\n  const {\n    getCategory,\n    getMachines,\n    saveOrders,\n    makeEnquiry,\n    location: { search },\n    allapi: { category, machines },\n    user: { user },\n  } = props;\n  const query = new URLSearchParams(search);\n  const [searchVal, setSearch] = useState(query.get(\"query\"));\n  const [cartProducts, setCartProducts] = useState(\n    localStorage.getItem(\"cart_items\")\n      ? JSON.parse(localStorage.getItem(\"cart_items\"))\n      : []\n  );\n  const [startDate, onStartDateChange] = useState(new Date());\n  const [endDate, onEndDateChange] = useState(new Date());\n  const [showModal, setShowModal] = useState(false);\n  const [showLogin, setShowLogin] = useState(false);\n  const [activeStep, setActiveStep] = useState(1);\n  const [orderInfo, setOrderInfo] = useState(\"\");\n  const [show, setShow] = useState(false);\n  const [showEnquiry, setShowEnquiry] = useState(false);\n  const myRef = useRef(null);\n  const executeScroll = () => scrollToRef(myRef);\n\n  useEffect(() => {\n    getCategory(0, \"\", 1);\n  }, []);\n  useEffect(() => {\n    setSearch(query.get(\"query\"));\n  }, [search]);\n  useEffect(() => {\n    getMachines(0, searchVal, 1, executeScroll);\n    executeScroll();\n  }, [searchVal]);\n\n  const addToCart = (product) => {\n    let clonedCart = [...cartProducts];\n    clonedCart.push({ ...product, quantity: 1 });\n    updateItemtoLocal(clonedCart);\n    setCartProducts(clonedCart);\n  };\n  const updteQuantity = (id, quantity) => {\n    let clonedCart = [...cartProducts];\n    let reltedProductIndex = clonedCart.findIndex((item) => item.id === id);\n    if (quantity !== 0) {\n      clonedCart[reltedProductIndex].quantity = quantity;\n    } else {\n      clonedCart.splice(reltedProductIndex, 1);\n    }\n    updateItemtoLocal(clonedCart);\n    if (clonedCart.length == 0) {\n      setShowModal(false);\n    }\n    setCartProducts(clonedCart);\n  };\n\n  const updateItemtoLocal = (items) => {\n    localStorage.setItem(\"cart_items\", JSON.stringify(items));\n  };\n\n  const placeOrder = async (values) => {\n    setOrderInfo({\n      ...values,\n      work_start_date: startDate,\n      work_end_date: endDate,\n    });\n    setShowModal(false);\n    setShowLogin(false);\n    let bodyData = {\n      ...values,\n      work_start_date: startDate,\n      work_end_date: endDate,\n    };\n    bodyData.order_product = cartProducts.map((item) => {\n      return {\n        category_id: item.category_id,\n        machine_product_id: item.id,\n        quantity: item.quantity,\n      };\n    });\n    if (localStorage.getItem(\"access_token\")) {\n      saveOrders(bodyData, setShow);\n    } else {\n      setShowLogin(true);\n    }\n  };\n\n  const placeInquiry = async (values) => {\n    setShowEnquiry(false);\n\n    let bodyData = { ...values };\n\n    makeEnquiry(bodyData);\n  };\n\n  return (\n    <div>\n      <div className=\"row align-items-center justify-content-center\">\n        <div className=\"col-md-12\" data-aos=\"fade-up\" data-aos-delay={400}>\n          <h3 className=\" font-weight-light  header text-uppercase font-weight-bold\">\n            Get Quote\n          </h3>\n          <div className=\"home-search bg-dark product\">\n            <div className=\"search_form \">\n              <div className=\"form-group\">\n                <input\n                  className=\"form-control\"\n                  value={searchVal}\n                  onChange={(e) => setSearch(e.target.value)}\n                  type=\"text\"\n                  placeholder=\"Search for machine, brand, model\"\n                />\n                <button className=\"btn btn-primary text-white\" type=\"submit\">\n                  Search\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"site-section \">\n        <div className=\"row justify-content-center mb-5 \">\n          <div className=\"col-md-7 text-center border-primary\">\n            <h4 className=\"font-weight-bold text-primary\">Rent Machines</h4>\n          </div>\n        </div>\n        <div className=\"row align-items-stretch\">\n          {get(category, \"categoryList\", []).map((item) => {\n            return (\n              <div className=\"col-md-6 col-lg-3 mb-3 mb-lg-3\">\n                <Link to={\"/products?query=\" + item.category_name}>\n                  <div className=\"unit-4 d-flex feature-item\" key={item.id}>\n                    <div>\n                      <h3>{item.category_name}</h3>\n                      <img src={item.category_image} />\n                    </div>\n                  </div>\n                </Link>\n              </div>\n            );\n          })}\n          <div ref={myRef}></div>\n        </div>\n      </div>\n\n      <div className=\"product-listing\">\n        {get(machines, \"productsData\", []).length == 0 && <NoData />}\n        {get(machines, \"productsData\", []).map((item) => {\n          let relatedProduct = cartProducts.find((pd) => pd.id == item.id);\n          console.log(\"cartProducts\", cartProducts);\n          return (\n            <div className=\"product-item\">\n              <div className=\"pd-left\">\n                <img src={item.machine_image} />\n              </div>\n              <div className=\"pd-right\">\n                <h3>{item.machine_name}</h3>\n                <p>\n                  <strong>Category:</strong>{\" \"}\n                  {get(item, \"machine_categories.name\", \"N/A\")}\n                </p>\n                <p>\n                  <strong>Type:</strong>{\" \"}\n                  {get(item, \"machine_types.type\", \"N/A\")}\n                </p>\n                <p>\n                  <strong>Capacity:</strong>{\" \"}\n                  {get(item, \"machine_capacities.type\", \"N/A\")}\n                </p>\n                {!relatedProduct ? (\n                  <button\n                    onClick={() => {\n                      addToCart(item);\n                    }}\n                    className=\"btn btn-primary text-white\"\n                  >\n                    <i className=\"fa fa-plus\"></i> Add Enquiry\n                  </button>\n                ) : (\n                  <div className=\"numeric_box\">\n                    <button\n                      onClick={() => {\n                        updteQuantity(item.id, relatedProduct.quantity - 1);\n                      }}\n                    >\n                      <i class=\"fa fa-minus\" aria-hidden=\"true\"></i>\n                    </button>\n                    <span>{relatedProduct.quantity}</span>\n                    <button\n                      onClick={() => {\n                        updteQuantity(item.id, relatedProduct.quantity + 1);\n                      }}\n                    >\n                      <i class=\"fa fa-plus\" aria-hidden=\"true\"></i>\n                    </button>\n                  </div>\n                )}\n              </div>\n            </div>\n          );\n        })}\n      </div>\n      <Modal\n        header={\"Shopping Cart\"}\n        show={showModal}\n        width={800}\n        onClose={() => setShowModal(false)}\n        content={\n          <div className=\"step-form\">\n            <div className={`steps step-${activeStep}`}>\n              <a className=\"step-item\" href=\"javascript:void()\">\n                <span className=\"pager\">\n                  {activeStep > 1 ? <i className=\"fa fa-check\"></i> : 1}\n                </span>\n                <span className=\"text_line\">Shopping Cart</span>\n              </a>\n              <a className=\"step-item\" href=\"javascript:void()\">\n                <span className=\"pager\">2</span>\n                <span className=\"text_line\">Delivery Info</span>\n              </a>\n            </div>\n            {activeStep == 1 && (\n              <div className=\"section_1\">\n                <table class=\"table table-striped\">\n                  <thead>\n                    <tr>\n                      <th scope=\"col\">Name</th>\n                      <th scope=\"col\">Image</th>\n                      <th scope=\"col\">Category</th>\n                      <th scope=\"col\">Type</th>\n                      <th scope=\"col\">Capacity</th>\n                      <th scope=\"col\">Quantity</th>\n                      <th scope=\"col\">Actions</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {cartProducts.map((item) => {\n                      return (\n                        <tr>\n                          <td>{get(item, \"machine_name\", \"N/A\")}</td>\n                          <td>\n                            {\" \"}\n                            <img src={item.machine_image} />\n                          </td>\n                          <td>{get(item, \"machine_categories.name\", \"N/A\")}</td>\n                          <td>{get(item, \"machine_types.type\", \"N/A\")}</td>\n                          <td>{get(item, \"machine_capacities.type\", \"N/A\")}</td>\n                          <td>\n                            <input\n                              type=\"number\"\n                              value={item.quantity}\n                              min={1}\n                              onChange={(e) => {\n                                updteQuantity(item.id, Number(e.target.value));\n                              }}\n                            />\n                          </td>\n                          <td>\n                            <button\n                              className=\"btn btn-danger\"\n                              onClick={(e) => {\n                                updteQuantity(item.id, 0);\n                              }}\n                            >\n                              <i className=\"fa fa-trash\" aria-hidden=\"true\"></i>\n                              Remove\n                            </button>\n                          </td>\n                        </tr>\n                      );\n                    })}\n                  </tbody>\n                </table>\n                <div className=\"footer-content\">\n                  <button\n                    className=\"btn btn-primary text-white\"\n                    onClick={() => {\n                      setActiveStep(2);\n                    }}\n                  >\n                    Next Step\n                  </button>\n                </div>\n              </div>\n            )}\n            {activeStep == 2 && (\n              <div className=\"section_2\">\n                <Formik\n                  enableReinitialize\n                  initialValues={{\n                    delivery_location: \"\",\n                    comments_remarks: \"\",\n                    order_scope: null,\n                  }}\n                  validate={(values) => orderValidator(values)}\n                  validateOnChange\n                  onSubmit={placeOrder}\n                >\n                  {(formikBag) => {\n                    return (\n                      <Form>\n                        <div className=\"row\">\n                          <div className=\"col-lg-12\">\n                            <Field name=\"order_scope\">\n                              {({ field }) => (\n                                <Select\n                                  {...field}\n                                  name=\"order_scope\"\n                                  options={scopes}\n                                  placeholder={\"Select Project Scope\"}\n                                  value={scopes.find(\n                                    (option) =>\n                                      option.value ===\n                                      formikBag.values.order_scope\n                                  )}\n                                  onChange={(option) => {\n                                    formikBag.setFieldValue(\n                                      \"order_scope\",\n                                      option?.value\n                                    );\n                                  }}\n                                  error={\n                                    formikBag.touched.order_scope &&\n                                    formikBag.errors.order_scope\n                                      ? formikBag.errors.order_scope\n                                      : null\n                                  }\n                                />\n                              )}\n                            </Field>\n                          </div>\n                        </div>\n                        <div className=\"row\">\n                          <div className=\"col-lg-12\">\n                            <Field name=\"delivery_location\">\n                              {({ field }) => (\n                                <Input\n                                  {...field}\n                                  type=\"text\"\n                                  className=\"form-control\"\n                                  placeholder={\"Delivery Location\"}\n                                  error={\n                                    formikBag.touched.delivery_location &&\n                                    formikBag.errors.delivery_location\n                                      ? formikBag.errors.delivery_location\n                                      : null\n                                  }\n                                />\n                              )}\n                            </Field>\n                          </div>\n                        </div>\n                        <div className=\"row\">\n                          <div className=\"col-lg-6\">\n                            <label>Work Start Date</label>\n                            <Field name=\"work_start_date\">\n                              {({ field }) => (\n                                <div>\n                                  <DatePicker\n                                    onChange={onStartDateChange}\n                                    value={startDate}\n                                    minDate={new Date()}\n                                  />\n                                </div>\n                              )}\n                            </Field>\n                          </div>\n                          <div className=\"col-lg-6\">\n                            <label>Work End Date</label>\n                            <Field name=\"work_end_date\">\n                              {({ field }) => (\n                                <div>\n                                  <DatePicker\n                                    onChange={onEndDateChange}\n                                    value={endDate}\n                                    minDate={startDate}\n                                  />\n                                </div>\n                              )}\n                            </Field>\n                          </div>\n                        </div>\n                        <div className=\"row\">\n                          <div className=\"col-lg-12\">\n                            <Field name=\"comments_remarks\">\n                              {({ field }) => (\n                                <Textarea\n                                  {...field}\n                                  className=\"form-control\"\n                                  placeholder={\"Comments Remarks\"}\n                                  error={\n                                    formikBag.touched.comments_remarks &&\n                                    formikBag.errors.comments_remarks\n                                      ? formikBag.errors.comments_remarks\n                                      : null\n                                  }\n                                />\n                              )}\n                            </Field>\n                          </div>\n                        </div>\n\n                        <div className=\"footer-content\">\n                          <button\n                            className=\"btn btn-success text-white\"\n                            type=\"button\"\n                            onClick={() => {\n                              setActiveStep(1);\n                            }}\n                          >\n                            Previous Step\n                          </button>\n                          <button\n                            className=\"btn btn-primary text-white\"\n                            type=\"submit\"\n                          >\n                            Place Order\n                          </button>\n                        </div>\n\n                        <FocusError />\n                      </Form>\n                    );\n                  }}\n                </Formik>\n              </div>\n            )}\n          </div>\n        }\n      />\n\n      {/* //Enquiry Form */}\n      <Modal\n        header={\"Send us your Inquiry\"}\n        show={showEnquiry}\n        width={600}\n        onClose={() => setShowEnquiry(false)}\n        content={\n          <div className=\"order_form\">\n            <Formik\n              enableReinitialize\n              initialValues={{\n                user_id: user?.id || \"\",\n                name: \"\",\n                email: \"\",\n                company_name: \"\",\n                phone_no: \"\",\n                requirment: \"\",\n                price_type: null,\n                delivery_date: \"\",\n                location: \"\",\n              }}\n              validate={(values) => inquiryValidator(values)}\n              validateOnChange\n              onSubmit={placeInquiry}\n            >\n              {(formikBag) => {\n                return (\n                  <Form>\n                    {!user && (\n                      <>\n                        <div className=\"row\">\n                          <div className=\"col-lg-6\">\n                            <Field name=\"name\">\n                              {({ field }) => (\n                                <Input\n                                  {...field}\n                                  type=\"text\"\n                                  error={\n                                    formikBag.touched.name &&\n                                    formikBag.errors.name\n                                      ? formikBag.errors.name\n                                      : null\n                                  }\n                                  className=\"form-control\"\n                                  placeholder={\"Your Name *\"}\n                                />\n                              )}\n                            </Field>\n                          </div>\n                          <div className=\"col-lg-6\">\n                            <Field name=\"company_name\">\n                              {({ field }) => (\n                                <Input\n                                  {...field}\n                                  type=\"text\"\n                                  error={\n                                    formikBag.touched.company_name &&\n                                    formikBag.errors.company_name\n                                      ? formikBag.errors.company_name\n                                      : null\n                                  }\n                                  className=\"form-control\"\n                                  placeholder={\"Compnay Name *\"}\n                                />\n                              )}\n                            </Field>\n                          </div>\n                        </div>\n                        <div className=\"row\">\n                          <div className=\"col-md-6\">\n                            <Field name=\"phone\">\n                              {({ field }) => (\n                                <div>\n                                  <PhoneInput\n                                    {...field}\n                                    country=\"in\"\n                                    type=\"phone\"\n                                    value={formikBag.values.phone_no}\n                                    onChange={(phone, data) => {\n                                      formikBag.setFieldValue(\n                                        \"phone_no\",\n                                        phone\n                                      );\n                                      formikBag.setFieldValue(\n                                        \"country_code\",\n                                        data.dialCode\n                                      );\n                                    }}\n                                    error={\n                                      formikBag.touched.phone &&\n                                      formikBag.errors.phone\n                                        ? formikBag.errors.phone\n                                        : null\n                                    }\n                                    className=\"form-control\"\n                                    placeholder=\"Phone Number\"\n                                  />\n                                  {formikBag.errors.phone && (\n                                    <p\n                                      style={{\n                                        paddingTop: 5,\n                                        fontSize: 13,\n                                        color: \"red\",\n                                      }}\n                                    >\n                                      {formikBag.errors.phone}\n                                    </p>\n                                  )}\n                                </div>\n                              )}\n                            </Field>\n                          </div>\n                          <div className=\"col-lg-6\">\n                            <Field name=\"email\">\n                              {({ field }) => (\n                                <Input\n                                  {...field}\n                                  type=\"email\"\n                                  className=\"form-control\"\n                                  error={\n                                    formikBag.touched.email &&\n                                    formikBag.errors.email\n                                      ? formikBag.errors.email\n                                      : null\n                                  }\n                                  placeholder={\"Email Address\"}\n                                />\n                              )}\n                            </Field>\n                          </div>\n                        </div>\n                      </>\n                    )}\n                    <h4>Order Details</h4>\n\n                    <div className=\"row\">\n                      <div className=\"col-lg-12\">\n                        <Field name=\"price_type\">\n                          {({ field }) => (\n                            <Select\n                              {...field}\n                              name=\"order_scope\"\n                              options={priceType}\n                              placeholder={\"Price Type\"}\n                              value={scopes.find(\n                                (option) =>\n                                  option.value === formikBag.values.price_type\n                              )}\n                              onChange={(option) => {\n                                formikBag.setFieldValue(\n                                  \"price_type\",\n                                  option?.value\n                                );\n                              }}\n                              error={\n                                formikBag.touched.price_type &&\n                                formikBag.errors.price_type\n                                  ? formikBag.errors.price_type\n                                  : null\n                              }\n                            />\n                          )}\n                        </Field>\n                      </div>\n                    </div>\n                    <div className=\"row\">\n                      <div className=\"col-lg-6\">\n                        <Field name=\"location\">\n                          {({ field }) => (\n                            <Input\n                              {...field}\n                              type=\"text\"\n                              className=\"form-control\"\n                              placeholder={\"Delivery Location\"}\n                              error={\n                                formikBag.touched.location &&\n                                formikBag.errors.location\n                                  ? formikBag.errors.location\n                                  : null\n                              }\n                            />\n                          )}\n                        </Field>\n                      </div>\n                      <div className=\"col-lg-6\">\n                        <Field name=\"delivery_date\">\n                          {({ field }) => (\n                            <Input\n                              {...field}\n                              type=\"date\"\n                              className=\"form-control\"\n                              placeholder={\"Work Start Date\"}\n                              error={\n                                formikBag.touched.delivery_date &&\n                                formikBag.errors.delivery_date\n                                  ? formikBag.errors.delivery_date\n                                  : null\n                              }\n                            />\n                          )}\n                        </Field>\n                      </div>\n                    </div>\n                    <div className=\"row\">\n                      <div className=\"col-lg-12\">\n                        <Field name=\"requirment\">\n                          {({ field }) => (\n                            <Textarea\n                              {...field}\n                              className=\"form-control\"\n                              placeholder={\"Requirement\"}\n                              error={\n                                formikBag.touched.requirment &&\n                                formikBag.errors.requirment\n                                  ? formikBag.errors.requirment\n                                  : null\n                              }\n                            />\n                          )}\n                        </Field>\n                      </div>\n                    </div>\n\n                    <div className=\"footer-content\">\n                      <button\n                        className=\"btn btn-primary text-white\"\n                        type=\"submit\"\n                      >\n                        Send Inquiry\n                      </button>\n                    </div>\n\n                    <FocusError />\n                  </Form>\n                );\n              }}\n            </Formik>\n          </div>\n        }\n      />\n      <Modal\n        show={showLogin}\n        content={\n          <>\n            <Login\n              isPopup\n              {...props}\n              handleClick={() => {\n                placeOrder(orderInfo);\n              }}\n            />\n          </>\n        }\n      />\n\n      {cartProducts.length > 0 && !showModal && !showLogin ? (\n        <div className=\"cart_box\">\n          {cartProducts.length} equipment added to inquiry{\" \"}\n          <button\n            className=\"btn btn-primry\"\n            onClick={() => {\n              setShowModal(true);\n              setActiveStep(1);\n            }}\n          >\n            <i class=\"fa  fa-shopping-cart \"></i>\n            View and Checkout\n          </button>\n        </div>\n      ) : (\n        <div className=\"cart_box\">\n          <span>\n          Can't find the machine you're looking for?\n          </span>\n          <button\n            className=\"btn btn-primry\"\n            onClick={() => {\n              setShowEnquiry(true);\n            }}\n          >\n            <i class=\"fa  fa-shopping-cart \"></i>\n            Submit Enquiry\n          </button>\n        </div>\n      )}\n      <SucesssModal\n        show={show}\n        content={\n          <>\n            Order placed Successfully .<br /> Admin will Approved your order .\n          </>\n        }\n        handleModal={() => {\n          setShow(false);\n          window.location.reload();\n        }}\n      />\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  user: state.user,\n  allapi: state.allapi,\n});\n\nconst mapActionsToProps = {\n  getCategory,\n  getMachines,\n  saveOrders,\n  makeEnquiry,\n};\n\nexport default connect(mapStateToProps, mapActionsToProps)(Product);\n","import React, { Component } from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  Redirect,\n} from \"react-router-dom\";\nimport Home from \"./pages/Home\";\nimport About from \"./pages/About\";\nimport Contact from \"./pages/Contact\";\nimport Login from \"./pages/Login\";\nimport Dashboard from \"./pages/admin/Dashboard\";\nimport Services from \"./pages/Services\";\nimport Terms from \"./pages/Terms\";\n\nimport Profile from \"./pages/admin/Profile\";\nimport {\n  Header,\n  Footer,\n  Loader,\n  AdminLayout,\n  CustomerLayout,\n} from \"./components\";\nimport \"./assests/scss/style.scss\";\nimport axios from \"axios\";\nimport { API_URL } from \"./utils/constants\";\nimport { ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport NotFound from \"./pages/NotFound\";\nimport CountryManagement from \"./pages/admin/CountryManagement\";\nimport CapacityManagement from \"./pages/admin/MachineManagement/CapacityManagement\";\nimport TypesManagment from \"./pages/admin/MachineManagement/TypesManangment\";\nimport ContactLeads from \"./pages/admin/ContactLeads\";\nimport EnquiryList from \"./pages/admin/EnquiryList\";\nimport Orders from \"./pages/admin/Orders\";\nimport Users from \"./pages/admin/Users\";\nimport CategoryManagment from \"./pages/admin/MachineManagement/CategoryManagment\";\nimport MachineManagement from \"./pages/admin/MachineManagement/index\";\nimport CustomerOrders from \"./pages/Customers/Orders/Orders\";\nimport Products from \"./pages/Products/index\";\n\naxios.interceptors.response.use(\n  (config) => {\n    return config;\n  },\n  (error) => {\n    if (error.response.status === 401) {\n      // localStorage.removeItem(\"access_token\");\n      // window.location.pathname = \"/\";\n    }\n\n    return Promise.reject(error);\n  }\n);\n\nconst PrivateOnlyRoute = ({ component: Component, ...rest }) => (\n  <Route\n    {...rest}\n    render={(props) => {\n      const token = localStorage.getItem(\"access_token\");\n      axios.defaults.headers[\"x-access-token\"] = `${token}`;\n      axios.defaults.headers[\"Content-Type\"] = `application/json`;\n\n      if (token) {\n        return (\n          <AdminLayout>\n            <Component {...props} />\n          </AdminLayout>\n        );\n      } else {\n        return (\n          <Redirect\n            to={{\n              pathname: \"/login\",\n            }}\n          />\n        );\n      }\n    }}\n  />\n);\n\nconst CustomerRoute = ({ component: Component, ...rest }) => (\n  <Route\n    {...rest}\n    render={(props) => {\n      const token = localStorage.getItem(\"access_token\");\n      axios.defaults.headers[\"x-access-token\"] = `${token}`;\n      axios.defaults.headers[\"Content-Type\"] = `application/json`;\n\n      return (\n        <CustomerLayout>\n          <Component {...props} />\n        </CustomerLayout>\n      );\n    }}\n  />\n);\n\nconst WebisteRouter = ({ component: Component, ...rest }) => (\n  <Route\n    {...rest}\n    render={(props) => {\n      return (\n        <>\n          <Header />\n          <Component {...props} />\n          <Footer />\n        </>\n      );\n    }}\n  />\n);\nclass App extends Component {\n  render() {\n    axios.defaults.baseURL = API_URL;\n    return (\n      <>\n        <Router>\n          <Switch>\n            <WebisteRouter exact path=\"/\" component={Home} />\n            <WebisteRouter exact path=\"/about\" component={About} />\n            <WebisteRouter exact path=\"/Contact\" component={Contact} />\n            <WebisteRouter exact path=\"/services\" component={Services} />\n            <WebisteRouter exact path=\"/terms\" component={Terms} />\n\n            <Route exact path=\"/admin/login\" component={Login} />\n            <CustomerRoute exact path=\"/products\" component={Products} />\n            <PrivateOnlyRoute exact path=\"/dashboard\" component={Dashboard} />\n            <PrivateOnlyRoute exact path=\"/profile\" component={Profile} />\n            <PrivateOnlyRoute\n              exact\n              path=\"/customer-orders\"\n              component={CustomerOrders}\n            />\n            <PrivateOnlyRoute\n              exact\n              path=\"/contact-leads\"\n              component={ContactLeads}\n            />\n            <PrivateOnlyRoute\n              exact\n              path=\"/country-management\"\n              component={CountryManagement}\n            />\n            <PrivateOnlyRoute\n              exact\n              path=\"/capacity-management\"\n              component={CapacityManagement}\n            />\n            <PrivateOnlyRoute exact path=\"/orders\" component={Orders} />\n            <PrivateOnlyRoute\n              exact\n              path=\"/types-management\"\n              component={TypesManagment}\n            />\n            <PrivateOnlyRoute\n              exact\n              path=\"/category-management\"\n              component={CategoryManagment}\n            />\n            <PrivateOnlyRoute exact path=\"/inquiries\" component={EnquiryList} />\n            <PrivateOnlyRoute\n              exact\n              path=\"/machines\"\n              component={MachineManagement}\n            />\n\n            <PrivateOnlyRoute exact path=\"/users-list\" component={Users} />\n            <Route exact path=\"/login\" component={Login} />\n            <Route exact path=\"/forgot-password\" component={Login} />\n            <Route exact path=\"/register\" component={Login} />\n\n            <Route exact path=\"*\" component={NotFound} />\n          </Switch>\n        </Router>\n        <Loader />\n        <ToastContainer />\n      </>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {\n  SET_USER,\n  SET_USERS,\n  SET_AUTHENTICATED,\n  SET_UNAUTHENTICATED,\n  LOADING_USER,\n  UPDATE_BLOCK,\n  DELETE_USER,\n  GET_MATCHES,\n  SET_SINGLE_USERS,\n} from \"../types\";\n\nconst initialState = {\n  authenticated: false,\n  loading: false,\n  credentials: {},\n  matches: [],\n  user: null,\n};\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case SET_AUTHENTICATED:\n      return {\n        ...state,\n        authenticated: true,\n      };\n    case SET_UNAUTHENTICATED:\n      return initialState;\n    case SET_USER:\n      return {\n        ...state,\n        authenticated: true,\n        loading: false,\n        ...action.payload,\n      };\n    case SET_USERS:\n      return {\n        ...state,\n        authenticated: true,\n        loading: false,\n        user: action.payload,\n      };\n   \n    case GET_MATCHES:\n      return {\n        ...state,\n        authenticated: true,\n        loading: false,\n        matches: action.payload,\n      };\n    case LOADING_USER:\n      return {\n        ...state,\n        loading: true,\n      };\n    case DELETE_USER:\n      var { users } = state;\n      var updateuser = [...users].filter((item) => {\n        return item._id !== action.payload;\n      });\n      return {\n        ...state,\n        users: updateuser,\n      };\n    case UPDATE_BLOCK:\n      var { users } = state;\n\n      var updateuser = [...users].map((item) => {\n        if (item._id == action.payload) {\n          item.isBlocked = !item.isBlocked;\n        }\n        return item;\n      });\n\n      return {\n        ...state,\n      };\n    default:\n      return state;\n  }\n}\n","import {\n  SET_ERRORS,\n  CLEAR_ERRORS,\n  LOADING_UI,\n  TOGGLE_SIDEBAR,\n  STOP_LOADING_UI,\n  SHOW_SUCCESS,\n} from \"../types\";\n\nconst initialState = {\n  loading: false,\n  errors: null,\n  sidebarShow: true,\n  sucesss: \"\",\n};\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case SET_ERRORS:\n      return {\n        ...state,\n        loading: false,\n        errors: action.payload,\n      };\n    case CLEAR_ERRORS:\n      return {\n        ...state,\n        loading: false,\n        errors: null,\n      };\n    case LOADING_UI:\n      return {\n        ...state,\n        loading: true,\n      };\n    case STOP_LOADING_UI:\n      return {\n        ...state,\n        loading: false,\n      };\n    case TOGGLE_SIDEBAR:\n      return {\n        ...state,\n        sidebarShow: action.payload,\n      };\n    case SHOW_SUCCESS:\n      return {\n        ...state,\n        sucesss: action.payload,\n      };\n    default:\n      return state;\n  }\n}\n","import {\n  GET_COUNTRY,\n  GET_LOCATIONS,\n  ADD_COUNTRY,\n  DELETE_PASSION,\n  DELETE_SUBSCRIPTION,\n  GET_CONTACT,\n  ADD_ADVERTISMENT,\n  DELETE_ADVERTISMENT,\n  GET_USERS,\n  EDIT_COUNTRY,\n  EDIT_ADVERTISMENT,\n  GET_CAPACITY,\n  ADD_CAPACITY,\n  EDIT_CAPACITY,\n  GET_TYPE,\n  ADD_TYPE,\n  EDIT_TYPE,\n  GET_CATEGORY,\n  ADD_CATEGORY,\n  EDIT_CATEGORY,\n  SELECT_IMAGE,\n  ADD_MACHINE,\n  GET_MACHINES,\n  GET_ORDERS,\n  UPDATE_ORDERS_STATUS,\n  EDIT_MACHINE,\n  GET_INQUIRY,\n  GET_NOTIFICATION,\n} from \"../types\";\n\nconst initialState = {\n  dashboard: [],\n  countries: [],\n  locations: [],\n  contacts: [],\n  orders: [],\n  users: [],\n  reports: [],\n  selectedImage: \"\",\n  inquiry: [],\n  notification: [],\n};\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case GET_COUNTRY:\n      return {\n        ...state,\n        countries: action.payload,\n      };\n    case GET_LOCATIONS:\n      return {\n        ...state,\n        locations: action.payload,\n      };\n    case ADD_COUNTRY:\n      return {\n        ...state,\n        countries: [action.payload.data, ...state.countries],\n      };\n    case EDIT_COUNTRY:\n      var { countries } = state;\n      var updatedCountry = countries.map((item) => {\n        if (item.id == action.payload.id) {\n          return action.payload;\n        }\n        return item;\n      });\n      return {\n        ...state,\n        countries: updatedCountry,\n      };\n    case DELETE_PASSION:\n      var { passions } = state;\n      var updatedPassion = passions.filter(\n        (item) => item._id !== action.payload\n      );\n      return {\n        ...state,\n        passions: updatedPassion,\n      };\n    // eslint-disable-next-line no-fallthrough\n    case GET_CONTACT:\n      return {\n        ...state,\n        contacts: action.payload,\n      };\n    case ADD_ADVERTISMENT:\n      return {\n        ...state,\n        advertisment: [action.payload, ...state.advertisment],\n      };\n\n    case EDIT_ADVERTISMENT:\n      var { advertisment } = state;\n      var updatedAdvertisment = advertisment.map((item) => {\n        if (item._id == action.payload._id) {\n          return action.payload;\n        }\n        return item;\n      });\n      return {\n        ...state,\n        advertisment: updatedAdvertisment,\n      };\n    case DELETE_ADVERTISMENT:\n      var { advertisment } = state;\n      var updatedAdvertisment = advertisment.filter(\n        (item) => item._id !== action.payload\n      );\n      return {\n        ...state,\n        advertisment: updatedAdvertisment,\n      };\n\n    case DELETE_SUBSCRIPTION:\n      var { subscriptions } = state;\n      var updatedSubscriptions = subscriptions.filter(\n        (item) => item._id !== action.payload\n      );\n      return {\n        ...state,\n        subscriptions: updatedSubscriptions,\n      };\n\n    case GET_USERS:\n      return {\n        ...state,\n        users: action.payload,\n      };\n    case GET_CAPACITY:\n      return {\n        ...state,\n        capacity: action.payload,\n      };\n    case ADD_CAPACITY:\n      var {\n        capacity: { capacityList },\n      } = state;\n\n      return {\n        ...state,\n        capacity: { capacityList: [action.payload, ...capacityList] },\n      };\n\n    case EDIT_CAPACITY:\n      var {\n        capacity: { capacityList },\n      } = state;\n      var updatedCapacity = capacityList.map((item) => {\n        if (item.id == action.payload.id) {\n          return action.payload;\n        }\n        return item;\n      });\n      return {\n        ...state,\n        types: { capacityList: updatedCapacity },\n      };\n    case GET_MACHINES:\n      return {\n        ...state,\n        machines: action.payload,\n      };\n    case ADD_MACHINE:\n      var {\n        machines: { productsData },\n      } = state;\n\n      return {\n        ...state,\n        machines: { productsData: [action.payload, ...productsData] },\n      };\n\n    case EDIT_MACHINE:\n      var {\n        machines: { productsData },\n      } = state;\n      var updatedCapacity = productsData.map((item) => {\n        if (item.id == action.payload.id) {\n          return action.payload;\n        }\n        return item;\n      });\n      return {\n        ...state,\n        machines: { productsData: updatedCapacity },\n      };\n    case GET_TYPE:\n      return {\n        ...state,\n        types: action.payload,\n      };\n\n    case ADD_TYPE:\n      var {\n        types: { typeList },\n      } = state;\n\n      return {\n        ...state,\n        types: { typeList: [action.payload, ...typeList] },\n      };\n\n    case EDIT_TYPE:\n      var {\n        types: { typeList },\n      } = state;\n      var updatedTypes = typeList.map((item) => {\n        if (item.id == action.payload.id) {\n          return action.payload;\n        }\n        return item;\n      });\n      return {\n        ...state,\n        types: { typeList: updatedTypes },\n      };\n    case GET_CATEGORY:\n      return {\n        ...state,\n        category: action.payload,\n      };\n    case ADD_CATEGORY:\n      var {\n        category: { categoryList },\n      } = state;\n\n      return {\n        ...state,\n        category: { categoryList: [action.payload, ...categoryList] },\n      };\n\n    case EDIT_CATEGORY:\n      var {\n        category: { categoryList },\n      } = state;\n      var updatedTypes = categoryList.map((item) => {\n        if (item.id == action.payload.id) {\n          return action.payload;\n        }\n        return item;\n      });\n      return {\n        ...state,\n        category: { categoryList: updatedTypes },\n      };\n    case SELECT_IMAGE:\n      return {\n        ...state,\n        selectedImage: action.payload,\n      };\n    case GET_ORDERS:\n      return {\n        ...state,\n        orders: action.payload,\n      };\n    case UPDATE_ORDERS_STATUS:\n      var {\n        orders: { orderData },\n      } = state;\n      var updatedOrder = orderData.map((item) => {\n        if (item.id == action.payload.order_id) {\n          return { ...item, status: action.payload.status };\n        }\n        return item;\n      });\n      return {\n        ...state,\n        orders: { orderData: updatedOrder },\n      };\n    case GET_INQUIRY:\n      return {\n        ...state,\n        inquiry: action.payload,\n      };\n    case GET_NOTIFICATION:\n      return {\n        ...state,\n        notification: action.payload,\n      };\n    default:\n      return state;\n  }\n}\n","import { createStore, combineReducers, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\n\nimport userReducer from \"./reducers/users\";\nimport uiReducer from \"./reducers/uiReducer\";\nimport allReducer from \"./reducers/allapi\";\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst reducers = combineReducers({\n  user: userReducer,\n  UI: uiReducer,\n  allapi: allReducer,\n});\n\nconst composeEnhancers =\n  typeof window === \"object\" && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n    ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({})\n    : compose;\n\nconst enhancer = composeEnhancers(applyMiddleware(...middleware));\nconst store = createStore(reducers, initialState, enhancer);\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from \"react-redux\";\nimport store from \"./store/store\";\nimport { LocalizeProvider, localizeReducer } from \"react-localize-redux\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}